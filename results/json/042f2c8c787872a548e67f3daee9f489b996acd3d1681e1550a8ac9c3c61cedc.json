{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    no_of_days = 0\n    for i in possible_birthdays :\n        if ( i [ 1 ] == date ) :\n            no_of_days += 1\n    if ( no_of_days != 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    no_of_months = 0\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            no_of_months += 1\n    if ( no_of_months != 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays_with_month = ( )\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            birthdays_with_month += ( i [ 1 ] , )\n    counter = 0\n    for i in birthdays_with_month :\n        if ( unique_day ( i , possible_birthdays ) == True ) :\n            counter += 1\n    if ( counter == 1 ) :\n        return True\n    else :\n        return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    no_of_days = 0\n    for i in possible_birthdays :\n        if ( i [ 1 ] == date ) :\n            no_of_days += 1\n    if ( no_of_days == 1 ) :\n        return True\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    no_of_months = 0\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            no_of_months += 1\n    if ( no_of_months != 1 ) :\n        return False\n    return True\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays_with_month = ( )\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( month == possible_birthdays [ i ] [ 0 ] ) :\n            birthdays_with_month += ( possible_birthdays [ i ] , )\n    counter = 0\n    for ref_n in range ( len ( birthdays_with_month ) ) :\n        ref_new_day = birthdays_with_month [ ref_n ] [ 1 ]\n        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :\n            counter += 1\n    if ( counter == 0 ) :\n        return False\n    else :\n        return True\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 30.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    no_of_days = 0\n    for i in possible_birthdays :\n        if ( i [ 1 ] == date ) :\n            no_of_days += 1\n    if ( no_of_days == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    no_of_months = 0\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            no_of_months += 1\n    if ( no_of_months != 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays_with_month = ( )\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( month == possible_birthdays [ i ] [ 0 ] ) :\n            birthdays_with_month += ( possible_birthdays [ i ] , )\n    counter = 0\n    for ref_n in range ( len ( birthdays_with_month ) ) :\n        ref_new_day = birthdays_with_month [ ref_n ] [ 1 ]\n        if unique_day ( ref_new_day , possible_birthdays ) :\n            counter += 1\n    if ( counter == 0 ) :\n        return False\n    else :\n        return True\n\n\n", "gpt_patch_size": 33.0}