{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 1 ] )\n    if ( b . count ( day ) == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 0 ] )\n    if ( b . count ( month ) == 1 ) :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            b . append ( birthday [ 1 ] )\n    for day in b :\n        if ( unique_day ( day , possible_birthdays ) == True ) :\n            return True\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 1 ] )\n    if ( b . count ( day ) == 1 ) :\n        return True\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 0 ] )\n    if ( b . count ( month ) == 1 ) :\n        return True\n    return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            b . append ( birthday [ 1 ] )\n    for day in b :\n        if ( unique_day ( day , possible_birthdays ) == True ) :\n            return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 2.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 1 ] )\n    if ( b . count ( day ) == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        b . append ( birthday [ 0 ] )\n    if ( b . count ( month ) == 1 ) :\n        return True\n    return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    b = [ ]\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            b . append ( birthday [ 1 ] )\n    for day in b :\n        if unique_day ( day , possible_birthdays ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 5.0}