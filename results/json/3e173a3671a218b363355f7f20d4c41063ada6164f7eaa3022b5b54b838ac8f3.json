{"bug_code": "def sort_age ( lst ) :\n    new = [ ]\n    while lst :\n        largest = lst [ 0 ]\n        for ele in lst :\n            if ( ele [ 1 ] > largest ) :\n                largest = ele\n        a . remove ( largest )\n        new . append ( largest )\n        return new\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( new ) :\n    ref_new = [ ]\n    while new :\n        largest = new [ 0 ]\n        for ele in new :\n            if ( ele [ 1 ] > largest [ 1 ] ) :\n                largest = ele\n        new . remove ( largest )\n        ref_new . append ( largest )\n    return ref_new\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 13.0, "gpt_rep_code": "def sort_age ( lst ) :\n    new = [ ]\n    while lst :\n        largest = lst [ 0 ]\n        for ele in lst :\n            if ( ele [ 1 ] > largest [ 1 ] ) :\n                largest = ele\n        lst . remove ( largest )\n        new . append ( largest )\n    return new\n\n\n", "gpt_patch_size": 6.0}