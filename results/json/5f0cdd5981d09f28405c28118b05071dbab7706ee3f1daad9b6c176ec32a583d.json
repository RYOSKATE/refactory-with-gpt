{"bug_code": "def sort_age ( lst ) :\n    new = [ ]\n    while lst :\n        curr = lst [ 0 ] [ 1 ]\n        for i in range ( lst ( old ) ) :\n            if ( lst [ i ] [ 1 ] < curr ) :\n                curr = lst [ i ] [ 1 ]\n                counter = i\n        lst . remove ( counter )\n        new . append ( counter )\n    return new\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( new ) :\n    ref_new_lst = [ ]\n    while new :\n        curr = new [ 0 ]\n        for i in range ( len ( new ) ) :\n            if ( new [ i ] [ 1 ] > curr [ 1 ] ) :\n                curr = new [ i ]\n        new . remove ( curr )\n        ref_new_lst . append ( curr )\n    return ref_new_lst\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 26.0, "gpt_rep_code": "def sort_age ( lst ) :\n    new = [ ]\n    while lst :\n        curr = lst [ 0 ]\n        for i in range ( len ( lst ) ) :\n            if ( lst [ i ] [ 1 ] > curr [ 1 ] ) :\n                curr = lst [ i ]\n        lst . remove ( curr )\n        new . append ( curr )\n    return new\n\n\n", "gpt_patch_size": 17.0}