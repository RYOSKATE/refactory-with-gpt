{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    days = [ possible_birthdays [ i ] [ 1 ] for i in range ( len ( possible_birthdays ) ) ]\n    if ( days . count ( day ) > 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    months = [ possible_birthdays [ i ] [ 0 ] for i in range ( len ( possible_birthdays ) ) ]\n    if ( months . count ( month ) > 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    days_in_month = [ ]\n    for i in range ( len ( possible_birthdays ) ) :\n        curr_month = possible_birthdays [ i ] [ 0 ]\n        curr_day = possible_birthdays [ i ] [ 1 ]\n        if ( curr_month == month ) :\n            days_in_month . append ( curr_day )\n    for day in days_in_month :\n        if unique_day ( day , possible_birthdays ) :\n            return True\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    if ( tuple ( map ( ( lambda days : days [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :\n        return True\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    if ( tuple ( map ( ( lambda months : months [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :\n        return True\n    return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    day = ( )\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 0 ] == month ) :\n            day += ( possible_birthdays [ i ] [ 1 ] , )\n    for i in range ( len ( day ) ) :\n        if unique_day ( day [ i ] , possible_birthdays ) :\n            return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 84.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    if ( tuple ( map ( ( lambda days : days [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    if ( tuple ( map ( ( lambda months : months [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :\n        return True\n    return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    day = ( )\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 0 ] == month ) :\n            day += ( possible_birthdays [ i ] [ 1 ] , )\n    for i in range ( len ( day ) ) :\n        if unique_day ( day [ i ] , possible_birthdays ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 84.0}