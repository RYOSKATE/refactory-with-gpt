{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    i = 0\n    count = 0\n    while ( i <= len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 1 ] == date ) :\n            count += 1\n            i += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 0 ] == month ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    if ( month == 'June' ) :\n        return True\n    elif ( month == 'May' ) :\n        return True\n    else :\n        return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    i = 0\n    count = 0\n    while ( i < len ( possible_birthdays ) ) :\n        pass\n        if ( possible_birthdays [ i ] [ 1 ] == date ) :\n            count += 1\n        i += 1\n    pass\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\n    pass\n\n\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        pass\n        if ( possible_birthdays [ i ] [ 0 ] == month ) :\n            count += 1\n        pass\n    pass\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\n    pass\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    pass\n    for possible_birthday in possible_birthdays :\n        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :\n            return True\n        else :\n            pass\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 33.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    i = 0\n    count = 0\n    while ( i < len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 1 ] == date ) :\n            count += 1\n        i += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ i ] [ 0 ] == month ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    for possible_birthday in possible_birthdays :\n        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 24.0}