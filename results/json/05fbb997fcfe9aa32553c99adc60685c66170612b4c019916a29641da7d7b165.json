{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        birthday = i [ 1 ]\n        if ( day == birthday ) :\n            count = ( count + 1 )\n        else :\n            count = count\n    if ( count > 1 ) :\n        return False\n    elif ( count <= 1 ) :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        birthday = i [ 0 ]\n        if ( month == birthday ) :\n            count = ( count + 1 )\n        else :\n            count = count\n    if ( count > 1 ) :\n        return False\n    elif ( count <= 1 ) :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup_month_1 = ( )\n    tup_month_2 = ( )\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            tup_month_1 = ( tup_month_1 + ( i , ) )\n        else :\n            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )\n    for j in tup_month_1 :\n        day = j [ 1 ]\n        if ( day in tup_month_2 ) :\n            continue\n        elif ( day not in tup_month_2 ) :\n            return True\n    else :\n        return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        if ( day == i [ 1 ] ) :\n            count = ( count + 1 )\n        else :\n            count = count\n    if ( count == 1 ) :\n        return True\n    elif ( count <= 1 ) :\n        pass\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            count = ( count + 1 )\n        else :\n            count = count\n    if ( count == 1 ) :\n        return True\n    elif ( count <= 1 ) :\n        pass\n    return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup_month_1 = ( )\n    tup_month_2 = ( )\n    for i in possible_birthdays :\n        if unique_day ( i [ 1 ] , possible_birthdays ) :\n            tup_month_1 = ( tup_month_1 + ( i , ) )\n        else :\n            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )\n    for ref_i in tup_month_1 :\n        if ( ref_i [ 0 ] == month ) :\n            return True\n        elif False :\n            pass\n    else :\n        return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 53.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        if ( day == i [ 1 ] ) :\n            count = ( count + 1 )\n    if ( count == 1 ) :\n        return True\n    elif ( count <= 1 ) :\n        pass\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            count = ( count + 1 )\n    if ( count == 1 ) :\n        return True\n    elif ( count <= 1 ) :\n        pass\n    return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup_month_1 = ( )\n    tup_month_2 = ( )\n    for i in possible_birthdays :\n        if unique_day ( i [ 1 ] , possible_birthdays ) :\n            tup_month_1 = ( tup_month_1 + ( i , ) )\n        else :\n            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )\n    for ref_i in tup_month_1 :\n        if ( ref_i [ 0 ] == month ) :\n            return True\n        elif False :\n            pass\n    else :\n        return False\n\n\n", "gpt_patch_size": 59.0}