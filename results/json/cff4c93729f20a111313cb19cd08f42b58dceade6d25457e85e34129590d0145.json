{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day in birthday [ 1 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday_month in possible_birthdays :\n        if ( month in birthday_month [ 0 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_tuple = ( )\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            month_tuple += ( birthday , )\n        else :\n            continue\n    for day in month_tuple :\n        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day == birthday [ 1 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday_month in possible_birthdays :\n        if ( month in birthday_month [ 0 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_tuple = ( )\n    for ref_i in possible_birthdays :\n        if ( ref_i [ 0 ] == month ) :\n            month_tuple += ( ref_i , )\n        else :\n            continue\n    for ref_i in month_tuple :\n        if ( unique_day ( ref_i [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 10.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day == birthday [ 1 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday_month in possible_birthdays :\n        if ( month == birthday_month [ 0 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_tuple = ( )\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            month_tuple += ( birthday , )\n        else :\n            continue\n    for day in month_tuple :\n        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 2.0}