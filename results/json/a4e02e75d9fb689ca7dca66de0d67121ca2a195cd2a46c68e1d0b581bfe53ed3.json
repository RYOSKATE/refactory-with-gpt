{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        if ( day in date ) :\n            counter += 1\n    if ( counter > 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        if ( month in date ) :\n            counter += 1\n        if ( counter > 1 ) :\n            return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    dates = ( )\n    for date in possible_birthdays :\n        ( months , day ) = date\n        if unique_day ( day , possible_birthdays ) :\n            dates += ( months , )\n    return ( month in dates )\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        pass\n        if ( day in date ) :\n            counter += 1\n        pass\n    pass\n    if ( counter != 1 ) :\n        return False\n    return True\n\n\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        pass\n        if ( month in date ) :\n            counter += 1\n        pass\n    pass\n    if ( counter != 1 ) :\n        return False\n    return True\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    dates = ( )\n    for date in possible_birthdays :\n        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :\n            return True\n        pass\n    return ( month in dates )\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 28.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        if ( day == date [ 1 ] ) :\n            counter += 1\n    if ( counter != 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for date in possible_birthdays :\n        if ( month == date [ 0 ] ) :\n            counter += 1\n        if ( counter > 1 ) :\n            return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    dates = ( )\n    for date in possible_birthdays :\n        if unique_day ( date [ 1 ] , possible_birthdays ) :\n            dates += ( date [ 0 ] , )\n    return ( month in dates )\n\n\n", "gpt_patch_size": null}