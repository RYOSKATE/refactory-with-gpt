{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( date in i ) :\n            counter += 1\n    if ( counter > 1 ) :\n        return False\n    else :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( month in i ) :\n            counter += 1\n    if ( counter > 1 ) :\n        return False\n    else :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays = ( )\n    for i in possible_birthdays :\n        if ( month in i ) :\n            birthdays += ( i , )\n    for i in birthdays :\n        if ( not unique_day ( i [ 1 ] , possible_birthdays ) ) :\n            result = False\n        else :\n            result = True\n            break\n    return result\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( date in i ) :\n            counter += 1\n    if ( counter == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( month in i ) :\n            counter += 1\n    if ( counter == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays = ( )\n    for ref_x in possible_birthdays :\n        if ( month in ref_x ) :\n            birthdays += ( ref_x [ 1 ] , )\n    for ref_x in birthdays :\n        result = unique_day ( ref_x , possible_birthdays )\n        if ( result == False ) :\n            result = False\n        else :\n            return True\n    return result\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 21.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( date in i ) :\n            counter += 1\n    if ( counter == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    for i in possible_birthdays :\n        if ( month in i ) :\n            counter += 1\n    if ( counter == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    birthdays = ( )\n    for i in possible_birthdays :\n        if ( month in i ) :\n            birthdays += ( i , )\n    for i in birthdays :\n        result = unique_day ( i [ 1 ] , possible_birthdays )\n        if ( result == False ) :\n            result = False\n        else :\n            return True\n    return result\n\n\n", "gpt_patch_size": 10.0}