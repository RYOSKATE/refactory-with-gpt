{"bug_code": "def sort_age ( lst ) :\n    for i in range ( 0 , len ( lst ) ) :\n        this = lst [ 0 ]\n        for j in range ( 1 , ( len ( lst ) + 1 ) ) :\n            a = ( len ( lst ) - j )\n            if ( lst [ a ] [ 1 ] > this [ 1 ] ) :\n                lst = ( ( lst [ 1 : ( a + 1 ) ] + [ this ] ) + lst [ ( a + 1 ) : ] )\n                break\n    return lst\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( lst ) :\n    for i in range ( len ( lst ) ) :\n        for ref_i in range ( ( len ( lst ) - 1 ) ) :\n            if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :\n                ( lst [ ref_i ] , lst [ ( ref_i + 1 ) ] ) = ( lst [ ( ref_i + 1 ) ] , lst [ ref_i ] )\n    return lst\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 48.0, "gpt_rep_code": "def sort_age ( lst ) :\n    for i in range ( len ( lst ) ) :\n        for ref_i in range ( ( len ( lst ) - 1 ) ) :\n            if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :\n                ( lst [ ref_i ] , lst [ ( ref_i + 1 ) ] ) = ( lst [ ( ref_i + 1 ) ] , lst [ ref_i ] )\n    return lst\n\n\n", "gpt_patch_size": 48.0}