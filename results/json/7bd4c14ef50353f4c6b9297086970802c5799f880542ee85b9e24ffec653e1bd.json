{"bug_code": "def sort_age ( lst ) :\n    result = [ ]\n    maximum = 0\n    for i in lst :\n        if ( i [ 1 ] > maximum ) :\n            maximum = i [ 1 ]\n            result . insert ( 0 , i )\n        else :\n            result . append ( i )\n    return result\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( lst ) :\n    result = [ ]\n    maximum = 0\n    while lst :\n        maximum = lst [ 0 ]\n        for i in lst :\n            pass\n            if ( i [ 1 ] > maximum [ 1 ] ) :\n                maximum = i\n        result . append ( maximum )\n        lst . remove ( maximum )\n    return result\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 22.0, "gpt_rep_code": "def sort_age ( lst ) :\n    result = [ ]\n    maximum = 0\n    while lst :\n        maximum = lst [ 0 ]\n        for i in lst :\n            if ( i [ 1 ] > maximum [ 1 ] ) :\n                maximum = i\n        result . append ( maximum )\n        lst . remove ( maximum )\n    return result\n\n\n", "gpt_patch_size": 21.0}