{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    if ( ( day == '18' ) or '19' ) :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    return\ndef contains_unique_day ( month , possible_birthdays ) :\n    return\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    if ( tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , possible_birthdays ) ) . count ( date ) == 1 ) :\n        return True\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]\n    return ( ref_months . count ( month ) == 1 )\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 69.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    if ( date in [ birthday [ 1 ] for birthday in possible_birthdays ] . count ( date ) == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    ref_months = [ birthday [ 0 ] for birthday in possible_birthdays ]\n    if ( ref_months . count ( month ) == 1 ) :\n        return True\n    return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    unique_days = [ birthday [ 1 ] for birthday in possible_birthdays if ( birthday [ 0 ] == month ) ]\n    if ( len ( unique_days ) > 0 ) :\n        return True\n    return False\n\n\n", "gpt_patch_size": null}