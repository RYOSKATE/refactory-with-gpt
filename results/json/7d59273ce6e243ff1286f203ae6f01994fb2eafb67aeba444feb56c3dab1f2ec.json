{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( date == possible_birthdays [ i ] [ 1 ] ) :\n            count += 1\n        if ( count == 1 ) :\n            return True\n        else :\n            return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( month == possible_birthdays [ i ] [ 0 ] ) :\n            count += 1\n        if ( count == 1 ) :\n            return True\n        else :\n            return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    return\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    count = ( )\n    for i in possible_birthdays :\n        pass\n        if ( date == i [ 1 ] ) :\n            count = ( count + ( date , ) )\n        pass\n    if True :\n        if ( len ( count ) == 1 ) :\n            return True\n        return False\n    pass\n\n\ndef unique_month ( month , possible_birthdays ) :\n    ref_months = map ( ( lambda ref_x : ref_x [ 0 ] ) , possible_birthdays )\n    count = 0\n    for i in ref_months :\n        pass\n        if ( month == i ) :\n            count += 1\n        pass\n    pass\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\n    pass\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 82.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( date == possible_birthdays [ i ] [ 1 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( month == possible_birthdays [ i ] [ 0 ] ) :\n            count += 1\n    if ( count == 1 ) :\n        return True\n    else :\n        return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    count = 0\n    for i in range ( len ( possible_birthdays ) ) :\n        if ( ( month == possible_birthdays [ i ] [ 0 ] ) and unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) ) :\n            count += 1\n    if ( count > 0 ) :\n        return True\n    else :\n        return False\n\n\n", "gpt_patch_size": 49.0}