{"bug_code": "def sort_age ( lst ) :\n    res = [ ]\n    age_list = [ ]\n    while lst :\n        for i in range ( len ( lst ) ) :\n            age_list = ( age_list + [ lst [ i ] [ 1 ] ] )\n        for i in lst :\n            if ( max ( age_list ) == i [ 1 ] ) :\n                res = ( res + [ i ] )\n            else :\n                res = res\n        lst . remove ( i )\n        age_list . remove ( i [ 1 ] )\n    return res\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( res ) :\n    ref_slist = [ ]\n    while res :\n        ref_elder = res [ 0 ]\n        for i in range ( len ( res ) ) :\n            if ( res [ i ] [ 1 ] > ref_elder [ 1 ] ) :\n                ref_elder = res [ i ]\n            else :\n                res = res\n            pass\n        ref_slist . append ( ref_elder )\n        res . remove ( ref_elder )\n    return ref_slist\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 46.0, "gpt_rep_code": "def sort_age ( lst ) :\n    res = [ ]\n    while lst :\n        ref_elder = lst [ 0 ]\n        for i in range ( len ( lst ) ) :\n            if ( lst [ i ] [ 1 ] > ref_elder [ 1 ] ) :\n                ref_elder = lst [ i ]\n            else :\n                lst = lst\n            pass\n        res . append ( ref_elder )\n        lst . remove ( ref_elder )\n    return res\n\n\n", "gpt_patch_size": 44.0}