{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    if ( int ( date ) in possible_birthdays ) :\n        return False\n    else :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    if ( month in possible_birthdays ) :\n        return False\n    else :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    if ( ( not unique_day ) and ( not unique_month ) ) :\n        return False\n    else :\n        return True\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    if ( count_dates ( date , possible_birthdays ) == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    if ( count_months ( month , possible_birthdays ) == 1 ) :\n        return True\n    else :\n        return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )\n    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )\n    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )\n    if ( True in ref_ans ) :\n        return True\n    else :\n        return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 60.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    if ( int ( date ) in possible_birthdays ) :\n        return False\n    else :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    if ( month in possible_birthdays ) :\n        return False\n    else :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )\n    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )\n    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )\n    if ( True in ref_ans ) :\n        return True\n    else :\n        return False\n\n\n", "gpt_patch_size": null}