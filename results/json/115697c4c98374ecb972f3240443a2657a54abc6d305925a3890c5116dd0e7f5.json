{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    unique_day_counter = 0\n    for i in possible_birthdays :\n        if ( day == i [ 1 ] ) :\n            unique_day_counter += 1\n    if ( unique_day_counter != 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    unique_month_counter = 0\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            unique_month_counter += 1\n    if ( unique_month_counter != 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    return\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    unique_day_counter = 0\n    for i in possible_birthdays :\n        if ( day == i [ 1 ] ) :\n            unique_day_counter += 1\n    if ( unique_day_counter != 1 ) :\n        return False\n    return True\n\n\ndef unique_month ( month , possible_birthdays ) :\n    unique_month_counter = 0\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            unique_month_counter += 1\n    if ( unique_month_counter != 1 ) :\n        return False\n    return True\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 32.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    unique_day_counter = 0\n    for i in possible_birthdays :\n        if ( day == i [ 1 ] ) :\n            unique_day_counter += 1\n    if ( unique_day_counter != 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    unique_month_counter = 0\n    for i in possible_birthdays :\n        if ( month == i [ 0 ] ) :\n            unique_month_counter += 1\n    if ( unique_month_counter != 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    unique_days = tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) )\n    return ( len ( unique_days ) > 0 )\n\n\n", "gpt_patch_size": 35.0}