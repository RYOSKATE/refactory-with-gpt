{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        date = possible_birthdays [ counter ] [ 1 ]\n        if ( date == day ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    if ( result > 1 ) :\n        return False\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        chosen_month = possible_birthdays [ counter ] [ 0 ]\n        if ( chosen_month == month ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    if ( result > 1 ) :\n        return False\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    counter = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        get_month = possible_birthdays [ counter ] [ 0 ]\n        if ( get_month == month ) :\n            test_date = possible_birthdays [ counter ] [ 1 ]\n            if ( unique_day ( test_date , possible_birthdays ) == True ) :\n                return True\n        counter = ( counter + 1 )\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ counter ] [ 1 ] == day ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    pass\n    if ( result == 1 ) :\n        return True\n    return False\n\n\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ counter ] [ 0 ] == month ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    pass\n    if ( result == 1 ) :\n        return True\n    return False\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    for i in possible_birthdays :\n        if ( month in i ) :\n            if unique_day ( i [ 1 ] , possible_birthdays ) :\n                return True\n            pass\n        pass\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 61.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ counter ] [ 1 ] == day ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    pass\n    if ( result == 1 ) :\n        return True\n    return False\ndef unique_month ( month , possible_birthdays ) :\n    counter = 0\n    result = 0\n    while ( counter < len ( possible_birthdays ) ) :\n        if ( possible_birthdays [ counter ] [ 0 ] == month ) :\n            result = ( result + 1 )\n        counter = ( counter + 1 )\n    pass\n    if ( result == 1 ) :\n        return True\n    return False\ndef contains_unique_day ( month , possible_birthdays ) :\n    for i in possible_birthdays :\n        if ( month in i ) :\n            if unique_day ( i [ 1 ] , possible_birthdays ) :\n                return True\n            pass\n        pass\n    return False\n\n\n", "gpt_patch_size": 61.0}