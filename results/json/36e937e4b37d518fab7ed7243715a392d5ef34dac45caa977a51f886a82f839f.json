{"bug_code": "def unique_day ( date , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    while ( len ( bdaylist ) > 0 ) :\n        single = bdaylist [ 0 ]\n        if ( single [ 1 ] == day ) :\n            count = ( count + 1 )\n        if ( count == 2 ) :\n            return False\n            break\n        bdaylist = bdaylist [ 1 : ]\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    while ( len ( bdaylist ) > 0 ) :\n        single = bdaylist [ 0 ]\n        if ( single [ 0 ] == month ) :\n            count = ( count + 1 )\n        if ( count == 2 ) :\n            return False\n            break\n        bdaylist = bdaylist [ 1 : ]\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_list = ( )\n    bday_list = possible_birthdays\n    while ( len ( bday_list ) > 0 ) :\n        if ( bday_list [ 0 ] [ 0 ] == month ) :\n            month_list = ( month_list + ( bday_list [ 0 ] , ) )\n        bday_list = bday_list [ 1 : ]\n    while ( len ( month_list ) > 0 ) :\n        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :\n            return True\n        month_list = month_list [ 1 : ]\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( date , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    for i in possible_birthdays :\n        if ( i [ 1 ] == date ) :\n            count += 1\n    pass\n    if ( count != 1 ) :\n        return False\n    else :\n        return True\n\n\ndef unique_month ( month , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            count += 1\n    pass\n    if ( count != 1 ) :\n        return False\n    else :\n        return True\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_list = ( )\n    bday_list = possible_birthdays\n    for i in possible_birthdays :\n        pass\n        if ( i [ 0 ] == month ) :\n            month_list += ( i , )\n        bday_list = bday_list [ 1 : ]\n    pass\n    for i in month_list :\n        pass\n        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 99.0, "gpt_rep_code": "def unique_day ( date , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    for i in possible_birthdays :\n        if ( i [ 1 ] == date ) :\n            count += 1\n    pass\n    if ( count != 1 ) :\n        return False\n    else :\n        return True\ndef unique_month ( month , possible_birthdays ) :\n    bdaylist = possible_birthdays\n    count = 0\n    for i in possible_birthdays :\n        if ( i [ 0 ] == month ) :\n            count += 1\n    pass\n    if ( count != 1 ) :\n        return False\n    else :\n        return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    month_list = ( )\n    bday_list = possible_birthdays\n    for i in possible_birthdays :\n        pass\n        if ( i [ 0 ] == month ) :\n            month_list += ( i , )\n        bday_list = bday_list [ 1 : ]\n    pass\n    for i in month_list :\n        pass\n        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 99.0}