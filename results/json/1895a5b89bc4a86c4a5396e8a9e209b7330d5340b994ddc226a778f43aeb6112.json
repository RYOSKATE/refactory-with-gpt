{"bug_code": "def sort_age ( lst ) :\n    people = [ ]\n    while lst :\n        i = lst [ 0 ]\n        for a in lst :\n            if ( i [ 1 ] <= a [ 1 ] ) :\n                i = a\n        lst . remove ( i )\n        final . append ( i )\n    return final\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( people ) :\n    ref_people = [ ]\n    while people :\n        i = people [ 0 ]\n        for a in people :\n            if ( i [ 1 ] <= a [ 1 ] ) :\n                i = a\n        people . remove ( i )\n        ref_people . append ( i )\n    return ref_people\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 8.0, "gpt_rep_code": "def sort_age ( lst ) :\n    final = [ ]\n    while lst :\n        i = lst [ 0 ]\n        for a in lst :\n            if ( i [ 1 ] <= a [ 1 ] ) :\n                i = a\n        lst . remove ( i )\n        final . append ( i )\n    return final\n\n\n", "gpt_patch_size": 1.0}