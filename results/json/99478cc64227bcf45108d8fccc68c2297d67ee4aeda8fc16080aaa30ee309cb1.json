{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day == birthday [ 1 ] ) :\n            count += 1\n    return ( True if ( count == 1 ) else False )\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            count += 1\n    return ( True if ( count == 1 ) else False )\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup = ( )\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            tup += ( birthday , )\n    for each in tup :\n        if ( ( each [ 1 ] == '18' ) or ( each [ 1 ] == '19' ) ) :\n            return True\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day == birthday [ 1 ] ) :\n            count += 1\n    return ( True if ( count == 1 ) else False )\n\n\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            count += 1\n    return ( True if ( count == 1 ) else False )\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup = ( )\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            tup += ( birthday , )\n    for each in tup :\n        if ( unique_day ( each [ 1 ] , possible_birthdays ) == True ) :\n            return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 12.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( day == birthday [ 1 ] ) :\n            count += 1\n    return ( count == 1 )\ndef unique_month ( month , possible_birthdays ) :\n    count = 0\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            count += 1\n    return ( count == 1 )\ndef contains_unique_day ( month , possible_birthdays ) :\n    tup = ( )\n    for birthday in possible_birthdays :\n        if ( month == birthday [ 0 ] ) :\n            tup += ( birthday , )\n    for each in tup :\n        if unique_day ( each [ 1 ] , possible_birthdays ) :\n            return True\n    return False\n\n\n", "gpt_patch_size": 18.0}