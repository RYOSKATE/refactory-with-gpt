{"bug_code": "def unique_day ( day , possible_birthdays ) :\n    a = ''\n    for date in possible_birthdays :\n        if ( a == date [ 1 ] ) :\n            return False\n        elif ( day == date [ 1 ] ) :\n            a = day\n    return True\ndef unique_month ( month , possible_birthdays ) :\n    a = ''\n    for date in possible_birthdays :\n        if ( a == date [ 0 ] ) :\n            return False\n        elif ( month == date [ 0 ] ) :\n            a = month\n    return True\ndef contains_unique_day ( month , possible_birthdays ) :\n    for date in possible_birthdays :\n        if ( month == date [ 0 ] ) :\n            if unique_day ( date [ 1 ] , possible_birthdays ) :\n                return True\n    return False\n\n\n", "description": "Task: Unique dates and months\nImplement unique_day, unique_month and contains_unique_day.\n", "sample_correct_code_blocks": ["def unique_day ( day , possible_birthdays ) :\n    ref_total = 0\n    for ref_i in possible_birthdays :\n        if ( day == ref_i [ 1 ] ) :\n            ref_total = ( ref_total + 1 )\n        elif False :\n            pass\n    return ( ref_total == 1 )\n\n\ndef unique_month ( month , possible_birthdays ) :\n    ref_total = 0\n    for ref_i in possible_birthdays :\n        if ( month == ref_i [ 0 ] ) :\n            ref_total = ( ref_total + 1 )\n        elif False :\n            pass\n    return ( ref_total == 1 )\n\n\ndef contains_unique_day ( month , possible_birthdays ) :\n    for date in possible_birthdays :\n        if ( month == date [ 0 ] ) :\n            if unique_day ( date [ 1 ] , possible_birthdays ) :\n                return True\n    return False\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 45.0, "gpt_rep_code": "def unique_day ( day , possible_birthdays ) :\n    ref_total = 0\n    for ref_i in possible_birthdays :\n        if ( day == ref_i [ 1 ] ) :\n            ref_total = ( ref_total + 1 )\n        elif False :\n            pass\n    return ( ref_total == 1 )\ndef unique_month ( month , possible_birthdays ) :\n    ref_total = 0\n    for ref_i in possible_birthdays :\n        if ( month == ref_i [ 0 ] ) :\n            ref_total = ( ref_total + 1 )\n        elif False :\n            pass\n    return ( ref_total == 1 )\ndef contains_unique_day ( month , possible_birthdays ) :\n    for date in possible_birthdays :\n        if ( month == date [ 0 ] ) :\n            if unique_day ( date [ 1 ] , possible_birthdays ) :\n                return True\n    return False\n\n\n", "gpt_patch_size": 45.0}