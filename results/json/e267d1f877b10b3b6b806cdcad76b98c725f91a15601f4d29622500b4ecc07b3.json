{"bug_code": "def sort_age ( lst ) :\n    a = lst\n    sort = [ ]\n    while a :\n        smallest = a [ 0 ]\n        for element in a :\n            if ( element [ 1 ] < smallest [ 1 ] ) :\n                smallest = element\n        a . remove ( smallest )\n        sort . append ( smallest )\n        sort . reverse ( )\n    return sort\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( a ) :\n    lst = a\n    sort = [ ]\n    while a :\n        smallest = a [ 0 ]\n        for element in lst :\n            if ( element [ 1 ] < smallest [ 1 ] ) :\n                smallest = element\n        a . remove ( smallest )\n        sort . append ( smallest )\n        sort . reverse\n    sort . reverse ( )\n    return sort\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 9.0, "gpt_rep_code": "def sort_age ( lst ) :\n    a = lst\n    sort = [ ]\n    while a :\n        smallest = a [ 0 ]\n        for element in a :\n            if ( element [ 1 ] > smallest [ 1 ] ) :\n                smallest = element\n        a . remove ( smallest )\n        sort . append ( smallest )\n    sort . reverse ( )\n    return sort\n\n\n", "gpt_patch_size": null}