{"bug_code": "def sort_age ( lst ) :\n    list1 = [ ]\n    while lst :\n        biggest = lst [ 0 ] [ 1 ]\n        b = lst [ 0 ]\n        for i in range ( 1 , len ( lst ) ) :\n            if ( lst [ i ] [ 1 ] > biggest ) :\n                biggest = lst [ i ] [ 1 ]\n                s = ( lst [ i ] , )\n        lst . remove ( biggest )\n        list1 . append ( biggest )\n    return list1\n\n\n", "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n", "sample_correct_code_blocks": ["def sort_age ( list1 ) :\n    ref_result = [ ]\n    while list1 :\n        ref_biggest = list1 [ 0 ] [ 1 ]\n        biggest = list1 [ 0 ]\n        for i in list1 :\n            if ( i [ 1 ] > ref_biggest ) :\n                ref_biggest = i [ 1 ]\n                biggest = i\n        list1 . remove ( biggest )\n        ref_result . append ( biggest )\n    return ref_result\n"], "gpt_model": "gpt-3.5-turbo", "patch_size": 29.0, "gpt_rep_code": "def sort_age ( lst ) :\n    list1 = [ ]\n    while lst :\n        biggest = lst [ 0 ] [ 1 ]\n        b = lst [ 0 ]\n        for i in range ( 1 , len ( lst ) ) :\n            if ( lst [ i ] [ 1 ] > biggest ) :\n                biggest = lst [ i ] [ 1 ]\n                b = lst [ i ]\n        lst . remove ( b )\n        list1 . append ( b )\n    return list1\n\n\n", "gpt_patch_size": 4.0}