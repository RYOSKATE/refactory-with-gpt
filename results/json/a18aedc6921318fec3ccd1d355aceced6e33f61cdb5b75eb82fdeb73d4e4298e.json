{
    "bug_code": "def sort_age ( lst ) :\n    new_lst = [ ]\n    for i in range ( len ( lst ) ) :\n        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :\n            new_lst . append ( lst [ i ] )\n    lst . reverse ( )\n    return lst\n    pass\n\n\n",
    "description": "Task: Sorting Tuples\nCan we sort items other than integers? For this question, you will be sorting tuples! We represent a person using a tuple (<gender>, <age>). Given a list of people, write a function sort_age that sorts the people and return a list in an order such that the older people are at the front of the list. An example of the list of people is [(\"M\", 23), (\"F\", 19), (\"M\", 30)]. The sorted list would look like [(\"M\", 30), (\"M\", 23), (\"F\", 19)]. You may assume that no two members in the list of people are of the same age.\n",
    "sample_correct_code_blocks": [
        "def sort_age ( lst ) :\n    if True :\n        pass\n    for i in range ( 0 , ( len ( lst ) - 1 ) ) :\n        pass\n        for ref_j in range ( ( i + 1 ) , len ( lst ) ) :\n            pass\n            if ( lst [ i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :\n                tmp = lst [ i ]\n                lst [ i ] = lst [ ref_j ]\n                lst [ ref_j ] = tmp\n            else :\n                pass\n        pass\n    return lst\n"
    ],
    "gpt_model": "gpt-3.5-turbo",
    "patch_size": 49.0,
    "gpt_rep_code": "def sort_age ( lst ) :\n    for i in range ( 0 , ( len ( lst ) - 1 ) ) :\n        for ref_j in range ( ( i + 1 ) , len ( lst ) ) :\n            if ( lst [ i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :\n                tmp = lst [ i ]\n                lst [ i ] = lst [ ref_j ]\n                lst [ ref_j ] = tmp\n    return lst\n\n\n",
    "gpt_patch_size": 44.0
}