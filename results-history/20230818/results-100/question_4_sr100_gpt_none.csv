Question,Sampling Rate,Experiment ID,File Name,Status,Match (Rfty Code),Match (Ori Code),Buggy Code,Buggy Mutation,Refactored Correct Code,Original Correct File Name,Rule ID,Repair,Stru. Matching Time,Online Refactoring Time,GCR Time,Stru. Mutation Time,Block Mapping Time,Variable Mapping Time,Specification&Synthesis Time,GPT Time,Total Time,#Passed Test Case,#Test Case,RPS
question_4,100,0,wrong_4_005.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.758,1.595,0.000,0.000,0.110,0.169,0.000,2.764,6,6,0.130
question_4,100,0,wrong_4_014.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.454,0.003,0.000,0.000,0.008,0.008,0.000,0.493,6,6,0.050
question_4,100,0,wrong_4_284.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


","def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


","def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


",{'sort_age': 'correct_4_353.py'},{'sort_age': ''},"def sort_age ( newlist ) :
    ref_newlist = [ ]
    while newlist :
        oldest = newlist [ 0 ]
        for i in newlist :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
            else :
                continue
        newlist . remove ( oldest )
        ref_newlist . append ( oldest )
    return ref_newlist
",N/A,0.457,0.090,0.000,0.000,0.069,21.017,0.000,21.755,6,6,0.262
question_4,100,0,wrong_4_085.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.460,1.140,0.000,0.000,0.097,0.057,0.000,2.006,6,6,0.054
question_4,100,0,wrong_4_247.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_result = [ ]
    while list1 :
        biggest = list1 [ 0 ] [ 1 ]
        ref_tuple_biggest = list1 [ 0 ]
        for i in list1 :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                ref_tuple_biggest = i
        list1 . remove ( ref_tuple_biggest )
        ref_result . append ( ref_tuple_biggest )
    return ref_result
",N/A,0.458,2.477,0.000,0.000,0.110,33.245,0.000,36.654,6,6,0.419
question_4,100,0,wrong_4_354.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.004,0.000,0.477,6,6,0.050
question_4,100,0,wrong_4_277.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.456,0.004,0.000,0.000,0.008,0.008,0.000,0.518,6,6,0.048
question_4,100,0,wrong_4_074.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.456,0.001,0.000,0.000,0.008,0.008,0.000,0.477,6,6,0.050
question_4,100,0,wrong_4_060.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.456,1.234,0.000,0.000,0.097,0.123,0.000,2.014,6,6,0.158
question_4,100,0,wrong_4_226.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( a , ref_age )
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.751,0.064,0.000,0.000,0.018,0.194,0.000,1.034,1,6,N/A
question_4,100,0,wrong_4_181.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.457,1.817,0.000,0.000,0.161,5.623,0.000,8.203,6,6,0.102
question_4,100,0,wrong_4_111.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.458,1.129,0.000,0.000,0.096,0.058,0.000,1.751,6,6,0.054
question_4,100,0,wrong_4_087.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.457,1.132,0.000,0.000,0.097,0.058,0.000,1.752,6,6,0.054
question_4,100,0,wrong_4_152.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( lst [ i ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( lst [ i ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.458,0.038,0.000,0.000,0.026,31.554,0.000,32.364,6,6,0.133
question_4,100,0,wrong_4_155.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ] [ 1 ]
        for i in range ( lst ( old ) ) :
            if ( lst [ i ] [ 1 ] < curr ) :
                curr = lst [ i ] [ 1 ]
                counter = i
        lst . remove ( counter )
        new . append ( counter )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ] [ 1 ]
        for i in range ( lst ( old ) ) :
            if ( lst [ i ] [ 1 ] < curr ) :
                curr = lst [ i ] [ 1 ]
                counter = i
        lst . remove ( counter )
        new . append ( counter )
    return new


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new_lst = [ ]
    while new :
        curr = new [ 0 ]
        for i in range ( len ( new ) ) :
            if ( new [ i ] [ 1 ] > curr [ 1 ] ) :
                curr = new [ i ]
        new . remove ( curr )
        ref_new_lst . append ( curr )
    return ref_new_lst
",N/A,0.459,2.224,0.000,0.000,0.056,11.383,0.000,14.403,6,6,0.433
question_4,100,0,wrong_4_307.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


",{'sort_age': 'correct_4_281.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass
",N/A,0.457,1.412,0.000,0.000,0.096,0.123,0.000,2.195,6,6,0.179
question_4,100,0,wrong_4_242.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.607,0.110,0.000,0.000,0.035,2.146,0.000,2.907,1,6,N/A
question_4,100,0,wrong_4_117.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = T )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = T )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.003,0.000,0.000,0.008,0.039,0.000,0.525,6,6,0.167
question_4,100,0,wrong_4_011.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest_tup = lst [ 0 ]
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


",{'sort_age': 'correct_4_041.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest_tup = lst [ 0 ]
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result
",N/A,0.453,1.623,0.000,0.000,0.136,5.561,0.000,8.018,6,6,0.113
question_4,100,0,wrong_4_311.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.457,0.026,0.000,0.000,0.026,0.163,0.000,1.470,6,6,0.409
question_4,100,0,wrong_4_139.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list
",N/A,0.477,1.584,0.000,0.000,0.095,0.126,0.000,2.405,6,6,0.071
question_4,100,0,wrong_4_197.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.609,0.090,0.000,0.000,0.018,0.278,0.000,1.002,1,6,N/A
question_4,100,0,wrong_4_121.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ]
    firstnum = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > firstnum ) :
            result = ( ( first , ) + ( x , ) )
        else :
            result = ( ( x , ) + ( first , ) )
    return result
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ]
    firstnum = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        lst . remove ( tuple_largest )
        result . append ( tuple_largest )
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > firstnum ) :
                result = ( ( first , ) + ( x , ) )
            result = ( ( x , ) + ( first , ) )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        tuple_largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                tuple_largest = i
        lst . remove ( tuple_largest )
        result . append ( tuple_largest )
    return result


",{'sort_age': 'correct_4_090.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        ref_largest = lst [ 0 ] [ 1 ]
        ref_tuple_largest = lst [ 0 ]
        for ref_i in lst :
            pass
            if ( ref_i [ 1 ] > ref_largest ) :
                ref_largest = ref_i [ 1 ]
                ref_tuple_largest = ref_i
        lst . remove ( ref_tuple_largest )
        firstnum . append ( ref_tuple_largest )
    return firstnum
",N/A,6.485,3.639,0.000,0.001,0.100,23.789,0.000,34.263,6,6,0.818
question_4,100,0,wrong_4_037.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.470,0.003,0.000,0.000,0.008,0.067,0.000,0.553,0,6,N/A
question_4,100,0,wrong_4_059.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    b = [ ]
    n = len ( lst )
    for i in range ( n ) :
        age = lst [ i ] [ 1 ]
        a += [ age ]
        a . sort ( )
        a . reverse ( )
    for j in range ( n ) :
        for k in range ( n ) :
            if ( a [ j ] == lst [ k ] [ 1 ] ) :
                b += [ lst [ k ] ]
            else :
                continue
    return b


","def sort_age ( lst ) :
    a = [ ]
    b = [ ]
    n = len ( lst )
    for i in range ( n ) :
        age = lst [ i ] [ 1 ]
        a += [ age ]
        a . sort ( )
        a . reverse ( )
    for j in range ( n ) :
        for k in range ( n ) :
            if ( a [ j ] == lst [ k ] [ 1 ] ) :
                b += [ lst [ k ] ]
            else :
                continue
    return b


","

def sort_age(lst):
    ages = []
    for j in lst:
        ages.append(j[1])
    ages = sort(ages)
    new_lst = []
    for age in ages:
        for i in lst:
            if (age == i[1]):
                new_lst.append(i)
            else:
                pass
    return new_lst
",{'sort_age': 'correct_4_158.py'},{'sort_age': 'B2.l'},"def sort_age ( lst ) :
    ref_ages = [ ]
    for i in lst :
        ref_ages . append ( i [ 1 ] )
    ref_ages = sort ( ref_ages )
    ref_new_lst = [ ]
    for j in ref_ages :
        for k in lst :
            if ( j == k [ 1 ] ) :
                ref_new_lst . append ( k )
            else :
                pass
    return ref_new_lst
",N/A,0.722,0.023,0.000,0.000,0.340,7.399,0.000,8.492,0,6,N/A
question_4,100,0,wrong_4_253.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


",{'sort_age': 'correct_4_180.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.462,1.326,0.000,0.000,0.065,0.150,0.000,2.144,6,6,0.064
question_4,100,0,wrong_4_264.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.008,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_224.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i == max ( lst ) ) :
            a . append ( i )
        continue
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i == max ( lst ) ) :
            a . append ( i )
        continue
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( a , ref_age )
        if True :
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.755,0.059,0.000,0.000,0.019,0.194,0.000,1.033,1,6,N/A
question_4,100,0,wrong_4_023.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.459,1.353,0.000,0.000,0.055,15.459,0.000,17.429,6,6,0.395
question_4,100,0,wrong_4_073.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.457,1.120,0.000,0.000,0.058,0.093,0.000,1.880,6,6,0.043
question_4,100,0,wrong_4_094.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.004,0.000,0.000,0.008,0.004,0.000,0.498,6,6,0.050
question_4,100,0,wrong_4_057.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


","def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


","def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


",{'sort_age': 'correct_4_102.py'},{'sort_age': ''},"def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass
",N/A,0.457,1.378,0.000,0.000,0.097,0.128,0.000,2.168,6,6,0.154
question_4,100,0,wrong_4_292.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.459,1.871,0.000,0.000,0.095,10.780,0.000,13.344,6,6,0.298
question_4,100,0,wrong_4_306.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.462,1.564,0.000,0.000,0.098,0.129,0.000,2.354,6,6,0.243
question_4,100,0,wrong_4_019.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


",{'sort_age': 'correct_4_019.py'},{'sort_age': ''},"def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product
",N/A,0.458,1.603,0.000,0.000,0.095,0.133,0.000,2.416,6,6,0.023
question_4,100,0,wrong_4_041.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.469,0.001,0.000,0.000,0.008,0.005,0.000,0.487,6,6,0.050
question_4,100,0,wrong_4_077.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.004,0.000,0.477,6,6,0.050
question_4,100,0,wrong_4_044.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.000,0.000,0.000,0.009,0.004,0.000,0.477,6,6,0.050
question_4,100,0,wrong_4_272.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] > right [ 0 ] [ 1 ] ) :
            new_list . append ( left . pop ( 0 ) )
        else :
            new_list . append ( right . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        new_list . reverse
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] > right [ 0 ] [ 1 ] ) :
            new_list . append ( left . pop ( 0 ) )
        else :
            new_list . append ( right . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        new_list . reverse
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.859,0.098,0.000,0.000,0.084,10.543,0.000,12.038,6,6,0.785
question_4,100,0,wrong_4_076.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.478,0.001,0.000,0.000,0.008,0.004,0.000,0.496,6,6,0.050
question_4,100,0,wrong_4_187.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i > eldest ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i > eldest ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


",{'sort_age': 'correct_4_251.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new
",N/A,0.456,1.233,0.000,0.000,0.096,0.129,0.000,2.018,6,6,0.158
question_4,100,0,wrong_4_124.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] < firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = [ lst [ 0 ] ]
    while lst :
        largest = x
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] < firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        firstnum . append ( largest )
    return firstnum
",N/A,6.438,3.224,0.000,0.001,0.057,6.073,0.000,15.935,6,6,0.816
question_4,100,0,wrong_4_269.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.474,0.000,0.000,0.000,0.008,0.008,0.000,0.495,6,6,0.050
question_4,100,0,wrong_4_022.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return lst


","def sort_age ( lst ) :
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.481,1.328,0.000,0.000,0.053,15.423,0.000,17.383,6,6,0.457
question_4,100,0,wrong_4_161.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.004,0.000,0.475,6,6,0.050
question_4,100,0,wrong_4_323.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    new_lst = lst
    newnew = [ new_lst [ 0 ] ]
    for i in new_lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    new_lst = lst
    newnew = [ new_lst [ 0 ] ]
    for i in new_lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.591,0.043,0.000,0.000,0.046,0.229,0.000,1.508,6,6,0.817
question_4,100,0,wrong_4_262.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
        s . reverse ( )
    return s


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
        s . reverse ( )
    return s


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s


",{'sort_age': 'correct_4_316.py'},{'sort_age': ''},"def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s
",N/A,0.461,1.001,0.000,0.000,0.102,5.641,0.000,7.348,6,6,0.042
question_4,100,0,wrong_4_332.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggest - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggest - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.458,1.526,0.000,0.000,0.063,0.089,0.000,2.272,6,6,0.065
question_4,100,0,wrong_4_249.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                b = ( lst [ i ] , )
        lst . remove ( b )
        list1 . append ( b )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                b = ( lst [ i ] , )
        lst . remove ( b )
        list1 . append ( b )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        b = lst [ 0 ] [ 1 ]
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > b ) :
                b = i [ 1 ]
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.459,2.318,0.000,0.000,0.120,35.582,0.000,38.829,6,6,0.310
question_4,100,0,wrong_4_333.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( 1 , len ( lst ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
            lst . pop ( lst [ i ] )
            lst . insert ( lst [ i ] , ( i - 1 ) )
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( 1 , len ( lst ) ) :
        pass
        if False :
            lst . pop ( lst [ i ] )
            lst . insert ( lst [ i ] , ( i - 1 ) )
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.604,0.038,0.000,0.001,0.031,0.060,0.000,5.009,6,6,0.804
question_4,100,0,wrong_4_337.py,fail_other,0,0,"def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
        return new_lst [ : : ( - 1 ) ]
    pass
    for x in lst [ 1 : ] :
        pass
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        count = 0
        while ( count < len ( new_lst ) ) :
            pass
            if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                count += 1
                continue
            else :
                pass
            pass
        pass
    return new_lst [ : : ( - 1 ) ]
","

def sort_age(lst):
    if (lst == []):
        return []
    new_lst = [lst[0]]
    for x in lst[1:]:
        if (x[1] > new_lst[(- 1)][1]):
            new_lst += [x]
        count = 0
        while (count < len(new_lst)):
            if (x[1] > new_lst[count][1]):
                count += 1
                continue
            else:
                new_lst = ((new_lst[0:count] + [x]) + new_lst[count:])
                break
    return new_lst[::(- 1)]
",{'sort_age': 'correct_4_392.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        pass
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        count = 0
        while ( count < len ( new_lst ) ) :
            pass
            if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                count += 1
                continue
            else :
                new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                break
            pass
        pass
    return new_lst [ : : ( - 1 ) ]
",N/A,7.833,0.111,0.000,0.002,0.055,0.130,0.000,8.146,3,6,N/A
question_4,100,0,wrong_4_103.py,fail_other,1,0,"def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    sort1 = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( sort1 , ref_age )
            sort1 . insert ( ref_b , lst [ i ] )
    return list ( reversed ( sort1 ) )
",N/A,0.744,0.076,0.000,0.000,0.029,0.450,0.000,1.306,1,6,N/A
question_4,100,0,wrong_4_029.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = lst [ : mid ]
        lst2 = lst [ mid : ]
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = lst [ : mid ]
        lst2 = lst [ mid : ]
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.459,0.091,0.000,0.000,0.095,4.646,0.000,6.568,6,6,0.086
question_4,100,0,wrong_4_106.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > smallest [ 1 ] ) :
                smallest = k
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.457,2.204,0.000,0.000,0.064,10.738,0.000,13.593,6,6,0.511
question_4,100,0,wrong_4_267.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_list = [ ]
    while a :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest ) :
                oldest = element [ 1 ]
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


","def sort_age ( lst ) :
    sorted_list = [ ]
    while a :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest ) :
                oldest = element [ 1 ]
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


","def sort_age ( lst ) :
    sorted_list = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


",{'sort_age': 'correct_4_330.py'},{'sort_age': ''},"def sort_age ( sorted_list ) :
    ref_sorted_list = [ ]
    while sorted_list :
        oldest = sorted_list [ 0 ]
        for element in sorted_list :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        sorted_list . remove ( oldest )
        ref_sorted_list . append ( oldest )
    return ref_sorted_list
",N/A,0.459,1.463,0.000,0.000,0.054,22.942,0.000,25.046,6,6,0.318
question_4,100,0,wrong_4_045.py,success_w_mut,0,0,"def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > result [ 0 ] [ 1 ] ) :
            result . insert ( 0 , i )
        elif ( i [ 1 ] < result [ ( - 1 ) ] [ 1 ] ) :
            result . append ( i )
        else :
            for j in range ( ( len ( result ) - 1 ) ) :
                if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                    result . insert ( ( j + 1 ) , i )
    return result


","def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        pass
    result . append ( i )
    for i in range ( len ( a ) ) :
        pass
        for j in range ( ( len ( result ) - 1 ) ) :
            pass
            if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                pass
            pass
        pass
    return result
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    b = lst . copy ( )
    lst . clear ( )
    for i in b :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( b [ i ] not in lst ) ) :
                lst . append ( b [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.204,0.121,0.000,0.002,0.075,0.294,0.000,8.122,6,6,0.919
question_4,100,0,wrong_4_246.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for j in range ( 1 , len ( lst ) ) :
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for j in range ( 1 , len ( lst ) ) :
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    n = ( len ( lst ) - 1 )
    for i in range ( 0 , n ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_164.py'},{'sort_age': ''},"def sort_age ( lst ) :
    j = ( len ( lst ) - 1 )
    for ref_i in range ( 0 , j ) :
        for i in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ ref_i ] , lst [ i ] ) = ( lst [ i ] , lst [ ref_i ] )
    return lst
",N/A,0.773,0.821,0.000,0.000,0.089,0.939,0.000,3.154,6,6,0.707
question_4,100,0,wrong_4_250.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True


","def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True


","def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True
    return lst


",{'sort_age': 'correct_4_302.py'},{'sort_age': ''},"def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True
    return lst
",N/A,0.458,1.069,0.000,0.000,0.050,0.016,0.000,2.348,6,6,0.029
question_4,100,0,wrong_4_174.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.457,2.577,0.000,0.000,0.064,19.811,0.000,23.198,6,6,0.419
question_4,100,0,wrong_4_190.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
    for element in lst :
        if ( element [ 1 ] > biggest [ 1 ] ) :
            biggest = element
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                lst . remove ( biggest )
                sort . append ( biggest )
            biggest = element
        pass
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_318.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,6.941,0.713,0.000,0.001,5.105,0.374,0.000,13.249,6,6,0.068
question_4,100,0,wrong_4_345.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new_list = [ ]
    ref_largest = 0
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > ref_largest ) :
                ref_largest = i [ 1 ]
                ref_count = i
        ref_new_list = ( ref_new_list + [ ref_count ] )
        lst . remove ( ref_count )
        ref_largest = 0
    return ref_new_list
",N/A,6.535,2.999,0.000,0.001,5.159,0.708,0.000,15.553,6,6,0.881
question_4,100,0,wrong_4_028.py,fail_exception,1,1,"def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst ) . reverse
    return lst


","def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst ) . reverse
    return lst


","def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst )
    lst . reverse ( )
    return lst


",{'sort_age': 'correct_4_051.py'},{'sort_age': ''},N/A,N/A,0.721,0.038,0.000,0.000,0.027,0.000,0.000,0.812,N/A,N/A,N/A
question_4,100,0,wrong_4_112.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.481,0.000,0.000,0.000,0.008,0.007,0.000,0.501,6,6,0.050
question_4,100,0,wrong_4_238.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = list [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = list [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_298.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for x in sort :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.454,1.066,0.000,0.000,0.054,15.242,0.000,16.943,6,6,0.182
question_4,100,0,wrong_4_330.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.462,1.451,0.000,0.000,0.062,0.194,0.000,2.304,6,6,0.152
question_4,100,0,wrong_4_015.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        smallest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        sort . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.458,1.302,0.000,0.000,0.063,10.740,0.000,12.666,6,6,0.395
question_4,100,0,wrong_4_214.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.003,0.000,0.000,0.008,0.109,0.000,0.595,6,6,0.111
question_4,100,0,wrong_4_274.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
        return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
        return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_341.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ]
        for ele in new :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        new . remove ( largest )
        ref_new . append ( largest )
    return ref_new
",N/A,0.461,1.281,0.000,0.000,0.057,10.842,0.000,12.756,6,6,0.317
question_4,100,0,wrong_4_083.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.464,1.129,0.000,0.000,0.097,0.061,0.000,1.758,6,6,0.054
question_4,100,0,wrong_4_142.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.460,0.910,0.000,0.000,0.095,0.133,0.000,1.724,6,6,0.023
question_4,100,0,wrong_4_232.py,fail_other,1,0,"def sort_age ( lst ) :
    compiled = [ ]
    result = [ ]
    for i in lst :
        compiled = ( compiled + [ i [ 1 ] ] )
    compiled . sort ( )
    compiled . reverse ( )
    for i in compiled :
        for j in lst :
            if ( i == j [ 1 ] ) :
                result = ( result + [ j ] )
    return result


","def sort_age ( lst ) :
    compiled = [ ]
    result = [ ]
    for i in lst :
        compiled = ( compiled + [ i [ 1 ] ] )
    compiled . sort ( )
    compiled . reverse ( )
    for i in compiled :
        for j in lst :
            if ( i == j [ 1 ] ) :
                result = ( result + [ j ] )
    return result


","def sort_age ( lst ) :
    ages = [ ]
    for j in lst :
        ages . append ( j [ 1 ] )
    ages = sort ( ages )
    new_lst = [ ]
    for age in ages :
        for i in lst :
            if ( age == i [ 1 ] ) :
                new_lst . append ( i )
    return new_lst


",{'sort_age': 'correct_4_406.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_ages = [ ]
    for ref_j in lst :
        ref_ages . append ( ref_j [ 1 ] )
    ref_ages = sort ( ref_ages )
    ref_new_lst = [ ]
    for ref_age in ref_ages :
        for j in lst :
            if ( ref_age == j [ 1 ] ) :
                ref_new_lst . append ( j )
    return ref_new_lst
",N/A,0.460,0.031,0.000,0.000,0.093,0.438,0.000,1.029,0,6,N/A
question_4,100,0,wrong_4_071.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.458,0.807,0.000,0.000,0.052,0.015,0.000,1.475,6,6,0.114
question_4,100,0,wrong_4_164.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.484,0.003,0.000,0.000,0.008,0.043,0.000,0.553,6,6,0.250
question_4,100,0,wrong_4_297.py,success_w_mut,0,0,"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    for item in lst :
        age = max ( ages )
        if ( age == item [ 1 ] ) :
            output . append ( item )
            ages . remove ( age )
    return output


","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        ages = [ ]
        output = [ ]
        for item in lst :
            age = max ( ages )
            if ( age == item [ 1 ] ) :
                pass
            output . append ( item )
            ages . remove ( age )
        pass
    return output
","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    while ages :
        age = max ( ages )
        for item in lst :
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
    return output


",{'sort_age': 'correct_4_363.py'},{'sort_age': ''},"def sort_age ( lst ) :
    output = [ ]
    ref_output = [ ]
    for item in lst :
        output . append ( item [ 1 ] )
    pass
    while output :
        age = max ( output )
        for item in lst :
            if ( age == item [ 1 ] ) :
                ref_output . append ( item )
                output . remove ( age )
        pass
    return ref_output
",N/A,7.388,2.169,0.000,0.001,0.123,25.311,0.000,35.156,6,6,0.306
question_4,100,0,wrong_4_007.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : ( j - 1 ) ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : ( j - 1 ) ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
    pass
",N/A,0.769,0.703,0.000,0.000,0.058,0.447,0.000,2.551,6,6,0.522
question_4,100,0,wrong_4_160.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.458,0.003,0.000,0.000,0.008,0.042,0.000,0.515,0,6,N/A
question_4,100,0,wrong_4_184.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.458,1.629,0.000,0.000,0.103,0.096,0.000,2.426,6,6,0.043
question_4,100,0,wrong_4_056.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            oldest = lst [ 0 ]
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            oldest = lst [ 0 ]
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.461,1.403,0.000,0.000,0.107,0.016,0.000,2.240,6,6,0.222
question_4,100,0,wrong_4_091.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst . remove ( holder ) ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst . remove ( holder ) ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.499,0.056,0.000,0.000,0.039,0.048,0.000,0.795,6,6,0.160
question_4,100,0,wrong_4_327.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted


",{'sort_age': 'correct_4_387.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted
",N/A,0.458,1.217,0.000,0.000,0.089,5.512,0.000,7.525,6,6,0.135
question_4,100,0,wrong_4_172.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.008,0.000,0.485,6,6,0.050
question_4,100,0,wrong_4_080.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_093.py,success_w_mut,0,0,"def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    for i in lst :
        if ( i [ 1 ] > maximum ) :
            maximum = i [ 1 ]
            result . insert ( 0 , i )
        else :
            result . append ( i )
    return result


","def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                result . insert ( 0 , i )
            result . append ( i )
        pass
    return result
","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_266.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            pass
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        result . append ( maximum )
        lst . remove ( maximum )
    return result
",N/A,6.424,2.612,0.000,0.001,5.106,0.646,0.000,14.913,6,6,0.550
question_4,100,0,wrong_4_084.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.767,1.147,0.000,0.000,0.098,0.063,0.000,2.083,6,6,0.054
question_4,100,0,wrong_4_340.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_396.py'},{'sort_age': ''},"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]
",N/A,0.458,0.522,0.000,0.000,0.111,0.088,0.000,1.966,6,6,0.066
question_4,100,0,wrong_4_222.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.219,0.050,0.000,0.001,0.067,17.437,0.000,27.057,6,6,0.847
question_4,100,0,wrong_4_072.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.766,1.068,0.000,0.000,0.051,0.097,0.000,2.126,6,6,0.159
question_4,100,0,wrong_4_185.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( a ) :
    lst = a
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in lst :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        lst . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.483,2.088,0.000,0.000,0.170,19.428,0.000,22.326,6,6,0.264
question_4,100,0,wrong_4_078.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.007,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_318.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.003,0.000,0.000,0.008,0.100,0.000,0.587,6,6,0.053
question_4,100,0,wrong_4_120.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > first ) :
            result = ( ( first , ) + ( x [ 1 ] , ) )
        else :
            result = ( ( x [ 1 ] , ) + ( first , ) )
    return result
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > first ) :
                result = ( ( first , ) + ( x [ 1 ] , ) )
            result = ( ( x [ 1 ] , ) + ( first , ) )
        pass
    return result
    pass
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_056.py'},{'sort_age': ''},"def sort_age ( lst ) :
    first = [ ]
    while lst :
        oldest = lst [ 0 ]
        for ref_i in lst [ 1 : ] :
            pass
            if ( ref_i [ 1 ] > oldest [ 1 ] ) :
                oldest = ref_i
        lst . remove ( oldest )
        first . append ( oldest )
    return first
",N/A,6.528,3.856,0.000,0.001,5.100,0.500,0.000,16.178,6,6,0.873
question_4,100,0,wrong_4_216.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.491,0.000,0.000,0.000,0.008,0.102,0.000,0.607,0,6,N/A
question_4,100,0,wrong_4_243.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.731,0.115,0.000,0.000,0.035,1.708,0.000,2.597,1,6,N/A
question_4,100,0,wrong_4_263.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.462,0.003,0.000,0.000,0.008,0.043,0.000,0.520,0,6,N/A
question_4,100,0,wrong_4_275.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.008,0.000,0.479,6,6,0.050
question_4,100,0,wrong_4_244.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.611,0.113,0.000,0.000,0.032,0.959,0.000,1.723,1,6,N/A
question_4,100,0,wrong_4_230.py,fail_other,1,0,"def sort_age ( lst ) :
    oldest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] > oldest ) :
            oldest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","def sort_age ( lst ) :
    oldest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] > oldest ) :
            oldest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.610,0.085,0.000,0.000,0.020,1.520,0.000,2.242,1,6,N/A
question_4,100,0,wrong_4_319.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.004,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_254.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.004,0.000,0.475,6,6,0.050
question_4,100,0,wrong_4_342.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.004,0.000,0.475,6,6,0.050
question_4,100,0,wrong_4_138.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.461,1.416,0.000,0.000,0.058,0.130,0.000,2.182,6,6,0.179
question_4,100,0,wrong_4_227.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i > biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i > biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a
",N/A,0.459,1.341,0.000,0.000,0.102,0.131,0.000,2.136,6,6,0.184
question_4,100,0,wrong_4_349.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = [ ]
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup . append ( i )
        else :
            i . append ( tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = [ ]
    while lst :
        return sort
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup . append ( i )
            i . append ( tup )
        pass
    return tup
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_398.py'},{'sort_age': ''},"def sort_age ( tup ) :
    current = [ ]
    while tup :
        ref_largest = tup [ 0 ]
        for i in tup :
            pass
            if ( i [ 1 ] > ref_largest [ 1 ] ) :
                ref_largest = i
        tup . remove ( ref_largest )
        current . append ( ref_largest )
    return current
",N/A,6.481,2.548,0.000,0.001,0.055,18.249,0.000,27.424,6,6,0.758
question_4,100,0,wrong_4_050.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    print ( lst )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    print ( lst )


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    final . reverse ( )
    return final
",N/A,0.764,1.848,0.000,0.000,0.097,0.059,0.000,2.905,6,6,0.109
question_4,100,0,wrong_4_008.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
    pass
",N/A,0.460,0.664,0.000,0.000,0.092,0.446,0.000,2.199,6,6,0.500
question_4,100,0,wrong_4_149.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.461,1.129,0.000,0.000,0.177,0.172,0.000,2.317,6,6,0.015
question_4,100,0,wrong_4_123.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    for x in lst [ 1 : ] :
        if ( x [ 1 ] < firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    while lst :
        pass
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] < firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        ref_largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > ref_largest [ 1 ] ) :
                ref_largest = x
        lst . remove ( ref_largest )
        firstnum . append ( ref_largest )
    return firstnum
",N/A,6.489,3.317,0.000,0.001,5.113,0.517,0.000,15.580,6,6,0.816
question_4,100,0,wrong_4_170.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst . reverse


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst . reverse


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst
",N/A,0.765,1.680,0.000,0.000,0.097,0.112,0.000,2.788,6,6,0.089
question_4,100,0,wrong_4_347.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return list ( tup )


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            tup = ( tuple ( i ) + tup )
        pass
    return list ( tup )
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( tup ) :
    new_list = [ ]
    largest = 0
    while tup :
        for i in tup :
            pass
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                ref_count = i
        new_list = ( new_list + [ ref_count ] )
        tup . remove ( ref_count )
        largest = 0
    return new_list
",N/A,6.473,3.253,0.000,0.001,0.109,0.672,0.000,10.671,6,6,0.867
question_4,100,0,wrong_4_024.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.760,1.335,0.000,0.000,0.055,27.059,0.000,29.313,6,6,0.395
question_4,100,0,wrong_4_166.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( largest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( largest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.459,0.903,0.000,0.000,0.063,10.656,0.000,12.207,6,6,0.182
question_4,100,0,wrong_4_335.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_390.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass
",N/A,0.460,0.055,0.000,0.000,0.081,0.226,0.000,1.390,6,6,0.164
question_4,100,0,wrong_4_225.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
        continue
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
        continue
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( a , ref_age )
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.757,0.067,0.000,0.000,0.020,0.213,0.000,1.062,1,6,N/A
question_4,100,0,wrong_4_183.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.457,0.001,0.000,0.000,0.008,0.070,0.000,0.541,0,6,N/A
question_4,100,0,wrong_4_017.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.008,0.000,0.478,6,6,0.050
question_4,100,0,wrong_4_086.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.456,0.000,0.000,0.000,0.008,0.004,0.000,0.474,6,6,0.050
question_4,100,0,wrong_4_154.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.463,1.277,0.000,0.000,0.181,0.155,0.000,2.457,6,6,0.015
question_4,100,0,wrong_4_356.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.459,1.578,0.000,0.000,0.096,15.276,0.000,17.549,6,6,0.234
question_4,100,0,wrong_4_134.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    sort_age ( lst )


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    sort_age ( lst )


","

def sort_age(lst):
    if ((len(lst) == 1) or (len(lst) == 0)):
        return lst
    temp = lst[0][1]
    count = 0
    for i in range(len(lst)):
        if (lst[i][1] > temp):
            temp = lst[i][1]
            count = i
    result = [lst[count]]
    pop = lst.pop(count)
    return (result + sort_age(lst))
    pass
",{'sort_age': 'correct_4_390.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    small = lst [ 0 ] [ 1 ]
    ref_count = 0
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > small ) :
            small = lst [ i ] [ 1 ]
            ref_count = i
    ref_result = [ lst [ ref_count ] ]
    ref_pop = lst . pop ( ref_count )
    return ( ref_result + sort_age ( lst ) )
    pass
",N/A,0.565,0.024,0.000,0.000,0.066,0.722,0.000,1.665,6,6,0.431
question_4,100,0,wrong_4_143.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.466,N/A,N/A,N/A
question_4,100,0,wrong_4_129.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( people ) :
    ref_people = [ ]
    while people :
        i = people [ 0 ]
        for a in people :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        people . remove ( i )
        ref_people . append ( i )
    return ref_people
",N/A,0.458,1.082,0.000,0.000,0.071,5.699,0.000,7.436,6,6,0.182
question_4,100,0,wrong_4_251.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.461,1.693,0.000,0.000,0.063,0.149,0.000,2.639,6,6,0.069
question_4,100,0,wrong_4_287.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.001,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_066.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


",{'sort_age': 'correct_4_024.py'},{'sort_age': ''},"def sort_age ( rslt ) :
    ref_rslt = [ ]
    while rslt :
        smallest = rslt [ 0 ]
        for element in rslt :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        rslt . remove ( smallest )
        ref_rslt . append ( smallest )
    return ref_rslt
",N/A,0.457,0.979,0.000,0.000,0.055,22.725,0.000,24.342,6,6,0.182
question_4,100,0,wrong_4_031.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( ) )
            else :
                result . append ( lst1 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( ) )
            else :
                result . append ( lst1 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.463,0.095,0.000,0.000,0.131,3.678,0.000,5.715,6,6,0.021
question_4,100,0,wrong_4_215.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.459,0.004,0.000,0.000,0.008,0.008,0.000,0.499,6,6,0.045
question_4,100,0,wrong_4_320.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.008,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_034.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort
",N/A,0.460,0.511,0.000,0.000,0.163,5.673,0.000,6.963,6,6,0.039
question_4,100,0,wrong_4_205.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


","def sort_age ( lst ) :
    if ( len ( lst ) <= 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


",{'sort_age': 'correct_4_259.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) <= 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )
",N/A,0.462,0.045,0.000,0.000,0.135,0.071,0.000,1.023,6,6,0.016
question_4,100,0,wrong_4_258.py,success_w_mut,0,0,"def sort_age ( lst ) :
    res = [ ]
    age_list = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            age_list = ( age_list + [ lst [ i ] [ 1 ] ] )
        for i in lst :
            if ( max ( age_list ) == i [ 1 ] ) :
                res = ( res + [ i ] )
            else :
                res = res
        lst . remove ( i )
        age_list . remove ( i [ 1 ] )
    return res


","def sort_age ( lst ) :
    res = [ ]
    age_list = [ ]
    while lst :
        pass
        for i in range ( len ( lst ) ) :
            age_list = ( age_list + [ lst [ i ] [ 1 ] ] )
            if ( max ( age_list ) == i [ 1 ] ) :
                res = ( res + [ i ] )
            else :
                res = res
            pass
        lst . remove ( i )
        age_list . remove ( i [ 1 ] )
    return res
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_414.py'},{'sort_age': ''},"def sort_age ( res ) :
    ref_slist = [ ]
    while res :
        ref_elder = res [ 0 ]
        for i in range ( len ( res ) ) :
            if ( res [ i ] [ 1 ] > ref_elder [ 1 ] ) :
                ref_elder = res [ i ]
            else :
                res = res
            pass
        ref_slist . append ( ref_elder )
        res . remove ( ref_elder )
    return ref_slist
",N/A,7.820,0.471,0.000,0.001,0.073,5.127,0.000,13.869,6,6,0.657
question_4,100,0,wrong_4_113.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] < ele ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] < ele ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for ref_i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for ref_j in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :
                ref_tmp = lst [ ref_i ]
                lst [ ref_i ] = lst [ ref_j ]
                lst [ ref_j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.624,0.037,0.000,0.000,0.058,0.476,0.000,1.623,6,6,1.161
question_4,100,0,wrong_4_204.py,success_w_mut,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , lst [ i ] )
        elif ( lst [ i ] [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , lst [ i ] )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , lst [ i ] )
                break
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
        agelist . insert ( len ( agelist ) , lst [ i ] )
    else :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                break
            pass
        pass
    return agelist
","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_388.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        ref_temp = lst [ 0 ] [ 1 ]
        ref_count = 0
        for ref_i in range ( len ( lst ) ) :
            pass
            if ( lst [ ref_i ] [ 1 ] > ref_temp ) :
                ref_temp = lst [ ref_i ] [ 1 ]
                ref_count = ref_i
            pass
        ref_result = [ lst [ ref_count ] ]
        ref_pop = lst . pop ( ref_count )
        return ( ref_result + sort_age ( lst ) )
    pass
",N/A,6.175,0.135,0.000,0.002,0.058,0.282,0.000,8.171,6,6,0.891
question_4,100,0,wrong_4_271.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.875,0.095,0.000,0.000,0.074,10.562,0.000,12.038,6,6,0.767
question_4,100,0,wrong_4_032.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
    a . remove ( smallest )
    sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
    a . remove ( smallest )
    sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = lst
    a = [ ]
    while sort :
        smallest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        sort . remove ( smallest )
        a . append ( smallest )
    a . reverse ( )
    return a
",N/A,0.480,1.129,0.000,0.000,5.137,5.828,0.000,12.711,6,6,0.298
question_4,100,0,wrong_4_309.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.460,0.002,0.000,0.000,0.025,0.168,0.000,0.663,6,6,0.409
question_4,100,0,wrong_4_016.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.456,1.223,0.000,0.000,0.097,0.128,0.000,1.911,6,6,0.158
question_4,100,0,wrong_4_079.py,fail_other,1,0,"def sort_age ( lst ) :
    lst = lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst = lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.457,0.004,0.000,0.000,0.008,0.109,0.000,0.582,0,6,N/A
question_4,100,0,wrong_4_308.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


","def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


","def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_366.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst
",N/A,0.465,0.200,0.000,0.000,0.032,0.100,0.000,1.597,6,6,0.014
question_4,100,0,wrong_4_270.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.775,0.071,0.000,0.000,0.074,10.541,0.000,11.474,6,6,0.767
question_4,100,0,wrong_4_128.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( people ) :
    ref_people = [ ]
    while people :
        i = people [ 0 ]
        for a in people :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        people . remove ( i )
        ref_people . append ( i )
    return ref_people
",N/A,0.462,1.400,0.000,0.000,0.072,5.697,0.000,7.757,6,6,0.182
question_4,100,0,wrong_4_145.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.465,N/A,N/A,N/A
question_4,100,0,wrong_4_035.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.454,0.000,0.000,0.000,0.008,0.008,0.000,0.475,6,6,0.050
question_4,100,0,wrong_4_108.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.001,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_165.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( a )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( a )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.479,1.128,0.000,0.000,0.063,5.693,0.000,7.489,6,6,0.205
question_4,100,0,wrong_4_203.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest [ 1 ] = i [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest [ 1 ] = i [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_021.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.458,1.810,0.000,0.000,0.063,0.252,0.000,2.763,6,6,0.127
question_4,100,0,wrong_4_178.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.001,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_286.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.481,0.001,0.000,0.000,0.008,0.045,0.000,0.553,6,6,0.167
question_4,100,0,wrong_4_098.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.579,0.035,0.000,0.001,0.030,0.012,0.000,4.922,6,6,0.792
question_4,100,0,wrong_4_322.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.000,0.000,0.000,0.008,0.007,0.000,0.488,6,6,0.050
question_4,100,0,wrong_4_126.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.460,1.487,0.000,0.000,0.063,5.744,0.000,7.883,6,6,0.273
question_4,100,0,wrong_4_321.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    for i in lst :
        big = lst [ 0 ]
        for n in lst :
            if ( n [ 1 ] > big [ 1 ] ) :
                big = n
        lst . remove ( big )
        newlst . append ( big )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    for i in lst :
        big = lst [ 0 ]
        for n in lst :
            if ( n [ 1 ] > big [ 1 ] ) :
                big = n
        lst . remove ( big )
        newlst . append ( big )
    return newlst


","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    for ref_x in lst :
        big = 0
        for i in newlst :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                big += 1
        newlst . insert ( big , ref_x )
    return newlst
",N/A,0.457,0.366,0.000,0.000,0.106,0.466,0.000,1.512,6,6,0.400
question_4,100,0,wrong_4_026.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.457,1.233,0.000,0.000,0.097,0.130,0.000,1.923,6,6,0.158
question_4,100,0,wrong_4_061.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.004,0.000,0.475,6,6,0.050
question_4,100,0,wrong_4_148.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( i [ 1 ] < ( i + 1 [ 1 ] ) ) :
            lst . pop ( i )
            lst . extend ( i )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( i [ 1 ] < ( i + 1 [ 1 ] ) ) :
            lst . pop ( i )
            lst . extend ( i )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.459,0.027,0.000,0.000,0.026,28.418,0.000,29.123,6,6,0.447
question_4,100,0,wrong_4_168.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt


",{'sort_age': 'correct_4_100.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt
",N/A,0.478,0.868,0.000,0.000,0.096,0.113,0.000,1.680,6,6,0.023
question_4,100,0,wrong_4_288.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > largest [ 1 ] ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_189.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > largest [ 1 ] ) :
                largest = element
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.459,1.596,0.000,0.000,0.054,26.913,0.000,29.131,6,6,0.450
question_4,100,0,wrong_4_329.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.460,1.446,0.000,0.000,0.062,0.199,0.000,2.174,6,6,0.152
question_4,100,0,wrong_4_110.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                j = tpl
        lst . remove ( tpl )
        new . append ( tpl )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                j = tpl
        lst . remove ( tpl )
        new . append ( tpl )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                tpl = j
        lst . remove ( tpl )
        new . append ( tpl )
    return new


",{'sort_age': 'correct_4_107.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ] [ 1 ]
        for i in new :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in new :
            if ( j [ 1 ] == largest ) :
                tpl = j
        new . remove ( tpl )
        ref_new . append ( tpl )
    return ref_new
",N/A,0.461,0.099,0.000,0.000,0.204,18.859,0.000,19.953,6,6,0.172
question_4,100,0,wrong_4_114.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for ref_i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for ref_j in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :
                ref_tmp = lst [ ref_i ]
                lst [ ref_i ] = lst [ ref_j ]
                lst [ ref_j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.589,0.038,0.000,0.000,0.059,0.452,0.000,1.635,6,6,0.952
question_4,100,0,wrong_4_312.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.468,0.026,0.000,0.000,0.027,0.173,0.000,1.496,6,6,0.375
question_4,100,0,wrong_4_130.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people
",N/A,0.480,0.940,0.000,0.000,0.106,0.112,0.000,1.764,6,6,0.023
question_4,100,0,wrong_4_052.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] > oldest ) :
                oldest = person [ 1 ]
                newlst . append ( person )
                lst . remove ( person )
        newlst . append ( lst [ 0 ] )
        lst . remove ( lst [ 0 ] )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] > oldest ) :
                oldest = person [ 1 ]
                newlst . append ( person )
                lst . remove ( person )
        newlst . append ( lst [ 0 ] )
        lst . remove ( lst [ 0 ] )
    return newlst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for people in lst :
            if ( people [ 1 ] >= oldest ) :
                oldest = people [ 1 ]
                remove_people = people
        new_lst . append ( remove_people )
        lst . remove ( remove_people )
    return new_lst


",{'sort_age': 'correct_4_141.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] >= oldest ) :
                oldest = person [ 1 ]
                ref_remove_people = person
        newlst . append ( ref_remove_people )
        lst . remove ( ref_remove_people )
    return newlst
",N/A,0.459,2.500,0.000,0.000,0.132,12.072,0.000,15.430,6,6,0.286
question_4,100,0,wrong_4_304.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.456,0.004,0.000,0.000,0.008,0.120,0.000,0.609,6,6,0.375
question_4,100,0,wrong_4_002.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                person = oldest
        a . remove ( smallest )
        sort . append ( smallest )
        print ( a )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                person = oldest
        a . remove ( smallest )
        sort . append ( smallest )
        print ( a )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.457,1.900,0.000,0.000,0.069,5.843,0.000,8.379,6,6,0.600
question_4,100,0,wrong_4_357.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                newlst . append ( i )
                lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                newlst . append ( i )
                lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.458,1.718,0.000,0.000,5.106,7.321,0.000,14.757,6,6,0.319
question_4,100,0,wrong_4_167.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt


",{'sort_age': 'correct_4_100.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt
",N/A,0.456,0.888,0.000,0.000,0.096,0.112,0.000,1.560,6,6,0.023
question_4,100,0,wrong_4_302.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( len ( lst ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( len ( lst ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.459,0.025,0.000,0.000,0.027,0.166,0.000,1.447,6,6,0.376
question_4,100,0,wrong_4_257.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    a = list ( set ( lst ) )
    lst . clear ( )
    lst . append ( a )
    return lst


","def sort_age ( lst ) :
    a = list ( set ( lst ) )
    lst . clear ( )
    lst . append ( a )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda a : a [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.004,0.000,0.000,0.010,0.361,0.000,0.850,6,6,0.909
question_4,100,0,wrong_4_290.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = new_list . append ( count )
        lst . remove ( count )
        largest = 0
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = new_list . append ( count )
        lst . remove ( count )
        largest = 0
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_356.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list
",N/A,0.458,0.912,0.000,0.000,0.151,10.889,0.000,12.574,6,6,0.083
question_4,100,0,wrong_4_131.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.459,N/A,N/A,N/A
question_4,100,0,wrong_4_009.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
",N/A,0.479,0.652,0.000,0.000,0.072,1.167,0.000,2.903,6,6,0.515
question_4,100,0,wrong_4_054.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


",{'sort_age': 'correct_4_113.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst
",N/A,0.458,1.273,0.000,0.000,0.095,0.128,0.000,2.084,6,6,0.023
question_4,100,0,wrong_4_003.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( sort )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( sort )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.458,1.771,0.000,0.000,0.070,19.300,0.000,21.731,6,6,0.326
question_4,100,0,wrong_4_169.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst
",N/A,0.457,1.549,0.000,0.000,0.096,0.119,0.000,2.364,6,6,0.091
question_4,100,0,wrong_4_004.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.462,1.853,0.000,0.000,0.070,19.300,0.000,21.818,6,6,0.326
question_4,100,0,wrong_4_137.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = x
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = x
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = i
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_191.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = i
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list [ : : ( - 1 ) ]
",N/A,0.459,0.036,0.000,0.000,0.060,0.237,0.000,1.083,6,6,0.113
question_4,100,0,wrong_4_265.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                lst [ i ] = lst [ a ]
                lst [ a ] = lst [ i ]
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                lst [ i ] = lst [ a ]
                lst [ a ] = lst [ i ]
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                ( lst [ i ] , lst [ a ] ) = ( lst [ a ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_337.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                ( lst [ i ] , lst [ a ] ) = ( lst [ a ] , lst [ i ] )
    return lst
",N/A,0.458,0.402,0.000,0.000,0.033,0.501,0.000,1.881,6,6,0.048
question_4,100,0,wrong_4_278.py,fail_other,1,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] < lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] < lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            x = lst [ ref_i ] [ 1 ]
            i = func ( ref_newlist , x )
            ref_newlist . insert ( i , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.666,0.107,0.000,0.000,0.020,1.523,0.000,2.323,1,6,N/A
question_4,100,0,wrong_4_283.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.460,0.002,0.000,0.000,0.027,0.168,0.000,0.667,6,6,0.375
question_4,100,0,wrong_4_255.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = n
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = n
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        newlst . append ( i )
    return newlst


",{'sort_age': 'correct_4_310.py'},{'sort_age': ''},"def sort_age ( newlst ) :
    ref_newlst = [ ]
    while newlst :
        i = newlst [ 0 ]
        for element in newlst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        newlst . remove ( i )
        ref_newlst . append ( i )
    return ref_newlst
",N/A,0.460,1.436,0.000,0.000,0.063,5.793,0.000,7.878,6,6,0.205
question_4,100,0,wrong_4_273.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_341.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ]
        for ele in new :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        new . remove ( largest )
        ref_new . append ( largest )
    return ref_new
",N/A,0.458,1.183,0.000,0.000,0.056,10.740,0.000,12.552,6,6,0.268
question_4,100,0,wrong_4_210.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.000,0.000,0.000,0.008,0.043,0.000,0.515,6,6,0.167
question_4,100,0,wrong_4_202.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( min ( decoy ) )
        decoy . remove ( min ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


","def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( min ( decoy ) )
        decoy . remove ( min ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


","def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( max ( decoy ) )
        decoy . remove ( max ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


",{'sort_age': 'correct_4_083.py'},{'sort_age': ''},"def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( max ( decoy ) )
        decoy . remove ( max ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final
",N/A,0.458,0.055,0.000,0.000,0.284,23.271,0.000,24.304,6,6,0.031
question_4,100,0,wrong_4_341.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return list . reverse ( lst )


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return list . reverse ( lst )


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_396.py'},{'sort_age': ''},"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]
",N/A,0.482,0.543,0.000,0.000,0.111,0.058,0.000,2.001,6,6,0.089
question_4,100,0,wrong_4_176.py,fail_other,1,0,"def sort_age ( lst ) :
    newlst = [ ]
    ages = [ ]
    for i in lst :
        ages . append ( i [ 1 ] )
    ages . sort ( )
    for x in ages [ : : ( - 1 ) ] :
        for i in lst :
            if ( i [ 1 ] == x ) :
                newlst . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    ages = [ ]
    for i in lst :
        ages . append ( i [ 1 ] )
    ages . sort ( )
    for x in ages [ : : ( - 1 ) ] :
        for i in lst :
            if ( i [ 1 ] == x ) :
                newlst . append ( i )
    return newlst


","def sort_age ( lst ) :
    ages = [ ]
    for j in lst :
        ages . append ( j [ 1 ] )
    ages = sort ( ages )
    new_lst = [ ]
    for age in ages :
        for i in lst :
            if ( age == i [ 1 ] ) :
                new_lst . append ( i )
    return new_lst


",{'sort_age': 'correct_4_406.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ages = [ ]
    for ref_j in lst :
        ages . append ( ref_j [ 1 ] )
    ages = sort ( ages )
    ref_new_lst = [ ]
    for x in ages :
        for i in lst :
            if ( x == i [ 1 ] ) :
                ref_new_lst . append ( i )
    return ref_new_lst
",N/A,0.458,0.029,0.000,0.000,0.092,0.414,0.000,1.001,0,6,N/A
question_4,100,0,wrong_4_195.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] < smallest ) :
                smallest = i [ 1 ]
        lst . remove ( smallest )
        new . append ( smallest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] < smallest ) :
                smallest = i [ 1 ]
        lst . remove ( smallest )
        new . append ( smallest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


",{'sort_age': 'correct_4_251.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        smallest = new [ 0 ]
        for i in new :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        new . remove ( smallest )
        ref_new . append ( smallest )
    return ref_new
",N/A,0.457,1.871,0.000,0.000,0.063,27.058,0.000,29.589,6,6,0.383
question_4,100,0,wrong_4_339.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
        return new_lst
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
        return new_lst
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
                    age_lst . remove ( i [ 1 ] )
        return new_lst
    pass


",{'sort_age': 'correct_4_166.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
                    age_lst . remove ( i [ 1 ] )
        return new_lst
    pass
",N/A,0.459,0.047,0.000,0.000,5.193,16.895,0.000,22.927,6,6,0.145
question_4,100,0,wrong_4_348.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return [ tup ]


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        pass
        for i in new :
            tup += tuple ( i )
            current = i [ 1 ]
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
            tup = ( tuple ( i ) + tup )
        pass
    return [ tup ]
","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        index = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                index += 1
        ref_new . insert ( index , ref_x )
    return ref_new
",N/A,6.496,3.165,0.000,0.001,0.066,0.226,0.000,10.075,6,6,0.818
question_4,100,0,wrong_4_010.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ 0 ]
        for j in range ( 1 , ( len ( lst ) + 1 ) ) :
            a = ( len ( lst ) - j )
            if ( lst [ a ] [ 1 ] > this [ 1 ] ) :
                lst = ( ( lst [ 1 : ( a + 1 ) ] + [ this ] ) + lst [ ( a + 1 ) : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ 0 ]
        for j in range ( 1 , ( len ( lst ) + 1 ) ) :
            a = ( len ( lst ) - j )
            if ( lst [ a ] [ 1 ] > this [ 1 ] ) :
                lst = ( ( lst [ 1 : ( a + 1 ) ] + [ this ] ) + lst [ ( a + 1 ) : ] )
                break
    return lst


","def sort_age ( lst ) :
    for loop in range ( len ( lst ) ) :
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_050.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( len ( lst ) ) :
        for ref_i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
                ( lst [ ref_i ] , lst [ ( ref_i + 1 ) ] ) = ( lst [ ( ref_i + 1 ) ] , lst [ ref_i ] )
    return lst
",N/A,0.765,0.815,0.000,0.000,0.117,0.336,0.000,2.795,6,6,0.623
question_4,100,0,wrong_4_291.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return lst


","def sort_age ( lst ) :
    final = [ ]
    temp = 0
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                temp = i
        lst . remove ( temp )
        final . append ( temp )
    return final


",{'sort_age': 'correct_4_169.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                ref_temp = i
        lst . remove ( ref_temp )
        sort . append ( ref_temp )
    return sort
",N/A,0.461,1.882,0.000,0.000,0.148,10.834,0.000,13.491,6,6,0.149
question_4,100,0,wrong_4_338.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_391.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]
",N/A,0.461,0.095,0.000,0.000,0.064,0.035,0.000,2.009,6,6,0.141
question_4,100,0,wrong_4_099.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.576,0.035,0.000,0.001,0.030,0.012,0.000,4.920,6,6,0.792
question_4,100,0,wrong_4_240.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.467,0.001,0.000,0.000,0.008,0.008,0.000,0.489,6,6,0.045
question_4,100,0,wrong_4_217.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.008,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_125.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


",{'sort_age': 'correct_4_066.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1
",N/A,0.460,0.858,0.000,0.000,0.096,0.134,0.000,1.675,6,6,0.023
question_4,100,0,wrong_4_221.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_101.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    lst . reverse ( )
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.580,0.037,0.000,0.001,0.030,0.061,0.000,4.983,6,6,0.807
question_4,100,0,wrong_4_186.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( a ) :
    a = a
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.765,1.719,0.000,0.000,0.153,0.238,0.000,3.017,6,6,0.102
question_4,100,0,wrong_4_206.py,success_w_mut,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , lst [ i ] )
        elif ( lst [ i ] [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , lst [ i ] )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , lst [ i ] )
                    break
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
        agelist . insert ( len ( agelist ) , lst [ i ] )
    else :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                pass
            pass
        pass
    return agelist
","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_388.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        ref_temp = lst [ 0 ] [ 1 ]
        ref_count = 0
        for ref_i in range ( len ( lst ) ) :
            pass
            if ( lst [ ref_i ] [ 1 ] > ref_temp ) :
                ref_temp = lst [ ref_i ] [ 1 ]
                ref_count = ref_i
            pass
        ref_result = [ lst [ ref_count ] ]
        ref_pop = lst . pop ( ref_count )
        return ( ref_result + sort_age ( lst ) )
    pass
",N/A,6.179,0.134,0.000,0.002,0.059,0.213,0.000,8.109,6,6,0.891
question_4,100,0,wrong_4_133.py,success_w_mut,0,0,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
    for e in lst [ 1 : ] :
        if ( e [ 1 ] < smallest ) :
            smallest = e [ 1 ]
    lst . remove ( smallest )
    lst . append ( smallest )
    return lst


","def sort_age ( lst ) :
    pass
    while lst :
        smallest = lst [ 0 ]
        for e in lst [ 1 : ] :
            pass
            if ( e [ 1 ] < smallest ) :
                return lst1
            smallest = e [ 1 ]
        pass
    lst . remove ( smallest )
    lst . append ( smallest )
    return lst
","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


",{'sort_age': 'correct_4_066.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ref_ele in lst :
            pass
            if ( ref_ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ref_ele
        lst . remove ( smallest )
        ref_lst1 . append ( smallest )
    return ref_lst1
",N/A,6.961,1.115,0.000,0.001,1.066,0.507,0.000,9.769,6,6,0.455
question_4,100,0,wrong_4_122.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    while lst :
        largest = lst [ 0 ]
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        firstnum . append ( largest )
    return firstnum
",N/A,6.543,3.273,0.000,0.001,5.109,0.485,0.000,15.554,6,6,0.796
question_4,100,0,wrong_4_068.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.469,0.000,0.000,0.000,0.008,0.007,0.000,0.489,6,6,0.050
question_4,100,0,wrong_4_239.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_298.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for x in sort :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.478,1.033,0.000,0.000,0.063,10.654,0.000,12.354,6,6,0.182
question_4,100,0,wrong_4_241.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = ( )
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = ( )
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.757,0.109,0.000,0.000,0.035,1.943,0.000,2.850,1,6,N/A
question_4,100,0,wrong_4_118.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.456,1.758,0.000,0.000,0.099,0.067,0.000,2.516,6,6,0.102
question_4,100,0,wrong_4_328.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted


",{'sort_age': 'correct_4_387.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted
",N/A,0.459,1.191,0.000,0.000,0.090,5.512,0.000,7.261,6,6,0.135
question_4,100,0,wrong_4_237.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.009,0.008,0.000,0.483,6,6,0.045
question_4,100,0,wrong_4_245.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
        list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.608,0.113,0.000,0.000,0.037,0.878,0.000,1.643,1,6,N/A
question_4,100,0,wrong_4_314.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.459,0.000,0.000,0.000,0.008,0.107,0.000,0.593,6,6,0.222
question_4,100,0,wrong_4_046.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallsest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallsest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( output ) :
    ref_output = [ ]
    while output :
        smallest = output [ 0 ]
        for i in output :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        output . remove ( smallest )
        ref_output . append ( smallest )
    return ref_output
",N/A,0.457,1.640,0.000,0.000,0.057,22.802,0.000,25.082,6,6,0.273
question_4,100,0,wrong_4_140.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list
",N/A,0.458,1.284,0.000,0.000,0.096,0.132,0.000,2.098,6,6,0.023
question_4,100,0,wrong_4_064.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.460,0.001,0.000,0.000,0.008,0.008,0.000,0.481,6,6,0.050
question_4,100,0,wrong_4_159.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.457,0.031,0.000,0.000,0.030,31.572,0.000,32.370,6,6,0.052
question_4,100,0,wrong_4_109.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.458,1.327,0.000,0.000,0.097,0.025,0.000,2.059,6,6,0.048
question_4,100,0,wrong_4_048.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output
",N/A,0.457,1.560,0.000,0.000,0.096,0.131,0.000,2.370,6,6,0.023
question_4,100,0,wrong_4_256.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        newlst . append ( i )
    return newlst


",{'sort_age': 'correct_4_310.py'},{'sort_age': ''},"def sort_age ( newlst ) :
    ref_newlst = [ ]
    while newlst :
        i = newlst [ 0 ]
        for element in newlst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        newlst . remove ( i )
        ref_newlst . append ( i )
    return ref_newlst
",N/A,0.457,1.362,0.000,0.000,0.072,5.686,0.000,7.704,6,6,0.182
question_4,100,0,wrong_4_039.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


",{'sort_age': 'correct_4_086.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass
",N/A,0.460,0.068,0.000,0.000,0.097,0.129,0.000,0.891,6,6,0.130
question_4,100,0,wrong_4_325.py,success_w_mut,0,0,"def sort_age ( lst ) :
    newnew = [ ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            else :
                newnew . append ( i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ ]
    for i in lst :
        pass
        for j in range ( len ( newnew ) ) :
            pass
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
                if True :
                    newnew . insert ( j , i )
                newnew . append ( i )
            return newnew
        return newnew
    pass
","

def sort_age(lst):
    l = len(lst)
    for i in range(0, l):
        for j in range(0, ((l - i) - 1)):
            if (lst[j][1] > lst[(j + 1)][1]):
                temp = lst[j]
                if True:
                    pass
                lst[j] = lst[(j + 1)]
                lst[(j + 1)] = temp
    return lst[::(- 1)]
",{'sort_age': 'correct_4_396.py'},{'sort_age': 'B1.h'},"def sort_age ( lst ) :
    newnew = len ( lst )
    for i in range ( 0 , newnew ) :
        pass
        for j in range ( 0 , ( ( newnew - i ) - 1 ) ) :
            pass
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ref_temp = lst [ j ]
                if True :
                    pass
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = ref_temp
    return lst [ : : ( - 1 ) ]
",N/A,8.130,0.730,0.000,0.001,0.077,0.335,0.000,10.067,6,6,1.043
question_4,100,0,wrong_4_261.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.000,0.000,0.000,0.008,0.008,0.000,0.488,6,6,0.050
question_4,100,0,wrong_4_104.py,fail_other,1,0,"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        ref_i += 1
    return lst
",N/A,0.655,0.012,0.000,0.000,0.021,20.177,0.000,20.872,3,6,N/A
question_4,100,0,wrong_4_351.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        j = ( ( len ( lst ) - i ) - 1 )
        new . append ( lst [ j ] )
    return new


","def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        j = ( ( len ( lst ) - i ) - 1 )
        new . append ( lst [ j ] )
    return new


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        ref_largest = max ( lst , key = ( lambda j : j [ 1 ] ) )
        lst . remove ( ref_largest )
        new . append ( ref_largest )
    return new
",N/A,0.457,0.044,0.000,0.000,0.046,0.243,0.000,0.885,6,6,0.564
question_4,100,0,wrong_4_070.py,fail_other,1,0,"def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
    lst . remove ( oldest )
    sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
    lst . remove ( oldest )
    sort . append ( oldest )
    return sort


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    store = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( store , ref_age )
            store . insert ( ref_b , lst [ i ] )
    return list ( reversed ( store ) )
",N/A,0.697,0.087,0.000,0.000,0.023,0.528,0.000,1.342,1,6,N/A
question_4,100,0,wrong_4_303.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.009,0.131,0.000,0.602,6,6,0.375
question_4,100,0,wrong_4_293.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = 0
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = 0
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.459,1.673,0.000,0.000,0.102,10.797,0.000,13.166,6,6,0.341
question_4,100,0,wrong_4_194.py,success_w_mut,0,0,"def sort_age ( lst ) :
    biggest = lst [ 0 ] [ 1 ]
    for i in range ( len ( lst ) ) :
        if ( lst [ 0 ] [ 1 ] < lst [ i ] [ 1 ] ) :
            biggest = lst [ i ] [ 1 ]
            continue
        else :
            biggest = lst [ 0 ] [ 1 ]
    return ( [ biggest ] + sort_age ( lst [ 1 : len ( lst ) ] ) )
    pass


","def sort_age ( lst ) :
    biggest = lst [ 0 ] [ 1 ]
    while lst :
        slist . append ( elder )
        lst . remove ( elder )
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ 0 ] [ 1 ] < lst [ i ] [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
                continue
            else :
                slist . append ( elder )
                lst . remove ( elder )
            biggest = lst [ 0 ] [ 1 ]
        pass
    return ( [ biggest ] + sort_age ( lst [ 1 : len ( lst ) ] ) )
    pass
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_413.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_slist = [ ]
    while lst :
        ref_elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ i ] [ 1 ] > ref_elder [ 1 ] ) :
                ref_elder = lst [ i ]
            else :
                continue
        ref_slist . append ( ref_elder )
        lst . remove ( ref_elder )
    return ref_slist
",N/A,6.440,3.989,0.000,0.002,0.068,20.843,0.000,31.682,6,6,0.662
question_4,100,0,wrong_4_285.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.468,0.003,0.000,0.000,0.008,0.043,0.000,0.526,0,6,N/A
question_4,100,0,wrong_4_248.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_result = [ ]
    while list1 :
        biggest = list1 [ 0 ] [ 1 ]
        ref_tuple_biggest = list1 [ 0 ]
        for i in list1 :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                ref_tuple_biggest = i
        list1 . remove ( ref_tuple_biggest )
        ref_result . append ( ref_tuple_biggest )
    return ref_result
",N/A,0.457,2.311,0.000,0.000,0.116,33.309,0.000,36.541,6,6,0.394
question_4,100,0,wrong_4_200.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.009,0.008,0.000,0.484,6,6,0.050
question_4,100,0,wrong_4_175.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.456,2.699,0.000,0.000,0.062,19.810,0.000,23.320,6,6,0.429
question_4,100,0,wrong_4_315.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.001,0.000,0.000,0.008,0.004,0.000,0.476,6,6,0.050
question_4,100,0,wrong_4_192.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda ref_x : ref_x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.456,0.003,0.000,0.000,0.008,0.368,0.000,0.846,6,6,1.000
question_4,100,0,wrong_4_179.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ] [ 1 ]
        for item in a :
            if ( item [ 1 ] > largest ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ] [ 1 ]
        for item in a :
            if ( item [ 1 ] > largest ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.456,1.987,0.000,0.000,0.099,10.816,0.000,13.502,6,6,0.224
question_4,100,0,wrong_4_355.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    print ( newlst )


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    print ( newlst )


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.464,1.731,0.000,0.000,0.096,15.325,0.000,17.759,6,6,0.286
question_4,100,0,wrong_4_053.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += current
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += current
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


",{'sort_age': 'correct_4_113.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst
",N/A,0.458,1.591,0.000,0.000,0.095,10.707,0.000,12.979,6,6,0.047
question_4,100,0,wrong_4_218.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_largest = max ( lst , key = ( lambda max_num : max_num [ 1 ] ) )
        lst . remove ( ref_largest )
        new_lst . append ( ref_largest )
    return new_lst
",N/A,0.460,0.032,0.000,0.000,0.051,0.869,0.000,1.480,6,6,0.355
question_4,100,0,wrong_4_299.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.460,0.000,0.000,0.000,0.008,0.046,0.000,0.530,6,6,0.312
question_4,100,0,wrong_4_276.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.456,1.624,0.000,0.000,0.095,15.280,0.000,17.594,6,6,0.234
question_4,100,0,wrong_4_062.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            final . append ( old )
            lst . remove ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            final . append ( old )
            lst . remove ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final


",{'sort_age': 'correct_4_126.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final
",N/A,0.462,1.443,0.000,0.000,0.070,0.014,0.000,2.149,6,6,0.091
question_4,100,0,wrong_4_296.py,success_w_mut,0,0,"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    for item in lst :
        if ( min ( ages ) == item [ 1 ] ) :
            output . append ( item )
            ages . remove ( age )
    return output


","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        pass
        for item in lst :
            pass
            if ( min ( ages ) == item [ 1 ] ) :
                pass
            output . append ( item )
            ages . remove ( age )
        pass
    return output
","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    while ages :
        age = max ( ages )
        for item in lst :
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
    return output


",{'sort_age': 'correct_4_363.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        ref_age = max ( ages )
        for item in lst :
            pass
            if ( ref_age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( ref_age )
        pass
    return output
",N/A,7.397,2.793,0.000,0.001,0.125,8.461,0.000,18.932,6,6,0.304
question_4,100,0,wrong_4_346.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        pass
        for i in new :
            tup += tuple ( i )
            current = i [ 1 ]
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
            tup = ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        index = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                index += 1
        ref_new . insert ( index , ref_x )
    return ref_new
",N/A,6.426,3.073,0.000,0.001,0.065,0.240,0.000,9.926,6,6,0.814
question_4,100,0,wrong_4_353.py,success_w_mut,0,0,"def sort_age ( lst ) :
    A = map ( ( lambda x : x [ 1 ] ) , lst )
    a = [ ]
    counter = 0
    while ( counter < len ( lst ) ) :
        for i in A :
            if ( i > a [ 0 ] ) :
                a = i . extend ( a )
            elif ( i < a [ ( - 1 ) ] ) :
                a = a . extend ( i )
        counter += 1
    b = [ ]
    for i in a :
        for y in lst :
            if ( y [ 1 ] == i ) :
                b . append ( y )
    return b


","def sort_age ( lst ) :
    A = map ( ( lambda x : x [ 1 ] ) , lst )
    a = [ ]
    counter = 0
    while ( counter < len ( lst ) ) :
        pass
        for i in A :
            pass
            if ( i > a [ 0 ] ) :
                a = i . extend ( a )
                if False :
                    a = a . extend ( i )
                pass
            else :
                b = [ ]
            pass
        pass
        for y in lst :
            pass
            if ( y [ 1 ] == i ) :
                b . append ( y )
            pass
        pass
    return b
","

def sort_age(lst):
    newlst = []
    while lst:
        oldest = lst[0][1]
        for person in lst:
            if (person[1] > oldest):
                if False:
                    pass
                oldest = person[1]
            else:
                pass
        for person in lst:
            if (person[1] == oldest):
                newlst.append(person)
                lst.remove(person)
    return newlst
",{'sort_age': 'correct_4_069.py'},"{'sort_age': 'B1.g,B2.l'}","def sort_age ( a ) :
    counter = [ ]
    while a :
        ref_oldest = a [ 0 ] [ 1 ]
        for ref_person in a :
            pass
            if ( ref_person [ 1 ] > ref_oldest ) :
                if False :
                    pass
                ref_oldest = ref_person [ 1 ]
            else :
                pass
            pass
        pass
        for ref_person in a :
            pass
            if ( ref_person [ 1 ] == ref_oldest ) :
                counter . append ( ref_person )
                a . remove ( ref_person )
            pass
        pass
    return counter
",N/A,12.831,4.224,0.000,0.002,0.102,10.956,0.000,28.724,6,6,0.878
question_4,100,0,wrong_4_235.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.471,0.000,0.000,0.000,0.008,0.043,0.000,0.526,0,6,N/A
question_4,100,0,wrong_4_012.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    old_lst = lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst


","def sort_age ( lst ) :
    old_lst = lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for i in a :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_145.py'},{'sort_age': ''},"def sort_age ( old_lst ) :
    lst = old_lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst
",N/A,0.458,1.586,0.000,0.000,0.154,0.343,0.000,2.655,6,6,0.220
question_4,100,0,wrong_4_036.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ j ] )
    return lst


","def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ j ] )
    return lst


","def sort_age ( lst ) :
    'selection sort: O(n^2) time'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_068.py'},{'sort_age': ''},"def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
",N/A,0.464,0.262,0.000,0.000,0.117,0.650,0.000,2.087,6,6,0.014
question_4,100,0,wrong_4_058.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.008,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_150.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( [ lst [ i ] ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( [ lst [ i ] ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.481,0.032,0.000,0.000,0.027,31.583,0.000,32.423,6,6,0.148
question_4,100,0,wrong_4_027.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 1 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 1 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.461,1.238,0.000,0.000,0.088,5.686,0.000,7.577,6,6,0.184
question_4,100,0,wrong_4_177.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.004,0.000,0.479,6,6,0.050
question_4,100,0,wrong_4_088.py,fail_other,1,0,"def sort_age ( lst ) :
    holder = [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    ( males , females ) = ( [ ] , [ ] )
    for i in lst :
        if ( i [ 0 ] == 'M' ) :
            males = ( males + [ lst [ 0 ] ] )
        elif ( i [ 0 ] == 'F' ) :
            females = ( females + [ lst [ 0 ] ] )
        lst = lst [ 1 : ]
    return merge ( merge_sort ( males ) , merge_sort ( females ) )


",{'sort_age': 'correct_4_034.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ( ref_males , ref_females ) = ( [ ] , [ ] )
    for ref_i in lst :
        if ( ref_i [ 0 ] == 'M' ) :
            ref_males = ( ref_males + [ lst [ 0 ] ] )
        elif ( ref_i [ 0 ] == 'F' ) :
            ref_females = ( ref_females + [ lst [ 0 ] ] )
        lst = lst [ 1 : ]
    return merge ( merge_sort ( ref_males ) , merge_sort ( ref_females ) )
",N/A,0.458,0.029,0.000,0.000,0.572,0.436,0.000,1.501,0,6,N/A
question_4,100,0,wrong_4_300.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.130,0.000,0.608,6,6,0.375
question_4,100,0,wrong_4_266.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for x in lst :
            if ( x [ 1 ] < smallest ) :
                smallest = x
        lst . remove ( smallest )
        sort . append ( smallest )
        return lst


","def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for x in lst :
            if ( x [ 1 ] < smallest ) :
                smallest = x
        lst . remove ( smallest )
        sort . append ( smallest )
        return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > smallest [ 1 ] ) :
                smallest = x
        lst . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.457,1.665,0.000,0.000,0.057,5.762,0.000,8.061,6,6,0.341
question_4,100,0,wrong_4_201.py,success_w_mut,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in lst :
        if ( i [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , i )
        elif ( i [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , i )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] < i [ 1 ] < agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , i )
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in lst :
        pass
    agelist . insert ( len ( agelist ) , i )
    for i in range ( len ( a ) ) :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] < i [ 1 ] < agelist [ ( x + 1 ) ] [ 1 ] ) :
                pass
            pass
        pass
    return agelist
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    b = lst . copy ( )
    lst . clear ( )
    for i in b :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( b [ i ] not in lst ) ) :
                lst . append ( b [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.164,0.115,0.000,0.001,0.076,0.290,0.000,7.916,6,6,0.943
question_4,100,0,wrong_4_158.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.493,0.001,0.000,0.000,0.008,0.070,0.000,0.577,0,6,N/A
question_4,100,0,wrong_4_095.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.461,0.003,0.000,0.000,0.008,0.106,0.000,0.583,0,6,N/A
question_4,100,0,wrong_4_252.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) + 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) + 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_new_lst = [ ]
    while list1 :
        biggest = list1 [ 0 ]
        for i in range ( len ( list1 ) ) :
            if ( list1 [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = list1 [ i ]
        list1 . remove ( biggest )
        ref_new_lst . append ( biggest )
    return ref_new_lst
",N/A,0.459,1.877,0.000,0.000,0.061,22.820,0.000,25.509,6,6,0.279
question_4,100,0,wrong_4_119.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > first ) :
            result = ( ( first , ) + ( x [ 1 ] , ) )
        else :
            result = ( ( x [ 1 ] , ) + ( first , ) )
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        oldest = i
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > first ) :
                result = ( ( first , ) + ( x [ 1 ] , ) )
            result = ( ( x [ 1 ] , ) + ( first , ) )
        pass
    pass
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_056.py'},{'sort_age': ''},"def sort_age ( lst ) :
    first = [ ]
    while lst :
        oldest = lst [ 0 ]
        for ref_i in lst [ 1 : ] :
            pass
            if ( ref_i [ 1 ] > oldest [ 1 ] ) :
                oldest = ref_i
        lst . remove ( oldest )
        first . append ( oldest )
    return first
",N/A,6.511,3.769,0.000,0.001,0.050,5.932,0.000,16.452,6,6,0.906
question_4,100,0,wrong_4_268.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.495,0.000,0.000,0.000,0.008,0.008,0.000,0.516,6,6,0.050
question_4,100,0,wrong_4_075.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.004,0.000,0.479,6,6,0.050
question_4,100,0,wrong_4_196.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_214.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        new . append ( largest )
    return new
",N/A,0.459,1.660,0.000,0.000,0.095,15.286,0.000,17.639,6,6,0.234
question_4,100,0,wrong_4_219.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_largest = max ( lst , key = ( lambda max_num : max_num [ 1 ] ) )
        lst . remove ( ref_largest )
        new_lst . append ( ref_largest )
    return new_lst
",N/A,0.460,0.025,0.000,0.000,0.051,0.896,0.000,1.438,6,6,0.355
question_4,100,0,wrong_4_144.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.466,N/A,N/A,N/A
question_4,100,0,wrong_4_102.py,fail_other,1,0,"def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i > largest ) :
            largest = i
            sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i > largest ) :
            largest = i
            sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    sort1 = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            largest = lst [ i ] [ 1 ]
            ref_b = func ( sort1 , largest )
            sort1 . insert ( ref_b , lst [ i ] )
    return list ( reversed ( sort1 ) )
",N/A,0.731,0.069,0.000,0.000,0.016,0.685,0.000,1.508,1,6,N/A
question_4,100,0,wrong_4_343.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.479,0.000,0.000,0.000,0.008,0.043,0.000,0.535,6,6,0.167
question_4,100,0,wrong_4_236.py,fail_exception,1,1,"def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        return ( [ largest_age ( lst ) ] + [ sort_age ( lst [ 1 : ] ) ] )
    pass


","def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        return ( [ largest_age ( lst ) ] + [ sort_age ( lst [ 1 : ] ) ] )
    pass


","def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    final = [ ]
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        final = [ largest_age ( lst ) ]
        lst . remove ( largest_age ( lst ) )
        final = ( final + sort_age ( lst ) )
        return final


",{'sort_age': 'correct_4_296.py'},{'sort_age': ''},N/A,N/A,0.461,0.074,0.000,0.000,0.375,0.000,0.000,0.918,N/A,N/A,N/A
question_4,100,0,wrong_4_289.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        new_list = new_list . append ( i )
        lst . remove ( i )
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        new_list = new_list . append ( i )
        lst . remove ( i )
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_356.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                ref_count = i
        new_list = ( new_list + [ ref_count ] )
        lst . remove ( ref_count )
        largest = 0
    return new_list
",N/A,0.460,1.333,0.000,0.000,0.126,5.640,0.000,7.702,6,6,0.286
question_4,100,0,wrong_4_033.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( a ) :
    lst = a
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    sort . reverse ( )
    return sort
",N/A,0.472,0.603,0.000,0.000,0.163,0.326,0.000,1.725,6,6,0.160
question_4,100,0,wrong_4_030.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.463,0.094,0.000,0.000,0.132,3.681,0.000,5.718,6,6,0.041
question_4,100,0,wrong_4_294.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    final = [ ]
    temp = 0
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                temp = i
        lst . remove ( temp )
        final . append ( temp )
    return final


",{'sort_age': 'correct_4_169.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                ref_temp = i
        lst . remove ( ref_temp )
        sort . append ( ref_temp )
    return sort
",N/A,0.458,1.754,0.000,0.000,0.154,10.602,0.000,13.136,6,6,0.106
question_4,100,0,wrong_4_115.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == ( ) ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    if ( lst == ( ) ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


",{'sort_age': 'correct_4_149.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out
",N/A,0.464,0.049,0.000,0.000,0.051,0.073,0.000,1.113,6,6,0.014
question_4,100,0,wrong_4_163.py,success_w_mut,0,0,"def sort_age ( lst ) :
    lst = ( )
    for i in lst :
        if ( lst [ i ] [ 1 ] < lst [ 0 ] [ 1 ] ) :
            lst += lst [ 0 ]
        else :
            lst += lst [ i ]
    return lst


","def sort_age ( lst ) :
    lst = ( )
    for i in lst :
        pass
        for test in range ( len ( lst ) ) :
            lst += lst [ 0 ]
            if ( lst [ test ] [ 1 ] < lst [ item ] [ 1 ] ) :
                ( lst [ test ] , lst [ item ] ) = ( lst [ item ] , lst [ test ] )
            lst += lst [ i ]
        pass
    return lst
","def sort_age ( lst ) :
    for item in range ( len ( lst ) ) :
        for test in range ( len ( lst ) ) :
            if ( lst [ test ] [ 1 ] < lst [ item ] [ 1 ] ) :
                ( lst [ test ] , lst [ item ] ) = ( lst [ item ] , lst [ test ] )
    return lst


",{'sort_age': 'correct_4_195.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for test in range ( len ( lst ) ) :
        pass
        for ref_test in range ( len ( lst ) ) :
            if ( lst [ ref_test ] [ 1 ] < lst [ test ] [ 1 ] ) :
                ( lst [ ref_test ] , lst [ test ] ) = ( lst [ test ] , lst [ ref_test ] )
        pass
    return lst
",N/A,6.496,2.848,0.000,0.001,0.032,0.189,0.000,9.815,6,6,0.628
question_4,100,0,wrong_4_141.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


",{'sort_age': 'correct_4_193.py'},{'sort_age': ''},"def sort_age ( sort_list ) :
    ref_sort_list = [ ]
    while sort_list :
        biggest = sort_list [ 0 ]
        for element in sort_list :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort_list . remove ( biggest )
        ref_sort_list . append ( biggest )
    return ref_sort_list
",N/A,0.765,1.026,0.000,0.000,0.058,22.808,0.000,24.783,6,6,0.205
question_4,100,0,wrong_4_162.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.007,0.000,0.479,6,6,0.050
question_4,100,0,wrong_4_055.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )
    return result


",{'sort_age': 'correct_4_123.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )
    return result
",N/A,0.456,1.422,0.000,0.000,0.097,0.014,0.000,2.115,6,6,0.048
question_4,100,0,wrong_4_223.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        for i in lst :
            if ( i == max ( lst ) ) :
                a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        for i in lst :
            if ( i == max ( lst ) ) :
                a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        ref_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= ref_biggest [ 1 ] ) :
                ref_biggest = i
        lst . remove ( ref_biggest )
        a . append ( ref_biggest )
    return a
",N/A,0.462,1.790,0.000,0.000,5.111,0.199,0.000,7.638,6,6,1.038
question_4,100,0,wrong_4_136.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    smallest = a [ 0 ] [ 1 ]
    while a :
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    smallest = a [ 0 ] [ 1 ]
    while a :
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ] [ 1 ]
        b = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element [ 1 ]
                b = element
        a . remove ( b )
        sort . append ( b )
    return sort


",{'sort_age': 'correct_4_190.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ] [ 1 ]
        ref_b = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element [ 1 ]
                ref_b = element
        a . remove ( ref_b )
        sort . append ( ref_b )
    return sort
",N/A,0.462,1.694,0.000,0.000,0.152,10.741,0.000,13.222,6,6,0.391
question_4,100,0,wrong_4_001.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( result + [ lst [ index ] ] )
        lst . pop [ index ]
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( result + [ lst [ index ] ] )
        lst . pop [ index ]
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( [ lst [ index ] ] + result )
        lst . pop ( index )
    return result


",{'sort_age': 'correct_4_015.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( [ lst [ index ] ] + result )
        lst . pop ( index )
    return result
",N/A,0.458,1.823,0.000,0.000,0.101,10.502,0.000,13.385,6,6,0.082
question_4,100,0,wrong_4_310.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.459,0.002,0.000,0.000,0.025,0.173,0.000,0.667,6,6,0.409
question_4,100,0,wrong_4_344.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        new_list = [ ]
        largest = 0
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            pass
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                ref_count = i
        new_list = ( new_list + [ ref_count ] )
        lst . remove ( ref_count )
        largest = 0
    return new_list
",N/A,6.477,3.010,0.000,0.001,5.158,0.744,0.000,15.539,6,6,0.857
question_4,100,0,wrong_4_040.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    return sort_lst . reverse ( )


","def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    return sort_lst . reverse ( )


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s


",{'sort_age': 'correct_4_316.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    sort_lst . reverse ( )
    return sort_lst
",N/A,0.767,1.598,0.000,0.000,0.097,0.063,0.000,2.661,6,6,0.065
question_4,100,0,wrong_4_352.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


","def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


","def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


",{'sort_age': 'correct_4_409.py'},{'sort_age': ''},"def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst
",N/A,0.459,0.024,0.000,0.000,0.052,0.019,0.000,1.354,6,6,0.014
question_4,100,0,wrong_4_153.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.457,0.000,0.000,0.000,0.008,0.043,0.000,0.512,0,6,N/A
question_4,100,0,wrong_4_151.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.456,1.328,0.000,0.000,0.178,0.299,0.000,2.641,6,6,0.030
question_4,100,0,wrong_4_021.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < larget [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < larget [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


",{'sort_age': 'correct_4_019.py'},{'sort_age': ''},"def sort_age ( product ) :
    ref_product = [ ]
    while product :
        largest = product [ 0 ]
        for i in product :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        product . remove ( largest )
        ref_product . append ( largest )
    return ref_product
",N/A,0.457,1.368,0.000,0.000,0.057,22.817,0.000,24.825,6,6,0.227
question_4,100,0,wrong_4_049.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.458,0.000,0.000,0.000,0.008,0.044,0.000,0.515,0,6,N/A
question_4,100,0,wrong_4_097.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.008,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_188.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.046,0.000,0.517,6,6,0.167
question_4,100,0,wrong_4_096.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.458,0.000,0.000,0.000,0.008,0.109,0.000,0.581,6,6,0.111
question_4,100,0,wrong_4_182.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.069,0.000,0.560,6,6,0.136
question_4,100,0,wrong_4_316.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
    lst . remove ( largest )
    lst1 . append ( largest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
    lst . remove ( largest )
    lst1 . append ( largest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        lst1 . append ( largest )
    return lst1


",{'sort_age': 'correct_4_370.py'},{'sort_age': ''},"def sort_age ( lst1 ) :
    ref_lst1 = [ ]
    while lst1 :
        largest = lst1 [ 0 ]
        for i in lst1 :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst1 . remove ( largest )
        ref_lst1 . append ( largest )
    return ref_lst1
",N/A,0.459,1.477,0.000,0.000,5.106,0.450,0.000,7.590,6,6,0.421
question_4,100,0,wrong_4_208.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.460,N/A,N/A,N/A
question_4,100,0,wrong_4_231.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i >= biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i >= biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a
",N/A,0.458,1.293,0.000,0.000,0.107,0.128,0.000,2.090,6,6,0.158
question_4,100,0,wrong_4_020.py,success_w_mut,0,0,"def sort_age ( lst ) :
    new_lst = [ ]
    new_lst . append ( lst [ 0 ] )
    for i in lst [ 1 : ] :
        for j in range ( len ( new_lst ) ) :
            if ( ( i [ 1 ] > new_lst [ j ] [ 1 ] ) and ( j == 0 ) ) :
                new_lst . insert ( 0 , i )
            elif ( i [ 1 ] < new_lst [ j ] [ ( - 1 ) ] ) :
                new_lst . insert ( ( - 1 ) , i )
            elif ( i [ 1 ] > new_lst [ j ] [ 1 ] ) :
                new_lst . insert ( j , i )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    new_lst . append ( lst [ 0 ] )
    for i in lst [ 1 : ] :
        pass
        for j in range ( len ( new_lst ) ) :
            pass
            if ( ( i [ 1 ] > new_lst [ j ] [ 1 ] ) and ( j == 0 ) ) :
                new_lst . insert ( 0 , i )
                if True :
                    temp = lst [ j ]
                    lst [ j ] = lst [ ( j + 1 ) ]
                    lst [ ( j + 1 ) ] = temp
                new_lst . insert ( ( - 1 ) , i )
            elif ( i [ 1 ] > new_lst [ j ] [ 1 ] ) :
                new_lst . insert ( j , i )
            pass
        pass
    return new_lst
","

def sort_age(lst):
    l = len(lst)
    for i in range(0, l):
        for j in range(0, ((l - i) - 1)):
            if (lst[j][1] > lst[(j + 1)][1]):
                if True:
                    temp = lst[j]
                    lst[j] = lst[(j + 1)]
                    lst[(j + 1)] = temp
            elif False:
                pass
    return lst[::(- 1)]
",{'sort_age': 'correct_4_396.py'},"{'sort_age': 'B2.j,B1.f'}","def sort_age ( lst ) :
    new_lst = len ( lst )
    for i in range ( 0 , new_lst ) :
        pass
        for j in range ( 0 , ( ( new_lst - i ) - 1 ) ) :
            pass
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                if True :
                    temp = lst [ j ]
                    lst [ j ] = lst [ ( j + 1 ) ]
                    lst [ ( j + 1 ) ] = temp
            elif False :
                pass
            pass
        pass
    return lst [ : : ( - 1 ) ]
",N/A,10.040,0.714,0.000,0.002,0.144,0.475,0.000,12.829,6,6,0.940
question_4,100,0,wrong_4_180.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( a ) :
    lst = a
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in lst :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        lst . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.767,2.065,0.000,0.000,0.170,19.446,0.000,22.456,6,6,0.264
question_4,100,0,wrong_4_116.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.008,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_146.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    sorted = [ ]
    while lst :
        for elem in lst :
            if ( elem [ 1 ] < youngest ) :
                youngest = elem [ 1 ]
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    sorted = [ ]
    while lst :
        for elem in lst :
            if ( elem [ 1 ] < youngest ) :
                youngest = elem [ 1 ]
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > biggest [ 1 ] ) :
                biggest = elem
        lst . remove ( biggest )
        sorted . append ( biggest )
    return sorted


",{'sort_age': 'correct_4_212.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        ref_biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > ref_biggest [ 1 ] ) :
                ref_biggest = elem
        lst . remove ( ref_biggest )
        sorted . append ( ref_biggest )
    return sorted
",N/A,0.461,1.861,0.000,0.000,0.063,5.800,0.000,8.318,6,6,0.532
question_4,100,0,wrong_4_006.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.460,1.121,0.000,0.000,0.108,0.147,0.000,1.962,6,6,0.045
question_4,100,0,wrong_4_105.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort1 . append ( largest )
    return sort1


",{'sort_age': 'correct_4_153.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort1 . append ( largest )
    return sort1
",N/A,0.461,1.566,0.000,0.000,0.095,15.301,0.000,17.563,6,6,0.234
question_4,100,0,wrong_4_279.py,fail_other,1,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] > lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] > lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            x = lst [ ref_i ] [ 1 ]
            i = func ( ref_newlist , x )
            ref_newlist . insert ( i , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.756,0.107,0.000,0.000,0.020,1.616,0.000,2.506,1,6,N/A
question_4,100,0,wrong_4_324.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.554,0.041,0.000,0.000,0.043,0.221,0.000,1.440,6,6,0.824
question_4,100,0,wrong_4_042.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.480,0.001,0.000,0.000,0.008,0.048,0.000,0.540,6,6,0.167
question_4,100,0,wrong_4_229.py,fail_other,1,0,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.610,0.085,0.000,0.000,0.019,1.578,0.000,2.299,1,6,N/A
question_4,100,0,wrong_4_132.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.004,0.000,0.479,6,6,0.050
question_4,100,0,wrong_4_063.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            lst . remove ( old )
            final . append ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            lst . remove ( old )
            final . append ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final


",{'sort_age': 'correct_4_126.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final
",N/A,0.458,0.980,0.000,0.000,0.069,0.014,0.000,1.680,6,6,0.045
question_4,100,0,wrong_4_193.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.461,0.001,0.000,0.000,0.008,0.008,0.000,0.482,6,6,0.048
question_4,100,0,wrong_4_259.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.000,0.000,0.000,0.008,0.008,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_171.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.460,0.000,0.000,0.000,0.008,0.106,0.000,0.590,6,6,0.176
question_4,100,0,wrong_4_280.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.001,0.000,0.000,0.008,0.004,0.000,0.474,6,6,0.050
question_4,100,0,wrong_4_157.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new


",{'sort_age': 'correct_4_215.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new
",N/A,0.460,1.419,0.000,0.000,0.095,10.600,0.000,12.703,6,6,0.068
question_4,100,0,wrong_4_107.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
                smallest_tuple = k
        lst . remove ( k )
        sort . append ( k )


","def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
                smallest_tuple = k
        lst . remove ( k )
        sort . append ( k )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        element = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > biggest ) :
                biggest = ele [ 1 ]
                element = ele
        lst . remove ( element )
        sort . append ( element )
    return sort


",{'sort_age': 'correct_4_038.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        ref_biggest = lst [ 0 ] [ 1 ]
        ref_element = lst [ 0 ]
        for ref_ele in lst :
            if ( ref_ele [ 1 ] > ref_biggest ) :
                ref_biggest = ref_ele [ 1 ]
                ref_element = ref_ele
        lst . remove ( ref_element )
        sort . append ( ref_element )
    return sort
",N/A,0.460,2.320,0.000,0.000,0.148,6.526,0.000,9.644,6,6,0.521
question_4,100,0,wrong_4_295.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            count = 0
            if ( lst [ i ] [ 1 ] >= biggest ) :
                biggest = lst [ i ] [ 1 ]
            else :
                i += 1
                count += 1
        lst . remove ( lst [ ( i - count ) ] )
        sort . append ( lst [ ( i - count ) ] )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            count = 0
            if ( lst [ i ] [ 1 ] >= biggest ) :
                biggest = lst [ i ] [ 1 ]
            else :
                i += 1
                count += 1
        lst . remove ( lst [ ( i - count ) ] )
        sort . append ( lst [ ( i - count ) ] )
    return sort


","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_137.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_slist = [ ]
    while sort :
        biggest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = sort [ i ]
            else :
                continue
        ref_slist . append ( biggest )
        sort . remove ( biggest )
    return ref_slist
",N/A,0.487,0.160,0.000,0.000,0.107,9.443,0.000,10.601,6,6,0.550
question_4,100,0,wrong_4_233.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for element in lst :
            if ( element [ 1 ] < smallest ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for element in lst :
            if ( element [ 1 ] < smallest ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.483,1.404,0.000,0.000,0.064,5.778,0.000,7.853,6,6,0.182
question_4,100,0,wrong_4_199.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.614,0.084,0.000,0.000,0.018,0.223,0.000,0.946,1,6,N/A
question_4,100,0,wrong_4_207.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.459,N/A,N/A,N/A
question_4,100,0,wrong_4_173.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.459,2.607,0.000,0.000,0.064,15.692,0.000,19.110,6,6,0.419
question_4,100,0,wrong_4_228.py,fail_other,1,0,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( item + lst )
    return lst


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( item + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.612,0.083,0.000,0.000,0.018,1.555,0.000,2.274,1,6,N/A
question_4,100,0,wrong_4_211.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = test ( max )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = test ( max )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.235,0.051,0.000,0.001,0.065,17.427,0.000,27.060,6,6,0.847
question_4,100,0,wrong_4_051.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
        print ( final )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
        print ( final )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
    return final


",{'sort_age': 'correct_4_106.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
    return final
",N/A,0.772,1.636,0.000,0.000,0.100,5.637,0.000,8.278,6,6,0.109
question_4,100,0,wrong_4_331.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.462,1.610,0.000,0.000,0.062,0.093,0.000,2.362,6,6,0.087
question_4,100,0,wrong_4_334.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( 1 , len ( lst ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
            lst . pop ( i )
            lst . insert ( ( i - 1 ) , lst [ i ] )
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( 1 , len ( lst ) ) :
        pass
        if False :
            lst . pop ( i )
            lst . insert ( ( i - 1 ) , lst [ i ] )
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.619,0.039,0.000,0.001,0.031,0.057,0.000,5.007,6,6,0.868
question_4,100,0,wrong_4_198.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ( ) ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ( ) ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.719,0.090,0.000,0.000,0.018,0.365,0.000,1.200,1,6,N/A
question_4,100,0,wrong_4_135.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    return sort_age ( lst )


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    return sort_age ( lst )


","

def sort_age(lst):
    if ((len(lst) == 1) or (len(lst) == 0)):
        return lst
    temp = lst[0][1]
    count = 0
    for i in range(len(lst)):
        if (lst[i][1] > temp):
            temp = lst[i][1]
            count = i
    result = [lst[count]]
    pop = lst.pop(count)
    return (result + sort_age(lst))
    pass
",{'sort_age': 'correct_4_390.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    small = lst [ 0 ] [ 1 ]
    ref_count = 0
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > small ) :
            small = lst [ i ] [ 1 ]
            ref_count = i
    ref_result = [ lst [ ref_count ] ]
    ref_pop = lst . pop ( ref_count )
    return ( ref_result + sort_age ( lst ) )
    pass
",N/A,0.562,0.024,0.000,0.000,0.066,0.722,0.000,1.660,6,6,0.415
question_4,100,0,wrong_4_082.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.477,0.000,0.000,0.000,0.008,0.042,0.000,0.532,0,6,N/A
question_4,100,0,wrong_4_326.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.551,0.041,0.000,0.000,0.043,0.216,0.000,1.427,6,6,0.809
question_4,100,0,wrong_4_156.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new


",{'sort_age': 'correct_4_215.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new
",N/A,0.461,1.435,0.000,0.000,0.094,10.595,0.000,12.593,6,6,0.068
question_4,100,0,wrong_4_013.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.462,0.000,0.000,0.000,0.008,0.043,0.000,0.518,0,6,N/A
question_4,100,0,wrong_4_213.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.457,0.000,0.000,0.000,0.008,0.008,0.000,0.478,6,6,0.050
question_4,100,0,wrong_4_191.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
    for element in lst :
        if ( element [ 1 ] > biggest [ 1 ] ) :
            biggest = element
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                sort = [ ]
            biggest = element
        pass
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_318.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,6.960,0.698,0.000,0.001,5.107,0.473,0.000,13.353,6,6,0.250
question_4,100,0,wrong_4_209.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
            lst . remove ( smallest )
            sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
            lst . remove ( smallest )
            sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        smallest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        sort . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.762,1.315,0.000,0.000,0.055,0.200,0.000,2.465,6,6,0.279
question_4,100,0,wrong_4_336.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_390.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass
",N/A,0.457,0.057,0.000,0.000,0.104,0.069,0.000,1.291,6,6,0.105
question_4,100,0,wrong_4_025.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.463,1.277,0.000,0.000,0.121,0.250,0.000,2.215,6,6,0.184
question_4,100,0,wrong_4_305.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.461,0.001,0.000,0.000,0.008,0.121,0.000,0.596,0,6,N/A
question_4,100,0,wrong_4_298.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    pass


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    pass


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    return a
    pass


",{'sort_age': 'correct_4_359.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    return a
    pass
",N/A,0.455,1.249,0.000,0.000,0.096,0.014,0.000,1.942,6,6,0.047
question_4,100,0,wrong_4_317.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    print ( a )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    print ( sort )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    print ( a )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    print ( sort )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for element in a :
            if ( element > largest ) :
                largest = element
        a . remove ( largest )
        sort . append ( largest )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


",{'sort_age': 'correct_4_217.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2
",N/A,0.468,0.076,0.000,0.000,0.758,0.341,0.000,2.157,6,6,0.101
question_4,100,0,wrong_4_018.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sample = lst [ 0 ]
    newlst = [ ]
    for i in lst :
        if ( i [ 1 ] > sample [ 1 ] ) :
            newlst = ( [ i ] + newlst )
        else :
            newlst += [ i ]
    return newlst


","def sort_age ( lst ) :
    sample = lst [ 0 ]
    newlst = [ ]
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > sample [ 1 ] ) :
                newlst = ( [ i ] + newlst )
            newlst += [ i ]
        pass
    return newlst
","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_266.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sample = [ ]
    while lst :
        ref_maximum = lst [ 0 ]
        for i in lst :
            pass
            if ( i [ 1 ] > ref_maximum [ 1 ] ) :
                ref_maximum = i
        sample . append ( ref_maximum )
        lst . remove ( ref_maximum )
    return sample
",N/A,6.541,2.675,0.000,0.001,5.110,0.491,0.000,14.941,6,6,0.780
question_4,100,0,wrong_4_090.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.702,0.055,0.000,0.000,0.051,0.047,0.000,1.010,6,6,0.160
question_4,100,0,wrong_4_281.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] ) = ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] ) = ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.476,0.026,0.000,0.000,0.028,0.196,0.000,1.558,6,6,0.386
question_4,100,0,wrong_4_350.py,fail_other,1,0,"def sort_age ( lst ) :
    result = [ ]
    for i in lst :
        result += [ i [ : : ( - 1 ) ] ]
    result . sort ( )
    result . reverse ( )
    ans = [ ]
    for i in result :
        ans += [ i [ : : ( - 1 ) ] ]
    return ans


","def sort_age ( lst ) :
    result = [ ]
    for i in lst :
        result += [ i [ : : ( - 1 ) ] ]
    result . sort ( )
    result . reverse ( )
    ans = [ ]
    for i in result :
        ans += [ i [ : : ( - 1 ) ] ]
    return ans


","

def sort_age(lst):
    output = []
    for i in range(len(lst))[:int((len(range(len(lst))) / 2))]:
        largest = max(lst, key=(lambda p: p[1]))
        lst.remove(largest)
        output.append(largest)
    for i in range(len(lst))[int((len(range(len(lst))) / 2)):]:
        largest = max(lst, key=(lambda p: p[1]))
        lst.remove(largest)
        output.append(largest)
    return output
",{'sort_age': 'correct_4_001.py'},{'sort_age': 'E1.z'},"def sort_age ( lst ) :
    ref_output = [ ]
    for i in range ( len ( lst ) ) [ : int ( ( len ( range ( len ( lst ) ) ) / 2 ) ) ] :
        ref_largest = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( ref_largest )
        ref_output . append ( ref_largest )
    for i in range ( len ( lst ) ) [ int ( ( len ( range ( len ( lst ) ) ) / 2 ) ) : ] :
        ref_largest = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( ref_largest )
        ref_output . append ( ref_largest )
    return ref_output
",N/A,0.586,0.023,0.000,0.000,0.057,0.342,0.000,1.017,2,6,N/A
question_4,100,0,wrong_4_234.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
            lst . remove ( oldest )
            sorted . append ( oldest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
            lst . remove ( oldest )
            sorted . append ( oldest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted . append ( oldest )
    return sorted


",{'sort_age': 'correct_4_261.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted . append ( oldest )
    return sorted
",N/A,0.465,1.333,0.000,0.000,0.070,0.014,0.000,2.015,6,6,0.045
question_4,100,0,wrong_4_067.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.479,0.000,0.000,0.000,0.008,0.039,0.000,0.530,0,6,N/A
question_4,100,0,wrong_4_313.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.457,0.004,0.000,0.000,0.008,0.008,0.000,0.503,6,6,0.040
question_4,100,0,wrong_4_301.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.456,0.001,0.000,0.000,0.009,0.125,0.000,0.615,6,6,0.542
question_4,100,0,wrong_4_089.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.461,0.055,0.000,0.000,0.050,0.045,0.000,0.764,6,6,0.184
question_4,100,0,wrong_4_047.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output
",N/A,0.459,1.646,0.000,0.000,0.094,10.601,0.000,12.927,6,6,0.068
question_4,100,0,wrong_4_260.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.462,0.853,0.000,0.000,0.100,0.131,0.000,1.671,6,6,0.023
question_4,100,0,wrong_4_282.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.462,0.026,0.000,0.000,0.027,0.173,0.000,1.486,6,6,0.386
question_4,100,0,wrong_4_065.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


",{'sort_age': 'correct_4_024.py'},{'sort_age': ''},"def sort_age ( rslt ) :
    ref_rslt = [ ]
    while rslt :
        smallest = rslt [ 0 ]
        for element in rslt :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        rslt . remove ( smallest )
        ref_rslt . append ( smallest )
    return ref_rslt
",N/A,0.483,1.011,0.000,0.000,0.055,26.904,0.000,28.579,6,6,0.182
question_4,100,0,wrong_4_038.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.460,0.001,0.000,0.000,0.008,0.008,0.000,0.481,6,6,0.050
question_4,100,0,wrong_4_069.py,fail_other,1,0,"def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if False:
            pass
        b = func(newlist, age)
        newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    store = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if False :
            pass
        ref_b = func ( store , ref_age )
        store . insert ( ref_b , lst [ i ] )
    return list ( reversed ( store ) )
",N/A,0.725,0.086,0.000,0.000,0.020,0.404,0.000,1.241,1,6,N/A
question_4,100,0,wrong_4_127.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.457,1.125,0.000,0.000,0.064,5.690,0.000,7.464,6,6,0.227
question_4,100,0,wrong_4_092.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    answer = [ ]
    for i in range ( 0 , len ( lst ) , ( - 1 ) ) :
        biggest = lst [ i ]
        for a in range ( i ) :
            if ( lst [ a ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ a ]
        answer += biggest
    return answer


","def sort_age ( lst ) :
    answer = [ ]
    for i in range ( 0 , len ( lst ) , ( - 1 ) ) :
        biggest = lst [ i ]
        for a in range ( i ) :
            if ( lst [ a ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ a ]
        answer += biggest
    return answer


","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        biggest = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                biggest += 1
        ref_new . insert ( biggest , ref_x )
    return ref_new
",N/A,0.459,0.655,0.000,0.000,0.062,0.614,0.000,1.948,6,6,0.655
question_4,100,0,wrong_4_043.py,fail_other,0,0,"def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > result [ 0 ] [ 1 ] ) :
            result . insert ( 0 , i )
        elif ( i [ 1 ] < result [ ( - 1 ) ] [ 1 ] ) :
            result . append ( i )
        else :
            for j in range ( ( len ( result ) - 1 ) ) :
                if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                    result . insert ( j , i )
    return result


","def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        pass
    result . append ( i )
    for i in range ( len ( a ) ) :
        pass
        for j in range ( ( len ( result ) - 1 ) ) :
            pass
            if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                pass
            pass
        pass
    return result
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    lst = lst . copy ( )
    lst . clear ( )
    for i in lst :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( lst [ i ] not in lst ) ) :
                lst . append ( lst [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.196,0.118,0.000,0.001,0.078,0.291,0.000,6.696,1,6,N/A
question_4,100,0,wrong_4_212.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.228,0.033,0.000,0.001,0.066,17.435,0.000,26.775,6,6,0.847
question_4,100,0,wrong_4_189.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.471,0.000,0.000,0.000,0.008,0.008,0.000,0.492,6,6,0.050
question_4,100,0,wrong_4_220.py,success_w_mut,0,0,"def sort_age ( lst ) :
    male = [ ]
    female = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 0 ] == 'M' ) :
            male . append ( lst [ i ] )
        else :
            female . append ( lst [ i ] )
    male . sort ( )
    female . sort ( )
    combine = ( male [ : : ( - 1 ) ] + female [ : : ( - 1 ) ] )
    return combine


","def sort_age ( lst ) :
    male = [ ]
    female = [ ]
    while lst :
        return slist
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ i ] [ 0 ] == 'M' ) :
                male . append ( lst [ i ] )
            else :
                elder = lst [ i ]
            female . append ( lst [ i ] )
        pass
    male . sort ( )
    female . sort ( )
    combine = ( male [ : : ( - 1 ) ] + female [ : : ( - 1 ) ] )
    return combine
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_413.py'},{'sort_age': ''},"def sort_age ( female ) :
    ref_slist = [ ]
    while female :
        elder = female [ 0 ]
        for i in range ( len ( female ) ) :
            pass
            if ( female [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = female [ i ]
            else :
                continue
        ref_slist . append ( elder )
        female . remove ( elder )
    return ref_slist
",N/A,6.565,4.433,0.000,0.002,0.070,14.013,0.000,25.385,6,6,0.686
question_4,100,0,wrong_4_081.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.762,1.178,0.000,0.000,0.104,0.070,0.000,2.374,6,6,0.054
question_4,100,0,wrong_4_100.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.589,0.038,0.000,0.001,0.030,0.056,0.000,4.981,6,6,0.800
question_4,100,0,wrong_4_147.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] < youngest [ 1 ] ) :
                youngest = elem
        print ( youngest )
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] < youngest [ 1 ] ) :
                youngest = elem
        print ( youngest )
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > biggest [ 1 ] ) :
                biggest = elem
        lst . remove ( biggest )
        sorted . append ( biggest )
    return sorted


",{'sort_age': 'correct_4_212.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > youngest [ 1 ] ) :
                youngest = elem
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted
",N/A,0.764,1.710,0.000,0.000,0.101,0.171,0.000,2.883,6,6,0.104
