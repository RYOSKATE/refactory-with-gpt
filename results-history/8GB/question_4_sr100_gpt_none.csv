Question,Sampling Rate,Experiment ID,File Name,Status,Match (Rfty Code),Match (Ori Code),Buggy Code,Buggy Mutation,Refactored Correct Code,Original Correct File Name,Rule ID,Repair,Stru. Matching Time,Online Refactoring Time,GCR Time,Stru. Mutation Time,Block Mapping Time,Variable Mapping Time,Specification&Synthesis Time,GPT Time,Total Time,#Passed Test Case,#Test Case,RPS
question_4,100,0,wrong_4_005.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.765,1.549,0.000,0.000,0.110,0.197,0.000,2.753,6,6,0.130
question_4,100,0,wrong_4_014.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.003,0.000,0.000,0.008,0.008,0.000,0.501,6,6,0.050
question_4,100,0,wrong_4_284.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


","def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


","def sort_age ( lst ) :
    newlist = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
            else :
                continue
        lst . remove ( oldest )
        newlist . append ( oldest )
    return newlist


",{'sort_age': 'correct_4_353.py'},{'sort_age': ''},"def sort_age ( newlist ) :
    ref_newlist = [ ]
    while newlist :
        oldest = newlist [ 0 ]
        for i in newlist :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
            else :
                continue
        newlist . remove ( oldest )
        ref_newlist . append ( oldest )
    return ref_newlist
",N/A,0.461,0.087,0.000,0.000,0.069,21.044,0.000,21.783,6,6,0.262
question_4,100,0,wrong_4_085.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.465,1.105,0.000,0.000,0.097,0.061,0.000,1.985,6,6,0.054
question_4,100,0,wrong_4_247.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_result = [ ]
    while list1 :
        ref_biggest = list1 [ 0 ] [ 1 ]
        biggest = list1 [ 0 ]
        for i in list1 :
            if ( i [ 1 ] > ref_biggest ) :
                ref_biggest = i [ 1 ]
                biggest = i
        list1 . remove ( biggest )
        ref_result . append ( biggest )
    return ref_result
",N/A,0.464,2.385,0.000,0.000,0.112,45.642,0.000,48.971,6,6,0.432
question_4,100,0,wrong_4_354.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.008,0.004,0.000,0.481,6,6,0.050
question_4,100,0,wrong_4_277.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.462,0.004,0.000,0.000,0.008,0.008,0.000,0.527,6,6,0.048
question_4,100,0,wrong_4_074.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.466,0.001,0.000,0.000,0.008,0.008,0.000,0.487,6,6,0.050
question_4,100,0,wrong_4_060.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.468,1.196,0.000,0.000,0.098,0.142,0.000,2.008,6,6,0.158
question_4,100,0,wrong_4_226.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( a , ref_age )
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.772,0.062,0.000,0.000,0.019,0.230,0.000,1.089,1,6,N/A
question_4,100,0,wrong_4_181.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.470,1.769,0.000,0.000,0.162,5.673,0.000,8.222,6,6,0.102
question_4,100,0,wrong_4_111.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.469,1.096,0.000,0.000,0.099,0.066,0.000,1.739,6,6,0.054
question_4,100,0,wrong_4_087.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.471,1.103,0.000,0.000,0.098,0.071,0.000,1.752,6,6,0.054
question_4,100,0,wrong_4_152.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( lst [ i ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( lst [ i ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.478,0.031,0.000,0.000,0.027,31.602,0.000,32.435,6,6,0.133
question_4,100,0,wrong_4_155.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ] [ 1 ]
        for i in range ( lst ( old ) ) :
            if ( lst [ i ] [ 1 ] < curr ) :
                curr = lst [ i ] [ 1 ]
                counter = i
        lst . remove ( counter )
        new . append ( counter )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ] [ 1 ]
        for i in range ( lst ( old ) ) :
            if ( lst [ i ] [ 1 ] < curr ) :
                curr = lst [ i ] [ 1 ]
                counter = i
        lst . remove ( counter )
        new . append ( counter )
    return new


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new_lst = [ ]
    while new :
        curr = new [ 0 ]
        for i in range ( len ( new ) ) :
            if ( new [ i ] [ 1 ] > curr [ 1 ] ) :
                curr = new [ i ]
        new . remove ( curr )
        ref_new_lst . append ( curr )
    return ref_new_lst
",N/A,0.473,2.156,0.000,0.000,0.056,11.617,0.000,14.588,6,6,0.433
question_4,100,0,wrong_4_307.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass


",{'sort_age': 'correct_4_281.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
    pass
",N/A,0.464,1.376,0.000,0.000,0.095,0.135,0.000,2.177,6,6,0.179
question_4,100,0,wrong_4_242.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.615,0.107,0.000,0.000,0.035,2.563,0.000,3.328,1,6,N/A
question_4,100,0,wrong_4_117.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = T )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = T )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.003,0.000,0.000,0.008,0.047,0.000,0.544,6,6,0.167
question_4,100,0,wrong_4_011.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest_tup = lst [ 0 ]
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest_tup = i
                largest = i [ 1 ]
        lst . remove ( largest_tup )
        result . append ( largest_tup )
    return result


",{'sort_age': 'correct_4_041.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        largest = lst [ 0 ]
        ref_largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > ref_largest ) :
                largest = i
                ref_largest = i [ 1 ]
        lst . remove ( largest )
        result . append ( largest )
    return result
",N/A,0.470,1.578,0.000,0.000,0.137,11.734,0.000,14.174,6,6,0.226
question_4,100,0,wrong_4_311.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.467,0.026,0.000,0.000,0.025,0.185,0.000,1.530,6,6,0.409
question_4,100,0,wrong_4_139.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list
",N/A,0.494,1.548,0.000,0.000,0.095,0.133,0.000,2.393,6,6,0.071
question_4,100,0,wrong_4_197.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.613,0.088,0.000,0.000,0.019,0.311,0.000,1.038,1,6,N/A
question_4,100,0,wrong_4_121.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ]
    firstnum = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > firstnum ) :
            result = ( ( first , ) + ( x , ) )
        else :
            result = ( ( x , ) + ( first , ) )
    return result
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ]
    firstnum = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        pass
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > firstnum ) :
                result = ( ( first , ) + ( x , ) )
            result = ( ( x , ) + ( first , ) )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        tuple_largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                tuple_largest = i
        lst . remove ( tuple_largest )
        result . append ( tuple_largest )
    return result


",{'sort_age': 'correct_4_090.py'},{'sort_age': ''},"def sort_age ( lst ) :
    first = [ ]
    while lst :
        ref_largest = lst [ 0 ] [ 1 ]
        ref_tuple_largest = lst [ 0 ]
        for ref_i in lst :
            pass
            if ( ref_i [ 1 ] > ref_largest ) :
                ref_largest = ref_i [ 1 ]
                ref_tuple_largest = ref_i
        lst . remove ( ref_tuple_largest )
        first . append ( ref_tuple_largest )
    return first
",N/A,6.586,3.561,0.000,0.001,5.149,1.165,0.000,16.717,6,6,0.800
question_4,100,0,wrong_4_037.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.484,0.003,0.000,0.000,0.008,0.080,0.000,0.580,0,6,N/A
question_4,100,0,wrong_4_059.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    b = [ ]
    n = len ( lst )
    for i in range ( n ) :
        age = lst [ i ] [ 1 ]
        a += [ age ]
        a . sort ( )
        a . reverse ( )
    for j in range ( n ) :
        for k in range ( n ) :
            if ( a [ j ] == lst [ k ] [ 1 ] ) :
                b += [ lst [ k ] ]
            else :
                continue
    return b


","def sort_age ( lst ) :
    a = [ ]
    b = [ ]
    n = len ( lst )
    for i in range ( n ) :
        age = lst [ i ] [ 1 ]
        a += [ age ]
        a . sort ( )
        a . reverse ( )
    for j in range ( n ) :
        for k in range ( n ) :
            if ( a [ j ] == lst [ k ] [ 1 ] ) :
                b += [ lst [ k ] ]
            else :
                continue
    return b


","

def sort_age(lst):
    ages = []
    for j in lst:
        ages.append(j[1])
    ages = sort(ages)
    new_lst = []
    for age in ages:
        for i in lst:
            if (age == i[1]):
                new_lst.append(i)
            else:
                pass
    return new_lst
",{'sort_age': 'correct_4_158.py'},{'sort_age': 'B2.l'},"def sort_age ( lst ) :
    ref_ages = [ ]
    for i in lst :
        ref_ages . append ( i [ 1 ] )
    ref_ages = sort ( ref_ages )
    ref_new_lst = [ ]
    for j in ref_ages :
        for k in lst :
            if ( j == k [ 1 ] ) :
                ref_new_lst . append ( k )
            else :
                pass
    return ref_new_lst
",N/A,0.743,0.022,0.000,0.000,0.341,8.683,0.000,9.797,0,6,N/A
question_4,100,0,wrong_4_253.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


",{'sort_age': 'correct_4_180.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.474,1.295,0.000,0.000,0.067,0.181,0.000,2.159,6,6,0.064
question_4,100,0,wrong_4_264.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.474,0.001,0.000,0.000,0.009,0.008,0.000,0.497,6,6,0.050
question_4,100,0,wrong_4_224.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i == max ( lst ) ) :
            a . append ( i )
        continue
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i == max ( lst ) ) :
            a . append ( i )
        continue
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( a , ref_age )
        if True :
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.776,0.058,0.000,0.000,0.020,0.248,0.000,1.107,1,6,N/A
question_4,100,0,wrong_4_023.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.469,1.331,0.000,0.000,0.055,15.523,0.000,17.482,6,6,0.395
question_4,100,0,wrong_4_073.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.468,1.085,0.000,0.000,0.058,0.108,0.000,1.872,6,6,0.043
question_4,100,0,wrong_4_094.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda tup : tup [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.003,0.000,0.000,0.009,0.005,0.000,0.505,6,6,0.050
question_4,100,0,wrong_4_057.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


","def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


","def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass


",{'sort_age': 'correct_4_102.py'},{'sort_age': ''},"def sort_age ( lst ) :
    arranged = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        arranged . append ( oldest )
    return arranged
    pass
",N/A,0.465,1.339,0.000,0.000,0.098,0.148,0.000,2.158,6,6,0.154
question_4,100,0,wrong_4_292.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.472,1.827,0.000,0.000,0.095,10.861,0.000,13.394,6,6,0.298
question_4,100,0,wrong_4_306.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i < smallest ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.468,1.510,0.000,0.000,0.097,0.145,0.000,2.322,6,6,0.243
question_4,100,0,wrong_4_019.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


",{'sort_age': 'correct_4_019.py'},{'sort_age': ''},"def sort_age ( lst ) :
    product = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        product . append ( smallest )
    return product
",N/A,0.469,1.555,0.000,0.000,0.096,0.145,0.000,2.391,6,6,0.023
question_4,100,0,wrong_4_041.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.470,0.001,0.000,0.000,0.008,0.005,0.000,0.489,6,6,0.050
question_4,100,0,wrong_4_077.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.004,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_044.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.004,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_272.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] > right [ 0 ] [ 1 ] ) :
            new_list . append ( left . pop ( 0 ) )
        else :
            new_list . append ( right . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        new_list . reverse
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] > right [ 0 ] [ 1 ] ) :
            new_list . append ( left . pop ( 0 ) )
        else :
            new_list . append ( right . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        new_list . reverse
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.882,0.095,0.000,0.000,0.084,10.622,0.000,12.135,6,6,0.785
question_4,100,0,wrong_4_076.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.492,0.001,0.000,0.000,0.008,0.004,0.000,0.510,6,6,0.050
question_4,100,0,wrong_4_187.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i > eldest ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i > eldest ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


",{'sort_age': 'correct_4_251.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new
",N/A,0.466,1.185,0.000,0.000,0.097,0.141,0.000,1.992,6,6,0.158
question_4,100,0,wrong_4_124.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] < firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = [ lst [ 0 ] ]
    while lst :
        lst . remove ( largest )
        result . append ( largest )
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] < firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        ref_largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > ref_largest [ 1 ] ) :
                ref_largest = x
        lst . remove ( ref_largest )
        firstnum . append ( ref_largest )
    return firstnum
",N/A,6.591,3.118,0.000,0.001,0.056,23.575,0.000,33.485,6,6,0.816
question_4,100,0,wrong_4_269.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.477,0.001,0.000,0.000,0.008,0.008,0.000,0.498,6,6,0.050
question_4,100,0,wrong_4_022.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return lst


","def sort_age ( lst ) :
    while lsst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        a . remove ( biggest )
        sort . append ( biggest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.489,1.272,0.000,0.000,0.054,15.493,0.000,17.405,6,6,0.457
question_4,100,0,wrong_4_161.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.004,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_323.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    new_lst = lst
    newnew = [ new_lst [ 0 ] ]
    for i in new_lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    new_lst = lst
    newnew = [ new_lst [ 0 ] ]
    for i in new_lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.601,0.041,0.000,0.000,0.047,0.272,0.000,1.570,6,6,0.817
question_4,100,0,wrong_4_262.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
        s . reverse ( )
    return s


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
        s . reverse ( )
    return s


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s


",{'sort_age': 'correct_4_316.py'},{'sort_age': ''},"def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s
",N/A,0.469,0.972,0.000,0.000,0.104,5.666,0.000,7.354,6,6,0.042
question_4,100,0,wrong_4_332.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggest - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggest - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.466,1.484,0.000,0.000,0.065,0.111,0.000,2.261,6,6,0.065
question_4,100,0,wrong_4_249.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                b = ( lst [ i ] , )
        lst . remove ( b )
        list1 . append ( b )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                b = ( lst [ i ] , )
        lst . remove ( b )
        list1 . append ( b )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        b = lst [ 0 ] [ 1 ]
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > b ) :
                b = i [ 1 ]
                biggest = i
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.473,2.246,0.000,0.000,0.120,35.767,0.000,38.961,6,6,0.310
question_4,100,0,wrong_4_333.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( 1 , len ( lst ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
            lst . pop ( lst [ i ] )
            lst . insert ( lst [ i ] , ( i - 1 ) )
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( 1 , len ( lst ) ) :
        pass
        if False :
            lst . pop ( lst [ i ] )
            lst . insert ( lst [ i ] , ( i - 1 ) )
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.658,0.037,0.000,0.001,0.031,0.062,0.000,5.071,6,6,0.804
question_4,100,0,wrong_4_337.py,fail_other,0,0,"def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( lst == [ ] ) :
        return [ ]
    new_lst += [ x ]
    for x in lst [ 1 : ] :
        pass
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        count = 0
        while ( count < len ( new_lst ) ) :
            pass
            if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                count += 1
                continue
            else :
                pass
            pass
        pass
    return new_lst [ : : ( - 1 ) ]
","

def sort_age(lst):
    if (lst == []):
        return []
    new_lst = [lst[0]]
    for x in lst[1:]:
        if (x[1] > new_lst[(- 1)][1]):
            new_lst += [x]
        count = 0
        while (count < len(new_lst)):
            if (x[1] > new_lst[count][1]):
                count += 1
                continue
            else:
                new_lst = ((new_lst[0:count] + [x]) + new_lst[count:])
                break
    return new_lst[::(- 1)]
",{'sort_age': 'correct_4_392.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        pass
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        count = 0
        while ( count < len ( new_lst ) ) :
            pass
            if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                count += 1
                continue
            else :
                new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                break
            pass
        pass
    return new_lst [ : : ( - 1 ) ]
",N/A,7.972,0.108,0.000,0.002,0.054,0.116,0.000,8.267,3,6,N/A
question_4,100,0,wrong_4_103.py,fail_other,1,0,"def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    sort1 = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( sort1 , ref_age )
            sort1 . insert ( ref_b , lst [ i ] )
    return list ( reversed ( sort1 ) )
",N/A,0.761,0.075,0.000,0.000,0.030,0.539,0.000,1.411,1,6,N/A
question_4,100,0,wrong_4_029.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = lst [ : mid ]
        lst2 = lst [ mid : ]
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = lst [ : mid ]
        lst2 = lst [ mid : ]
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.465,0.088,0.000,0.000,0.097,4.898,0.000,6.889,6,6,0.086
question_4,100,0,wrong_4_106.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > smallest [ 1 ] ) :
                smallest = k
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.467,2.150,0.000,0.000,0.064,10.790,0.000,13.602,6,6,0.511
question_4,100,0,wrong_4_267.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_list = [ ]
    while a :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest ) :
                oldest = element [ 1 ]
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


","def sort_age ( lst ) :
    sorted_list = [ ]
    while a :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest ) :
                oldest = element [ 1 ]
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


","def sort_age ( lst ) :
    sorted_list = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted_list . append ( oldest )
    return sorted_list


",{'sort_age': 'correct_4_330.py'},{'sort_age': ''},"def sort_age ( sorted_list ) :
    ref_sorted_list = [ ]
    while sorted_list :
        oldest = sorted_list [ 0 ]
        for element in sorted_list :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        sorted_list . remove ( oldest )
        ref_sorted_list . append ( oldest )
    return ref_sorted_list
",N/A,0.469,1.429,0.000,0.000,0.055,22.992,0.000,25.073,6,6,0.318
question_4,100,0,wrong_4_045.py,fail_other,0,0,"def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > result [ 0 ] [ 1 ] ) :
            result . insert ( 0 , i )
        elif ( i [ 1 ] < result [ ( - 1 ) ] [ 1 ] ) :
            result . append ( i )
        else :
            for j in range ( ( len ( result ) - 1 ) ) :
                if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                    result . insert ( ( j + 1 ) , i )
    return result


","def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        pass
    result . append ( i )
    for i in range ( len ( a ) ) :
        pass
        for j in range ( ( len ( result ) - 1 ) ) :
            pass
            if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                pass
            pass
        pass
    return result
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    lst = lst . copy ( )
    lst . clear ( )
    for i in lst :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( lst [ i ] not in lst ) ) :
                lst . append ( lst [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.308,0.115,0.000,0.002,0.074,0.316,0.000,6.828,1,6,N/A
question_4,100,0,wrong_4_246.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for j in range ( 1 , len ( lst ) ) :
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for j in range ( 1 , len ( lst ) ) :
        for i in range ( 1 , ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    n = ( len ( lst ) - 1 )
    for i in range ( 0 , n ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_164.py'},{'sort_age': ''},"def sort_age ( lst ) :
    j = ( len ( lst ) - 1 )
    for ref_i in range ( 0 , j ) :
        for i in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ ref_i ] , lst [ i ] ) = ( lst [ i ] , lst [ ref_i ] )
    return lst
",N/A,0.779,0.797,0.000,0.000,0.088,1.067,0.000,3.273,6,6,0.707
question_4,100,0,wrong_4_250.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True


","def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True


","def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True
    return lst


",{'sort_age': 'correct_4_302.py'},{'sort_age': ''},"def sort_age ( lst ) :
    swap = True
    while swap :
        swap = False
        for tag in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ tag ] [ 1 ] < lst [ ( tag + 1 ) ] [ 1 ] ) :
                ( lst [ tag ] , lst [ ( tag + 1 ) ] ) = ( lst [ ( tag + 1 ) ] , lst [ tag ] )
                swap = True
    return lst
",N/A,0.462,1.044,0.000,0.000,0.049,0.016,0.000,2.357,6,6,0.029
question_4,100,0,wrong_4_174.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.471,2.504,0.000,0.000,0.064,19.914,0.000,23.246,6,6,0.419
question_4,100,0,wrong_4_190.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
    for element in lst :
        if ( element [ 1 ] > biggest [ 1 ] ) :
            biggest = element
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                sort = [ ]
            biggest = element
        pass
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_318.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,7.054,0.693,0.000,0.001,5.106,0.529,0.000,13.496,6,6,0.250
question_4,100,0,wrong_4_345.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new_list = [ ]
    ref_largest = 0
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > ref_largest ) :
                ref_largest = i [ 1 ]
                ref_count = i
        ref_new_list = ( ref_new_list + [ ref_count ] )
        lst . remove ( ref_count )
        ref_largest = 0
    return ref_new_list
",N/A,6.710,2.918,0.000,0.001,5.160,0.862,0.000,15.803,6,6,0.881
question_4,100,0,wrong_4_028.py,fail_exception,1,1,"def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst ) . reverse
    return lst


","def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst ) . reverse
    return lst


","def sort_age ( lst ) :
    def for_age ( lst ) :
        for i in range ( len ( lst ) ) :
            if ( i == 0 ) :
                continue
            else :
                while ( i > 0 ) :
                    if ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
                        ( lst [ i ] , lst [ ( i - 1 ) ] ) = ( lst [ ( i - 1 ) ] , lst [ i ] )
                        i -= 1
                    else :
                        i = 0
    for_age ( lst )
    lst . reverse ( )
    return lst


",{'sort_age': 'correct_4_051.py'},{'sort_age': ''},N/A,N/A,0.731,0.038,0.000,0.000,0.028,0.000,0.000,0.822,N/A,N/A,N/A
question_4,100,0,wrong_4_112.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.492,0.001,0.000,0.000,0.008,0.008,0.000,0.514,6,6,0.050
question_4,100,0,wrong_4_238.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = list [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = list [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_298.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for x in sort :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.465,1.032,0.000,0.000,0.055,15.272,0.000,16.949,6,6,0.182
question_4,100,0,wrong_4_330.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.467,1.414,0.000,0.000,0.063,0.226,0.000,2.305,6,6,0.152
question_4,100,0,wrong_4_015.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        smallest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        sort . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.484,1.265,0.000,0.000,0.062,10.775,0.000,12.690,6,6,0.395
question_4,100,0,wrong_4_214.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.003,0.000,0.000,0.008,0.127,0.000,0.622,6,6,0.111
question_4,100,0,wrong_4_274.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
        return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
        return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_341.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ]
        for ele in new :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        new . remove ( largest )
        ref_new . append ( largest )
    return ref_new
",N/A,0.462,1.251,0.000,0.000,0.056,10.876,0.000,12.761,6,6,0.317
question_4,100,0,wrong_4_083.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.472,1.096,0.000,0.000,0.098,0.065,0.000,1.738,6,6,0.054
question_4,100,0,wrong_4_142.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.463,0.885,0.000,0.000,0.096,0.146,0.000,1.715,6,6,0.023
question_4,100,0,wrong_4_232.py,fail_other,1,0,"def sort_age ( lst ) :
    compiled = [ ]
    result = [ ]
    for i in lst :
        compiled = ( compiled + [ i [ 1 ] ] )
    compiled . sort ( )
    compiled . reverse ( )
    for i in compiled :
        for j in lst :
            if ( i == j [ 1 ] ) :
                result = ( result + [ j ] )
    return result


","def sort_age ( lst ) :
    compiled = [ ]
    result = [ ]
    for i in lst :
        compiled = ( compiled + [ i [ 1 ] ] )
    compiled . sort ( )
    compiled . reverse ( )
    for i in compiled :
        for j in lst :
            if ( i == j [ 1 ] ) :
                result = ( result + [ j ] )
    return result


","def sort_age ( lst ) :
    ages = [ ]
    for j in lst :
        ages . append ( j [ 1 ] )
    ages = sort ( ages )
    new_lst = [ ]
    for age in ages :
        for i in lst :
            if ( age == i [ 1 ] ) :
                new_lst . append ( i )
    return new_lst


",{'sort_age': 'correct_4_406.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_ages = [ ]
    for ref_j in lst :
        ref_ages . append ( ref_j [ 1 ] )
    ref_ages = sort ( ref_ages )
    ref_new_lst = [ ]
    for ref_age in ref_ages :
        for j in lst :
            if ( ref_age == j [ 1 ] ) :
                ref_new_lst . append ( j )
    return ref_new_lst
",N/A,0.466,0.030,0.000,0.000,0.094,0.505,0.000,1.101,0,6,N/A
question_4,100,0,wrong_4_071.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.466,0.786,0.000,0.000,0.052,0.015,0.000,1.462,6,6,0.114
question_4,100,0,wrong_4_164.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.490,0.003,0.000,0.000,0.008,0.047,0.000,0.564,6,6,0.250
question_4,100,0,wrong_4_297.py,success_w_mut,0,0,"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    for item in lst :
        age = max ( ages )
        if ( age == item [ 1 ] ) :
            output . append ( item )
            ages . remove ( age )
    return output


","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        pass
        for item in lst :
            age = max ( ages )
            if ( age == item [ 1 ] ) :
                return output
            output . append ( item )
            ages . remove ( age )
        pass
    return output
","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    while ages :
        age = max ( ages )
        for item in lst :
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
    return output


",{'sort_age': 'correct_4_363.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        age = max ( ages )
        for item in lst :
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
        pass
    return output
",N/A,7.535,2.096,0.000,0.001,0.137,8.487,0.000,18.422,6,6,0.163
question_4,100,0,wrong_4_007.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : ( j - 1 ) ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : ( j - 1 ) ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
    pass
",N/A,0.781,0.684,0.000,0.000,0.058,0.516,0.000,2.627,6,6,0.522
question_4,100,0,wrong_4_160.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.465,0.003,0.000,0.000,0.008,0.048,0.000,0.529,0,6,N/A
question_4,100,0,wrong_4_184.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.461,1.573,0.000,0.000,0.106,0.112,0.000,2.393,6,6,0.043
question_4,100,0,wrong_4_056.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            oldest = lst [ 0 ]
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            oldest = lst [ 0 ]
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.472,1.355,0.000,0.000,0.108,0.016,0.000,2.216,6,6,0.222
question_4,100,0,wrong_4_091.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst . remove ( holder ) ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst . remove ( holder ) ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.515,0.054,0.000,0.000,0.039,0.048,0.000,0.810,6,6,0.160
question_4,100,0,wrong_4_327.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted


",{'sort_age': 'correct_4_387.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted
",N/A,0.462,1.171,0.000,0.000,0.091,5.521,0.000,7.497,6,6,0.135
question_4,100,0,wrong_4_172.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.008,0.000,0.485,6,6,0.050
question_4,100,0,wrong_4_080.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.468,0.001,0.000,0.000,0.008,0.004,0.000,0.486,6,6,0.050
question_4,100,0,wrong_4_093.py,success_w_mut,0,0,"def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    for i in lst :
        if ( i [ 1 ] > maximum ) :
            maximum = i [ 1 ]
            result . insert ( 0 , i )
        else :
            result . append ( i )
    return result


","def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                result . insert ( 0 , i )
            result . append ( i )
        pass
    return result
","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_266.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    maximum = 0
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            pass
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        result . append ( maximum )
        lst . remove ( maximum )
    return result
",N/A,6.557,2.552,0.000,0.001,5.107,0.727,0.000,15.067,6,6,0.550
question_4,100,0,wrong_4_084.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.775,1.096,0.000,0.000,0.098,0.067,0.000,2.044,6,6,0.054
question_4,100,0,wrong_4_340.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_396.py'},{'sort_age': ''},"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]
",N/A,0.465,0.502,0.000,0.000,0.112,0.095,0.000,1.986,6,6,0.066
question_4,100,0,wrong_4_222.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.381,0.049,0.000,0.001,0.066,17.491,0.000,27.281,6,6,0.847
question_4,100,0,wrong_4_072.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_138.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.780,1.036,0.000,0.000,0.053,0.104,0.000,2.135,6,6,0.159
question_4,100,0,wrong_4_185.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.465,2.020,0.000,0.000,0.171,19.358,0.000,22.171,6,6,0.170
question_4,100,0,wrong_4_078.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.001,0.000,0.000,0.008,0.008,0.000,0.489,6,6,0.050
question_4,100,0,wrong_4_318.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.003,0.000,0.000,0.009,0.110,0.000,0.604,6,6,0.053
question_4,100,0,wrong_4_120.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > first ) :
            result = ( ( first , ) + ( x [ 1 ] , ) )
        else :
            result = ( ( x [ 1 ] , ) + ( first , ) )
    return result
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > first ) :
                result = ( ( first , ) + ( x [ 1 ] , ) )
            result = ( ( x [ 1 ] , ) + ( first , ) )
        pass
    return result
    pass
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_056.py'},{'sort_age': ''},"def sort_age ( lst ) :
    first = [ ]
    while lst :
        oldest = lst [ 0 ]
        for ref_i in lst [ 1 : ] :
            pass
            if ( ref_i [ 1 ] > oldest [ 1 ] ) :
                oldest = ref_i
        lst . remove ( oldest )
        first . append ( oldest )
    return first
",N/A,6.654,3.728,0.000,0.001,5.101,0.576,0.000,16.252,6,6,0.873
question_4,100,0,wrong_4_216.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.505,0.000,0.000,0.000,0.008,0.122,0.000,0.640,0,6,N/A
question_4,100,0,wrong_4_243.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.745,0.111,0.000,0.000,0.037,1.915,0.000,2.816,1,6,N/A
question_4,100,0,wrong_4_263.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.466,0.003,0.000,0.000,0.008,0.046,0.000,0.527,0,6,N/A
question_4,100,0,wrong_4_275.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.008,0.000,0.485,6,6,0.050
question_4,100,0,wrong_4_244.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.616,0.109,0.000,0.000,0.033,1.107,0.000,1.873,1,6,N/A
question_4,100,0,wrong_4_230.py,fail_other,1,0,"def sort_age ( lst ) :
    oldest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] > oldest ) :
            oldest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","def sort_age ( lst ) :
    oldest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] > oldest ) :
            oldest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.624,0.083,0.000,0.000,0.020,1.753,0.000,2.487,1,6,N/A
question_4,100,0,wrong_4_319.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.009,0.004,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_254.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.466,0.001,0.000,0.000,0.008,0.004,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_342.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.009,0.004,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_138.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.474,1.379,0.000,0.000,0.059,0.144,0.000,2.173,6,6,0.179
question_4,100,0,wrong_4_227.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i > biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i > biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a
",N/A,0.470,1.300,0.000,0.000,0.103,0.143,0.000,2.119,6,6,0.184
question_4,100,0,wrong_4_349.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = [ ]
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup . append ( i )
        else :
            i . append ( tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = [ ]
    while lst :
        largest = i
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup . append ( i )
            i . append ( tup )
        pass
    return tup
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_398.py'},{'sort_age': ''},"def sort_age ( tup ) :
    current = [ ]
    while tup :
        largest = tup [ 0 ]
        for i in tup :
            pass
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        tup . remove ( largest )
        current . append ( largest )
    return current
",N/A,6.617,2.473,0.000,0.001,0.056,18.324,0.000,27.562,6,6,0.758
question_4,100,0,wrong_4_050.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    print ( lst )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    print ( lst )


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        final . append ( smallest )
    final . reverse ( )
    return final
",N/A,0.777,1.805,0.000,0.000,0.099,0.065,0.000,2.884,6,6,0.109
question_4,100,0,wrong_4_008.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
    pass
",N/A,0.472,0.642,0.000,0.000,0.092,0.523,0.000,2.274,6,6,0.500
question_4,100,0,wrong_4_149.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.467,1.093,0.000,0.000,0.177,0.182,0.000,2.304,6,6,0.015
question_4,100,0,wrong_4_123.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    for x in lst [ 1 : ] :
        if ( x [ 1 ] < firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    while lst :
        return result
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] < firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        ref_largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > ref_largest [ 1 ] ) :
                ref_largest = x
        lst . remove ( ref_largest )
        firstnum . append ( ref_largest )
    return firstnum
",N/A,6.649,3.186,0.000,0.001,0.056,6.116,0.000,16.151,6,6,0.816
question_4,100,0,wrong_4_170.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst . reverse


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst . reverse


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst
",N/A,0.780,1.621,0.000,0.000,0.095,0.119,0.000,2.750,6,6,0.089
question_4,100,0,wrong_4_347.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return list ( tup )


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            tup = ( tuple ( i ) + tup )
        pass
    return list ( tup )
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new_list = [ ]
    ref_largest = 0
    while lst :
        pass
        for i in lst :
            pass
            if ( i [ 1 ] > ref_largest ) :
                ref_largest = i [ 1 ]
                ref_count = i
        ref_new_list = ( ref_new_list + [ ref_count ] )
        lst . remove ( ref_count )
        ref_largest = 0
    return ref_new_list
",N/A,6.584,3.133,0.000,0.001,5.171,0.722,0.000,15.778,6,6,0.844
question_4,100,0,wrong_4_024.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = a [ 0 ]
        for element in a :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,0.775,1.294,0.000,0.000,0.054,27.114,0.000,29.342,6,6,0.395
question_4,100,0,wrong_4_166.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( largest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( largest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.464,0.869,0.000,0.000,0.063,10.681,0.000,12.204,6,6,0.182
question_4,100,0,wrong_4_335.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_390.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        ref_temp = lst [ 0 ] [ 1 ]
        temp = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > ref_temp ) :
                ref_temp = lst [ i ] [ 1 ]
                temp = i
        result = [ lst [ temp ] ]
        pop = lst . pop ( temp )
        return ( result + sort_age ( lst ) )
    pass
",N/A,0.463,0.053,0.000,0.000,0.081,1.200,0.000,2.378,6,6,0.247
question_4,100,0,wrong_4_225.py,fail_other,1,0,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
        continue
    return a


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        if ( i [ 1 ] > lst [ 0 ] [ 1 ] ) :
            a . append ( i )
        continue
    return a


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    a = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( a , ref_age )
            a . insert ( ref_b , lst [ i ] )
    return list ( reversed ( a ) )
",N/A,0.770,0.064,0.000,0.000,0.020,0.239,0.000,1.101,1,6,N/A
question_4,100,0,wrong_4_183.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.465,0.001,0.000,0.000,0.008,0.077,0.000,0.555,0,6,N/A
question_4,100,0,wrong_4_017.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.008,0.000,0.484,6,6,0.050
question_4,100,0,wrong_4_086.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.008,0.004,0.000,0.481,6,6,0.050
question_4,100,0,wrong_4_154.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.463,1.249,0.000,0.000,0.181,0.165,0.000,2.446,6,6,0.015
question_4,100,0,wrong_4_356.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.483,1.539,0.000,0.000,0.096,15.332,0.000,17.587,6,6,0.234
question_4,100,0,wrong_4_134.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    sort_age ( lst )


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    sort_age ( lst )


","

def sort_age(lst):
    if ((len(lst) == 1) or (len(lst) == 0)):
        return lst
    temp = lst[0][1]
    count = 0
    for i in range(len(lst)):
        if (lst[i][1] > temp):
            temp = lst[i][1]
            count = i
    result = [lst[count]]
    pop = lst.pop(count)
    return (result + sort_age(lst))
    pass
",{'sort_age': 'correct_4_390.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    ref_temp = lst [ 0 ] [ 1 ]
    small = 0
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > ref_temp ) :
            ref_temp = lst [ i ] [ 1 ]
            small = i
    ref_result = [ lst [ small ] ]
    ref_pop = lst . pop ( small )
    return ( ref_result + sort_age ( lst ) )
    pass
",N/A,0.570,0.023,0.000,0.000,0.066,0.809,0.000,1.761,6,6,0.446
question_4,100,0,wrong_4_143.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.482,N/A,N/A,N/A
question_4,100,0,wrong_4_129.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( people ) :
    ref_people = [ ]
    while people :
        i = people [ 0 ]
        for a in people :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        people . remove ( i )
        ref_people . append ( i )
    return ref_people
",N/A,0.460,1.057,0.000,0.000,0.071,5.712,0.000,7.426,6,6,0.182
question_4,100,0,wrong_4_251.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1
",N/A,0.464,1.638,0.000,0.000,0.063,0.164,0.000,2.606,6,6,0.069
question_4,100,0,wrong_4_287.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.008,0.004,0.000,0.478,6,6,0.050
question_4,100,0,wrong_4_066.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


",{'sort_age': 'correct_4_024.py'},{'sort_age': ''},"def sort_age ( rslt ) :
    ref_rslt = [ ]
    while rslt :
        smallest = rslt [ 0 ]
        for element in rslt :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        rslt . remove ( smallest )
        ref_rslt . append ( smallest )
    return ref_rslt
",N/A,0.478,0.957,0.000,0.000,0.055,22.756,0.000,24.373,6,6,0.182
question_4,100,0,wrong_4_031.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( ) )
            else :
                result . append ( lst1 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( ) )
            else :
                result . append ( lst1 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.467,0.091,0.000,0.000,0.132,3.691,0.000,5.770,6,6,0.021
question_4,100,0,wrong_4_215.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.464,0.004,0.000,0.000,0.008,0.008,0.000,0.505,6,6,0.045
question_4,100,0,wrong_4_320.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.008,0.008,0.000,0.484,6,6,0.050
question_4,100,0,wrong_4_034.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort
",N/A,0.461,0.502,0.000,0.000,0.162,5.696,0.000,6.977,6,6,0.039
question_4,100,0,wrong_4_205.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


","def sort_age ( lst ) :
    if ( len ( lst ) <= 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )


",{'sort_age': 'correct_4_259.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) <= 1 ) :
        return lst
    else :
        used_lst = lst . copy ( )
        ages = ( )
        for i in lst :
            ages += ( i [ 1 ] , )
        for i in lst :
            if ( i [ 1 ] == max ( ages ) ) :
                new_lst = [ i ]
                used_lst . remove ( i )
        return ( new_lst + sort_age ( used_lst ) )
",N/A,0.467,0.043,0.000,0.000,0.136,0.079,0.000,1.044,6,6,0.016
question_4,100,0,wrong_4_258.py,success_w_mut,0,0,"def sort_age ( lst ) :
    res = [ ]
    age_list = [ ]
    while lst :
        for i in range ( len ( lst ) ) :
            age_list = ( age_list + [ lst [ i ] [ 1 ] ] )
        for i in lst :
            if ( max ( age_list ) == i [ 1 ] ) :
                res = ( res + [ i ] )
            else :
                res = res
        lst . remove ( i )
        age_list . remove ( i [ 1 ] )
    return res


","def sort_age ( lst ) :
    res = [ ]
    age_list = [ ]
    while lst :
        pass
        for i in range ( len ( lst ) ) :
            age_list = ( age_list + [ lst [ i ] [ 1 ] ] )
            if ( max ( age_list ) == i [ 1 ] ) :
                res = ( res + [ i ] )
            else :
                res = res
            pass
        lst . remove ( i )
        age_list . remove ( i [ 1 ] )
    return res
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_414.py'},{'sort_age': ''},"def sort_age ( res ) :
    ref_slist = [ ]
    while res :
        ref_elder = res [ 0 ]
        for i in range ( len ( res ) ) :
            if ( res [ i ] [ 1 ] > ref_elder [ 1 ] ) :
                ref_elder = res [ i ]
            else :
                res = res
            pass
        ref_slist . append ( ref_elder )
        res . remove ( ref_elder )
    return ref_slist
",N/A,7.896,0.454,0.000,0.001,0.074,5.200,0.000,14.011,6,6,0.657
question_4,100,0,wrong_4_113.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] < ele ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] < ele ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for ref_i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for ref_j in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :
                ref_tmp = lst [ ref_i ]
                lst [ ref_i ] = lst [ ref_j ]
                lst [ ref_j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.635,0.036,0.000,0.000,0.058,0.551,0.000,1.705,6,6,1.161
question_4,100,0,wrong_4_204.py,success_w_mut,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , lst [ i ] )
        elif ( lst [ i ] [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , lst [ i ] )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , lst [ i ] )
                break
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
        agelist . insert ( len ( agelist ) , lst [ i ] )
    else :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                break
            pass
        pass
    return agelist
","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_388.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        ref_temp = lst [ 0 ] [ 1 ]
        ref_count = 0
        for ref_i in range ( len ( lst ) ) :
            pass
            if ( lst [ ref_i ] [ 1 ] > ref_temp ) :
                ref_temp = lst [ ref_i ] [ 1 ]
                ref_count = ref_i
            pass
        ref_result = [ lst [ ref_count ] ]
        ref_pop = lst . pop ( ref_count )
        return ( ref_result + sort_age ( lst ) )
    pass
",N/A,6.239,0.130,0.000,0.002,0.059,0.338,0.000,8.355,6,6,0.891
question_4,100,0,wrong_4_271.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.886,0.092,0.000,0.000,0.075,10.606,0.000,12.095,6,6,0.767
question_4,100,0,wrong_4_032.py,fail_other,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
    a . remove ( smallest )
    sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
    a . remove ( smallest )
    sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( sort ) :
    a = sort
    a = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        a . append ( smallest )
    a . reverse ( )
    return a
",N/A,0.485,1.094,0.000,0.000,5.138,5.932,0.000,12.657,1,6,N/A
question_4,100,0,wrong_4_309.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.470,0.002,0.000,0.000,0.025,0.199,0.000,0.704,6,6,0.409
question_4,100,0,wrong_4_016.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.464,1.187,0.000,0.000,0.098,0.140,0.000,1.896,6,6,0.158
question_4,100,0,wrong_4_079.py,fail_other,1,0,"def sort_age ( lst ) :
    lst = lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst = lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.464,0.004,0.000,0.000,0.008,0.129,0.000,0.610,0,6,N/A
question_4,100,0,wrong_4_308.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


","def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


","def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_366.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for j in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( ( len ( lst ) - 1 ) - j ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst
",N/A,0.468,0.195,0.000,0.000,0.032,0.116,0.000,1.641,6,6,0.014
question_4,100,0,wrong_4_270.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        return lst
    midpoint = ( len ( lst ) // 2 )
    left = sort_age ( lst [ : midpoint ] )
    right = sort_age ( lst [ midpoint : ] )
    new_list = [ ]
    while ( left and right ) :
        if ( left [ 0 ] [ 1 ] < right [ 0 ] [ 1 ] ) :
            new_list . append ( right . pop ( 0 ) )
        else :
            new_list . append ( left . pop ( 0 ) )
        new_list . extend ( left )
        new_list . extend ( right )
        return new_list


","

def sort_age(lst):
    if False:
        pass
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        else:
            i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    if ( len ( lst ) < 2 ) :
        pass
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        else :
            ref_i += 1
    return lst
",N/A,0.763,0.069,0.000,0.000,0.075,10.569,0.000,11.487,6,6,0.767
question_4,100,0,wrong_4_128.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        lst . remove ( i )
        final . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( people ) :
    ref_people = [ ]
    while people :
        i = people [ 0 ]
        for a in people :
            if ( i [ 1 ] <= a [ 1 ] ) :
                i = a
        people . remove ( i )
        ref_people . append ( i )
    return ref_people
",N/A,0.467,1.352,0.000,0.000,0.071,5.728,0.000,7.744,6,6,0.182
question_4,100,0,wrong_4_145.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.472,N/A,N/A,N/A
question_4,100,0,wrong_4_035.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.460,0.001,0.000,0.000,0.008,0.008,0.000,0.481,6,6,0.050
question_4,100,0,wrong_4_108.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.466,0.001,0.000,0.000,0.008,0.004,0.000,0.484,6,6,0.050
question_4,100,0,wrong_4_165.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( a )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . removal ( largest )
        sort . append ( a )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.498,1.096,0.000,0.000,0.063,5.720,0.000,7.504,6,6,0.205
question_4,100,0,wrong_4_203.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest [ 1 ] = i [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest [ 1 ] = i [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_021.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while ( len ( lst ) > 0 ) :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.467,1.743,0.000,0.000,0.064,0.295,0.000,2.748,6,6,0.127
question_4,100,0,wrong_4_178.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.468,0.001,0.000,0.000,0.008,0.004,0.000,0.486,6,6,0.050
question_4,100,0,wrong_4_286.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.486,0.001,0.000,0.000,0.008,0.049,0.000,0.561,6,6,0.167
question_4,100,0,wrong_4_098.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.635,0.035,0.000,0.001,0.030,0.012,0.000,4.981,6,6,0.792
question_4,100,0,wrong_4_322.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.476,0.000,0.000,0.000,0.008,0.008,0.000,0.498,6,6,0.050
question_4,100,0,wrong_4_126.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.462,1.447,0.000,0.000,0.063,5.786,0.000,7.886,6,6,0.273
question_4,100,0,wrong_4_321.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    for i in lst :
        big = lst [ 0 ]
        for n in lst :
            if ( n [ 1 ] > big [ 1 ] ) :
                big = n
        lst . remove ( big )
        newlst . append ( big )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    for i in lst :
        big = lst [ 0 ]
        for n in lst :
            if ( n [ 1 ] > big [ 1 ] ) :
                big = n
        lst . remove ( big )
        newlst . append ( big )
    return newlst


","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    for ref_x in lst :
        big = 0
        for i in newlst :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                big += 1
        newlst . insert ( big , ref_x )
    return newlst
",N/A,0.467,0.354,0.000,0.000,0.106,0.538,0.000,1.582,6,6,0.400
question_4,100,0,wrong_4_026.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.462,1.188,0.000,0.000,0.098,0.138,0.000,1.893,6,6,0.158
question_4,100,0,wrong_4_061.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.469,0.001,0.000,0.000,0.008,0.004,0.000,0.487,6,6,0.050
question_4,100,0,wrong_4_148.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( i [ 1 ] < ( i + 1 [ 1 ] ) ) :
            lst . pop ( i )
            lst . extend ( i )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( i [ 1 ] < ( i + 1 [ 1 ] ) ) :
            lst . pop ( i )
            lst . extend ( i )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.464,0.026,0.000,0.000,0.026,28.448,0.000,29.158,6,6,0.447
question_4,100,0,wrong_4_168.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt


",{'sort_age': 'correct_4_100.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt
",N/A,0.484,0.847,0.000,0.000,0.096,0.125,0.000,1.678,6,6,0.023
question_4,100,0,wrong_4_288.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > largest [ 1 ] ) :
                largest = element
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_189.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        largest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > largest [ 1 ] ) :
                largest = element
        sort . remove ( largest )
        ref_sort . append ( largest )
    return ref_sort
",N/A,0.461,1.546,0.000,0.000,0.054,26.955,0.000,29.126,6,6,0.450
question_4,100,0,wrong_4_329.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - k )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.467,1.399,0.000,0.000,0.062,0.216,0.000,2.152,6,6,0.152
question_4,100,0,wrong_4_110.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                j = tpl
        lst . remove ( tpl )
        new . append ( tpl )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                j = tpl
        lst . remove ( tpl )
        new . append ( tpl )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in lst :
            if ( j [ 1 ] == largest ) :
                tpl = j
        lst . remove ( tpl )
        new . append ( tpl )
    return new


",{'sort_age': 'correct_4_107.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ] [ 1 ]
        for i in new :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        tpl = ( )
        for j in new :
            if ( j [ 1 ] == largest ) :
                tpl = j
        new . remove ( tpl )
        ref_new . append ( tpl )
    return ref_new
",N/A,0.469,0.097,0.000,0.000,0.204,18.895,0.000,20.000,6,6,0.172
question_4,100,0,wrong_4_114.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for ref_i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for ref_j in range ( ( ref_i + 1 ) , len ( lst ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ref_j ] [ 1 ] ) :
                ref_tmp = lst [ ref_i ]
                lst [ ref_i ] = lst [ ref_j ]
                lst [ ref_j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.597,0.038,0.000,0.000,0.059,0.520,0.000,1.727,6,6,0.952
question_4,100,0,wrong_4_312.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.468,0.026,0.000,0.000,0.027,0.194,0.000,1.539,6,6,0.375
question_4,100,0,wrong_4_130.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return final


","def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people


",{'sort_age': 'correct_4_054.py'},{'sort_age': ''},"def sort_age ( lst ) :
    people = [ ]
    while lst :
        i = lst [ 0 ]
        for a in lst :
            if ( a [ 1 ] >= i [ 1 ] ) :
                i = a
        lst . remove ( i )
        people . append ( i )
    return people
",N/A,0.491,0.914,0.000,0.000,0.106,0.118,0.000,1.754,6,6,0.023
question_4,100,0,wrong_4_052.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] > oldest ) :
                oldest = person [ 1 ]
                newlst . append ( person )
                lst . remove ( person )
        newlst . append ( lst [ 0 ] )
        lst . remove ( lst [ 0 ] )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] > oldest ) :
                oldest = person [ 1 ]
                newlst . append ( person )
                lst . remove ( person )
        newlst . append ( lst [ 0 ] )
        lst . remove ( lst [ 0 ] )
    return newlst


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for people in lst :
            if ( people [ 1 ] >= oldest ) :
                oldest = people [ 1 ]
                remove_people = people
        new_lst . append ( remove_people )
        lst . remove ( remove_people )
    return new_lst


",{'sort_age': 'correct_4_141.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        oldest = lst [ 0 ] [ 1 ]
        for person in lst :
            if ( person [ 1 ] >= oldest ) :
                oldest = person [ 1 ]
                ref_remove_people = person
        newlst . append ( ref_remove_people )
        lst . remove ( ref_remove_people )
    return newlst
",N/A,0.462,2.429,0.000,0.000,0.132,12.349,0.000,15.646,6,6,0.286
question_4,100,0,wrong_4_304.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.469,0.004,0.000,0.000,0.009,0.145,0.000,0.648,6,6,0.375
question_4,100,0,wrong_4_002.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                person = oldest
        a . remove ( smallest )
        sort . append ( smallest )
        print ( a )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person > oldest ) :
                person = oldest
        a . remove ( smallest )
        sort . append ( smallest )
        print ( a )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.463,1.839,0.000,0.000,0.069,5.916,0.000,8.398,6,6,0.600
question_4,100,0,wrong_4_357.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                newlst . append ( i )
                lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
                newlst . append ( i )
                lst . remove ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.464,1.662,0.000,0.000,5.105,7.469,0.000,14.853,6,6,0.319
question_4,100,0,wrong_4_167.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sort


","def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt


",{'sort_age': 'correct_4_100.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sortt = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sortt . append ( largest )
    return sortt
",N/A,0.464,0.865,0.000,0.000,0.096,0.122,0.000,1.555,6,6,0.023
question_4,100,0,wrong_4_302.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( len ( lst ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( len ( lst ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.465,0.025,0.000,0.000,0.027,0.198,0.000,1.509,6,6,0.376
question_4,100,0,wrong_4_257.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    a = list ( set ( lst ) )
    lst . clear ( )
    lst . append ( a )
    return lst


","def sort_age ( lst ) :
    a = list ( set ( lst ) )
    lst . clear ( )
    lst . append ( a )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda a : a [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.004,0.000,0.000,0.010,0.437,0.000,0.934,6,6,0.909
question_4,100,0,wrong_4_290.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = new_list . append ( count )
        lst . remove ( count )
        largest = 0
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = new_list . append ( count )
        lst . remove ( count )
        largest = 0
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_356.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list
",N/A,0.464,0.882,0.000,0.000,0.153,10.937,0.000,12.599,6,6,0.083
question_4,100,0,wrong_4_131.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.466,N/A,N/A,N/A
question_4,100,0,wrong_4_009.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ i ]
        for j in range ( 0 , len ( lst ) ) :
            if ( lst [ j ] [ 1 ] < this [ 1 ] ) :
                del lst [ i ]
                lst = ( ( lst [ 0 : j ] + [ this ] ) + lst [ j : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        x = ( i + 1 )
        for j in range ( x , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_379.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        this = ( i + 1 )
        for j in range ( this , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
",N/A,0.492,0.634,0.000,0.000,0.072,1.317,0.000,3.062,6,6,0.515
question_4,100,0,wrong_4_054.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


",{'sort_age': 'correct_4_113.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst
",N/A,0.465,1.232,0.000,0.000,0.096,0.142,0.000,2.064,6,6,0.023
question_4,100,0,wrong_4_003.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( sort )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( sort )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.464,1.721,0.000,0.000,0.070,19.403,0.000,21.792,6,6,0.326
question_4,100,0,wrong_4_169.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    return sorted_lst


","def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst


",{'sort_age': 'correct_4_239.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        sorted_lst . append ( smallest )
    sorted_lst . reverse ( )
    return sorted_lst
",N/A,0.464,1.512,0.000,0.000,0.097,0.128,0.000,2.333,6,6,0.091
question_4,100,0,wrong_4_004.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                person = oldest
        a . remove ( oldest )
        sort . append ( oldest )
        print ( lst )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for person in sort :
            if ( person [ 1 ] > oldest [ 1 ] ) :
                oldest = person
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.462,1.816,0.000,0.000,0.069,19.340,0.000,21.821,6,6,0.326
question_4,100,0,wrong_4_137.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = x
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = x
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = i
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_191.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        new_list = [ ]
        while lst :
            minimum = lst [ 0 ]
            for i in lst :
                if ( i [ 1 ] < minimum [ 1 ] ) :
                    minimum = i
            new_list . append ( minimum )
            lst . remove ( minimum )
        return new_list [ : : ( - 1 ) ]
",N/A,0.471,0.035,0.000,0.000,0.061,0.278,0.000,1.145,6,6,0.113
question_4,100,0,wrong_4_265.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                lst [ i ] = lst [ a ]
                lst [ a ] = lst [ i ]
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                lst [ i ] = lst [ a ]
                lst [ a ] = lst [ i ]
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                ( lst [ i ] , lst [ a ] ) = ( lst [ a ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_337.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for a in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ a ] [ 1 ] ) :
                ( lst [ i ] , lst [ a ] ) = ( lst [ a ] , lst [ i ] )
    return lst
",N/A,0.468,0.393,0.000,0.000,0.034,0.611,0.000,2.002,6,6,0.048
question_4,100,0,wrong_4_278.py,fail_other,1,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] < lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] < lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            i = lst [ ref_i ] [ 1 ]
            x = func ( ref_newlist , i )
            ref_newlist . insert ( x , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.671,0.103,0.000,0.000,0.020,1.808,0.000,2.609,1,6,N/A
question_4,100,0,wrong_4_283.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.467,0.002,0.000,0.000,0.027,0.185,0.000,0.690,6,6,0.375
question_4,100,0,wrong_4_255.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = n
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = n
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        newlst . append ( i )
    return newlst


",{'sort_age': 'correct_4_310.py'},{'sort_age': ''},"def sort_age ( newlst ) :
    ref_newlst = [ ]
    while newlst :
        i = newlst [ 0 ]
        for element in newlst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        newlst . remove ( i )
        ref_newlst . append ( i )
    return ref_newlst
",N/A,0.468,1.393,0.000,0.000,0.063,5.844,0.000,7.896,6,6,0.205
question_4,100,0,wrong_4_273.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest ) :
                largest = ele
        a . remove ( largest )
        new . append ( largest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_341.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        largest = new [ 0 ]
        for ele in new :
            if ( ele [ 1 ] > largest [ 1 ] ) :
                largest = ele
        new . remove ( largest )
        ref_new . append ( largest )
    return ref_new
",N/A,0.466,1.152,0.000,0.000,0.057,10.781,0.000,12.570,6,6,0.268
question_4,100,0,wrong_4_210.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.472,0.000,0.000,0.000,0.008,0.056,0.000,0.542,6,6,0.167
question_4,100,0,wrong_4_202.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( min ( decoy ) )
        decoy . remove ( min ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


","def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( min ( decoy ) )
        decoy . remove ( min ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


","def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( max ( decoy ) )
        decoy . remove ( max ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final


",{'sort_age': 'correct_4_083.py'},{'sort_age': ''},"def sort_age ( lst ) :
    decoy = [ ]
    decoy2 = [ ]
    final = [ ]
    for i in lst :
        decoy . append ( i [ 1 ] )
    while ( decoy != [ ] ) :
        decoy2 . append ( max ( decoy ) )
        decoy . remove ( max ( decoy ) )
    for i in decoy2 :
        for j in lst :
            if ( i == j [ 1 ] ) :
                final . append ( j )
    return final
",N/A,0.464,0.053,0.000,0.000,0.284,23.297,0.000,24.332,6,6,0.031
question_4,100,0,wrong_4_341.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return list . reverse ( lst )


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return list . reverse ( lst )


","def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_396.py'},{'sort_age': ''},"def sort_age ( lst ) :
    l = len ( lst )
    for i in range ( 0 , l ) :
        for j in range ( 0 , ( ( l - i ) - 1 ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                temp = lst [ j ]
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = temp
    return lst [ : : ( - 1 ) ]
",N/A,0.488,0.525,0.000,0.000,0.113,0.067,0.000,2.022,6,6,0.089
question_4,100,0,wrong_4_176.py,fail_other,1,0,"def sort_age ( lst ) :
    newlst = [ ]
    ages = [ ]
    for i in lst :
        ages . append ( i [ 1 ] )
    ages . sort ( )
    for x in ages [ : : ( - 1 ) ] :
        for i in lst :
            if ( i [ 1 ] == x ) :
                newlst . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    ages = [ ]
    for i in lst :
        ages . append ( i [ 1 ] )
    ages . sort ( )
    for x in ages [ : : ( - 1 ) ] :
        for i in lst :
            if ( i [ 1 ] == x ) :
                newlst . append ( i )
    return newlst


","def sort_age ( lst ) :
    ages = [ ]
    for j in lst :
        ages . append ( j [ 1 ] )
    ages = sort ( ages )
    new_lst = [ ]
    for age in ages :
        for i in lst :
            if ( age == i [ 1 ] ) :
                new_lst . append ( i )
    return new_lst


",{'sort_age': 'correct_4_406.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ages = [ ]
    for ref_j in lst :
        ages . append ( ref_j [ 1 ] )
    ages = sort ( ages )
    ref_new_lst = [ ]
    for x in ages :
        for i in lst :
            if ( x == i [ 1 ] ) :
                ref_new_lst . append ( i )
    return ref_new_lst
",N/A,0.465,0.029,0.000,0.000,0.093,0.488,0.000,1.082,0,6,N/A
question_4,100,0,wrong_4_195.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] < smallest ) :
                smallest = i [ 1 ]
        lst . remove ( smallest )
        new . append ( smallest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] < smallest ) :
                smallest = i [ 1 ]
        lst . remove ( smallest )
        new . append ( smallest )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        eldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > eldest [ 1 ] ) :
                eldest = i
        lst . remove ( eldest )
        new . append ( eldest )
    return new


",{'sort_age': 'correct_4_251.py'},{'sort_age': ''},"def sort_age ( new ) :
    ref_new = [ ]
    while new :
        smallest = new [ 0 ]
        for i in new :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        new . remove ( smallest )
        ref_new . append ( smallest )
    return ref_new
",N/A,0.466,1.808,0.000,0.000,0.063,27.118,0.000,29.596,6,6,0.383
question_4,100,0,wrong_4_339.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
        return new_lst
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
        return new_lst
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
                    age_lst . remove ( i [ 1 ] )
        return new_lst
    pass


",{'sort_age': 'correct_4_166.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    else :
        ( age_lst , new_lst ) = ( [ ] , [ ] )
        for x in lst :
            age_lst . append ( x [ 1 ] )
        while age_lst :
            max_age = max ( age_lst )
            for i in lst :
                if ( i [ 1 ] == max_age ) :
                    new_lst . append ( i )
                    age_lst . remove ( i [ 1 ] )
        return new_lst
    pass
",N/A,0.464,0.045,0.000,0.000,5.195,16.905,0.000,22.948,6,6,0.145
question_4,100,0,wrong_4_348.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return [ tup ]


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        pass
        for i in new :
            tup += tuple ( i )
            current = i [ 1 ]
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
            tup = ( tuple ( i ) + tup )
        pass
    return [ tup ]
","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        index = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                index += 1
        ref_new . insert ( index , ref_x )
    return ref_new
",N/A,6.593,3.074,0.000,0.001,0.065,0.266,0.000,10.123,6,6,0.818
question_4,100,0,wrong_4_010.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ 0 ]
        for j in range ( 1 , ( len ( lst ) + 1 ) ) :
            a = ( len ( lst ) - j )
            if ( lst [ a ] [ 1 ] > this [ 1 ] ) :
                lst = ( ( lst [ 1 : ( a + 1 ) ] + [ this ] ) + lst [ ( a + 1 ) : ] )
                break
    return lst


","def sort_age ( lst ) :
    for i in range ( 0 , len ( lst ) ) :
        this = lst [ 0 ]
        for j in range ( 1 , ( len ( lst ) + 1 ) ) :
            a = ( len ( lst ) - j )
            if ( lst [ a ] [ 1 ] > this [ 1 ] ) :
                lst = ( ( lst [ 1 : ( a + 1 ) ] + [ this ] ) + lst [ ( a + 1 ) : ] )
                break
    return lst


","def sort_age ( lst ) :
    for loop in range ( len ( lst ) ) :
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_050.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for i in range ( len ( lst ) ) :
        for ref_i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
                ( lst [ ref_i ] , lst [ ( ref_i + 1 ) ] ) = ( lst [ ( ref_i + 1 ) ] , lst [ ref_i ] )
    return lst
",N/A,0.779,0.785,0.000,0.000,0.116,0.395,0.000,2.853,6,6,0.623
question_4,100,0,wrong_4_291.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return lst


","def sort_age ( lst ) :
    final = [ ]
    temp = 0
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                temp = i
        lst . remove ( temp )
        final . append ( temp )
    return final


",{'sort_age': 'correct_4_169.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                ref_temp = i
        lst . remove ( ref_temp )
        sort . append ( ref_temp )
    return sort
",N/A,0.461,1.816,0.000,0.000,0.151,10.899,0.000,13.492,6,6,0.149
question_4,100,0,wrong_4_338.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    new_lst = [ lst [ 0 ] ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_391.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    new_lst = [ lst [ 0 ] ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > new_lst [ ( - 1 ) ] [ 1 ] ) :
            new_lst += [ x ]
        else :
            count = 0
            while ( count < len ( new_lst ) ) :
                if ( x [ 1 ] > new_lst [ count ] [ 1 ] ) :
                    count += 1
                    continue
                else :
                    new_lst = ( ( new_lst [ 0 : count ] + [ x ] ) + new_lst [ count : ] )
                    break
    return new_lst [ : : ( - 1 ) ]
",N/A,0.475,0.090,0.000,0.000,0.064,0.035,0.000,2.074,6,6,0.141
question_4,100,0,wrong_4_099.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.653,0.034,0.000,0.001,0.030,0.012,0.000,5.005,6,6,0.792
question_4,100,0,wrong_4_240.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.488,0.001,0.000,0.000,0.008,0.008,0.000,0.509,6,6,0.045
question_4,100,0,wrong_4_217.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.480,0.001,0.000,0.000,0.008,0.008,0.000,0.501,6,6,0.050
question_4,100,0,wrong_4_125.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


",{'sort_age': 'correct_4_066.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1
",N/A,0.477,0.833,0.000,0.000,0.095,0.140,0.000,1.671,6,6,0.023
question_4,100,0,wrong_4_221.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.004,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_101.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    lst . reverse ( )
    return lst
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.641,0.036,0.000,0.001,0.031,0.070,0.000,5.057,6,6,0.807
question_4,100,0,wrong_4_186.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.778,1.688,0.000,0.000,0.153,0.066,0.000,2.829,6,6,0.061
question_4,100,0,wrong_4_206.py,success_w_mut,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , lst [ i ] )
        elif ( lst [ i ] [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , lst [ i ] )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , lst [ i ] )
                    break
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    if ( lst [ i ] [ 1 ] > agelist [ 0 ] [ 1 ] ) :
        agelist . insert ( len ( agelist ) , lst [ i ] )
    else :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] > lst [ i ] [ 1 ] > agelist [ ( x + 1 ) ] [ 1 ] ) :
                pass
            pass
        pass
    return agelist
","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_388.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        ref_temp = lst [ 0 ] [ 1 ]
        ref_count = 0
        for ref_i in range ( len ( lst ) ) :
            pass
            if ( lst [ ref_i ] [ 1 ] > ref_temp ) :
                ref_temp = lst [ ref_i ] [ 1 ]
                ref_count = ref_i
            pass
        ref_result = [ lst [ ref_count ] ]
        ref_pop = lst . pop ( ref_count )
        return ( ref_result + sort_age ( lst ) )
    pass
",N/A,6.274,0.131,0.000,0.002,0.059,0.250,0.000,8.289,6,6,0.891
question_4,100,0,wrong_4_133.py,success_w_mut,0,0,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ]
    for e in lst [ 1 : ] :
        if ( e [ 1 ] < smallest ) :
            smallest = e [ 1 ]
    lst . remove ( smallest )
    lst . append ( smallest )
    return lst


","def sort_age ( lst ) :
    pass
    while lst :
        smallest = lst [ 0 ]
        for e in lst [ 1 : ] :
            pass
            if ( e [ 1 ] < smallest ) :
                return lst1
            smallest = e [ 1 ]
        pass
    lst . remove ( smallest )
    lst . append ( smallest )
    return lst
","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ele
        lst . remove ( smallest )
        lst1 . append ( smallest )
    return lst1


",{'sort_age': 'correct_4_066.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_lst1 = [ ]
    while lst :
        smallest = lst [ 0 ]
        for ref_ele in lst :
            pass
            if ( ref_ele [ 1 ] > smallest [ 1 ] ) :
                smallest = ref_ele
        lst . remove ( smallest )
        ref_lst1 . append ( smallest )
    return ref_lst1
",N/A,7.055,1.086,0.000,0.001,1.066,0.585,0.000,9.912,6,6,0.455
question_4,100,0,wrong_4_122.py,success_w_mut,0,0,"def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > firstnum ) :
            result += ( x , )
        else :
            result = ( ( x , ) + result )
    return result
    pass


","def sort_age ( lst ) :
    firstnum = lst [ 0 ] [ 1 ]
    result = ( lst [ 0 ] , )
    while lst :
        pass
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > firstnum ) :
                result += ( x , )
            result = ( ( x , ) + result )
        pass
    return result
    pass
","def sort_age ( lst ) :
    result = [ ]
    while lst :
        largest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > largest [ 1 ] ) :
                largest = x
        lst . remove ( largest )
        result . append ( largest )
    return result


",{'sort_age': 'correct_4_199.py'},{'sort_age': ''},"def sort_age ( lst ) :
    firstnum = [ ]
    while lst :
        ref_largest = lst [ 0 ]
        for x in lst :
            pass
            if ( x [ 1 ] > ref_largest [ 1 ] ) :
                ref_largest = x
        lst . remove ( ref_largest )
        firstnum . append ( ref_largest )
    return firstnum
",N/A,6.640,3.154,0.000,0.001,5.116,0.569,0.000,15.625,6,6,0.796
question_4,100,0,wrong_4_068.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.474,0.000,0.000,0.000,0.008,0.008,0.000,0.496,6,6,0.050
question_4,100,0,wrong_4_239.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        a . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_298.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for x in sort :
            if ( x [ 1 ] > oldest [ 1 ] ) :
                oldest = x
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.495,1.014,0.000,0.000,0.063,10.679,0.000,12.377,6,6,0.182
question_4,100,0,wrong_4_241.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = ( )
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = ( )
    i = 0
    smallest = lst [ 0 ] [ 1 ]
    s = lst [ 0 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = lst [ i ]
    list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    i = [ ]
    for ref_i in range ( len ( lst ) ) :
        ref_age = lst [ ref_i ] [ 1 ]
        if True :
            ref_b = func ( i , ref_age )
            i . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( i ) )
",N/A,0.762,0.107,0.000,0.000,0.036,2.220,0.000,3.133,1,6,N/A
question_4,100,0,wrong_4_118.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.464,1.709,0.000,0.000,0.099,0.070,0.000,2.479,6,6,0.102
question_4,100,0,wrong_4_328.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( lst . pop ( i ) )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted


",{'sort_age': 'correct_4_387.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        sorted . append ( oldest )
        lst . remove ( oldest )
    return sorted
",N/A,0.465,1.165,0.000,0.000,0.091,5.519,0.000,7.248,6,6,0.135
question_4,100,0,wrong_4_237.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.469,0.001,0.000,0.000,0.009,0.008,0.000,0.491,6,6,0.045
question_4,100,0,wrong_4_245.py,fail_other,1,0,"def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
        list1 += s
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    smallest = lst [ 0 ] [ 1 ]
    s = ( lst [ 0 ] , )
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < smallest ) :
            smallest = lst [ i ] [ 1 ]
            s = ( lst [ i ] , )
        list1 += s
    return list1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if True:
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if True :
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.618,0.109,0.000,0.000,0.038,1.011,0.000,1.784,1,6,N/A
question_4,100,0,wrong_4_314.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    return lst
",N/A,0.467,0.000,0.000,0.000,0.008,0.131,0.000,0.625,6,6,0.222
question_4,100,0,wrong_4_046.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallsest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallsest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( output ) :
    ref_output = [ ]
    while output :
        smallest = output [ 0 ]
        for i in output :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        output . remove ( smallest )
        ref_output . append ( smallest )
    return ref_output
",N/A,0.468,1.594,0.000,0.000,0.057,22.849,0.000,25.095,6,6,0.273
question_4,100,0,wrong_4_140.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_list . append ( smallest )
    return sort_list
",N/A,0.466,1.248,0.000,0.000,0.097,0.142,0.000,2.081,6,6,0.023
question_4,100,0,wrong_4_064.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.008,0.008,0.000,0.485,6,6,0.050
question_4,100,0,wrong_4_159.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.465,0.029,0.000,0.000,0.030,31.606,0.000,32.428,6,6,0.052
question_4,100,0,wrong_4_109.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.468,1.285,0.000,0.000,0.095,0.014,0.000,2.012,6,6,0.048
question_4,100,0,wrong_4_048.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output
",N/A,0.462,1.517,0.000,0.000,0.096,0.145,0.000,2.348,6,6,0.023
question_4,100,0,wrong_4_256.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        final . append ( i )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        i = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        lst . remove ( i )
        newlst . append ( i )
    return newlst


",{'sort_age': 'correct_4_310.py'},{'sort_age': ''},"def sort_age ( newlst ) :
    ref_newlst = [ ]
    while newlst :
        i = newlst [ 0 ]
        for element in newlst :
            if ( element [ 1 ] >= i [ 1 ] ) :
                i = element
        newlst . remove ( i )
        ref_newlst . append ( i )
    return ref_newlst
",N/A,0.466,1.334,0.000,0.000,0.072,5.722,0.000,7.722,6,6,0.182
question_4,100,0,wrong_4_039.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass


",{'sort_age': 'correct_4_086.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return [ ]
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
    pass
",N/A,0.469,0.065,0.000,0.000,0.099,0.147,0.000,0.916,6,6,0.130
question_4,100,0,wrong_4_325.py,success_w_mut,0,0,"def sort_age ( lst ) :
    newnew = [ ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            else :
                newnew . append ( i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ ]
    for i in lst :
        pass
        for j in range ( len ( newnew ) ) :
            pass
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
                if True :
                    newnew . insert ( j , i )
                newnew . append ( i )
            return newnew
        return newnew
    pass
","

def sort_age(lst):
    l = len(lst)
    for i in range(0, l):
        for j in range(0, ((l - i) - 1)):
            if (lst[j][1] > lst[(j + 1)][1]):
                temp = lst[j]
                if True:
                    pass
                lst[j] = lst[(j + 1)]
                lst[(j + 1)] = temp
    return lst[::(- 1)]
",{'sort_age': 'correct_4_396.py'},{'sort_age': 'B1.h'},"def sort_age ( lst ) :
    newnew = len ( lst )
    for i in range ( 0 , newnew ) :
        pass
        for j in range ( 0 , ( ( newnew - i ) - 1 ) ) :
            pass
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ref_temp = lst [ j ]
                if True :
                    pass
                lst [ j ] = lst [ ( j + 1 ) ]
                lst [ ( j + 1 ) ] = ref_temp
    return lst [ : : ( - 1 ) ]
",N/A,8.240,0.708,0.000,0.001,0.078,0.442,0.000,10.284,6,6,1.043
question_4,100,0,wrong_4_261.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.471,0.000,0.000,0.000,0.008,0.008,0.000,0.492,6,6,0.050
question_4,100,0,wrong_4_104.py,fail_other,1,0,"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        if ( i [ 1 ] > largest ) :
            largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    i = 0
    while ((i + 1) < len(lst)):
        if (lst[i][1] < lst[(i + 1)][1]):
            lst.extend([lst[i]])
            del lst[i]
            i = 0
        i += 1
    return lst
",{'sort_age': 'correct_4_216.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    ref_i = 0
    while ( ( ref_i + 1 ) < len ( lst ) ) :
        if ( lst [ ref_i ] [ 1 ] < lst [ ( ref_i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ ref_i ] ] )
            del lst [ ref_i ]
            ref_i = 0
        ref_i += 1
    return lst
",N/A,0.674,0.012,0.000,0.000,0.021,20.255,0.000,20.969,3,6,N/A
question_4,100,0,wrong_4_351.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        j = ( ( len ( lst ) - i ) - 1 )
        new . append ( lst [ j ] )
    return new


","def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        j = ( ( len ( lst ) - i ) - 1 )
        new . append ( lst [ j ] )
    return new


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    new = [ ]
    for i in range ( len ( lst ) ) :
        j = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( j )
        new . append ( j )
    return new
",N/A,0.487,0.043,0.000,0.000,0.046,0.291,0.000,0.964,6,6,0.513
question_4,100,0,wrong_4_070.py,fail_other,1,0,"def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
    lst . remove ( oldest )
    sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
    lst . remove ( oldest )
    sort . append ( oldest )
    return sort


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    store = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ i ] [ 1 ]
            ref_b = func ( store , ref_age )
            store . insert ( ref_b , lst [ i ] )
    return list ( reversed ( store ) )
",N/A,0.704,0.084,0.000,0.000,0.024,0.623,0.000,1.442,1,6,N/A
question_4,100,0,wrong_4_303.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.143,0.000,0.620,6,6,0.375
question_4,100,0,wrong_4_293.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = 0
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = 0
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for ref_k in lst :
            if ( ref_k [ 1 ] > biggest [ 1 ] ) :
                biggest = ref_k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.465,1.646,0.000,0.000,0.101,10.860,0.000,13.191,6,6,0.341
question_4,100,0,wrong_4_194.py,success_w_mut,0,0,"def sort_age ( lst ) :
    biggest = lst [ 0 ] [ 1 ]
    for i in range ( len ( lst ) ) :
        if ( lst [ 0 ] [ 1 ] < lst [ i ] [ 1 ] ) :
            biggest = lst [ i ] [ 1 ]
            continue
        else :
            biggest = lst [ 0 ] [ 1 ]
    return ( [ biggest ] + sort_age ( lst [ 1 : len ( lst ) ] ) )
    pass


","def sort_age ( lst ) :
    biggest = lst [ 0 ] [ 1 ]
    while lst :
        slist = [ ]
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ 0 ] [ 1 ] < lst [ i ] [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
                continue
            else :
                pass
            biggest = lst [ 0 ] [ 1 ]
        pass
    return ( [ biggest ] + sort_age ( lst [ 1 : len ( lst ) ] ) )
    pass
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_413.py'},{'sort_age': ''},"def sort_age ( lst ) :
    slist = [ ]
    while lst :
        ref_elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ i ] [ 1 ] > ref_elder [ 1 ] ) :
                ref_elder = lst [ i ]
            else :
                continue
        slist . append ( ref_elder )
        lst . remove ( ref_elder )
    return slist
",N/A,6.545,3.846,0.000,0.001,5.119,5.178,0.000,21.036,6,6,0.662
question_4,100,0,wrong_4_285.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.474,0.003,0.000,0.000,0.008,0.055,0.000,0.545,0,6,N/A
question_4,100,0,wrong_4_248.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        b = lst [ 0 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > biggest ) :
                biggest = lst [ i ] [ 1 ]
                s = ( lst [ i ] , )
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        tuple_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest ) :
                biggest = i [ 1 ]
                tuple_biggest = i
        lst . remove ( tuple_biggest )
        result . append ( tuple_biggest )
    return result


",{'sort_age': 'correct_4_028.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_result = [ ]
    while list1 :
        ref_biggest = list1 [ 0 ] [ 1 ]
        biggest = list1 [ 0 ]
        for i in list1 :
            if ( i [ 1 ] > ref_biggest ) :
                ref_biggest = i [ 1 ]
                biggest = i
        list1 . remove ( biggest )
        ref_result . append ( biggest )
    return ref_result
",N/A,0.471,2.238,0.000,0.000,0.115,45.673,0.000,48.847,6,6,0.408
question_4,100,0,wrong_4_200.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.007,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_175.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        lst . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.460,2.610,0.000,0.000,0.063,19.922,0.000,23.353,6,6,0.429
question_4,100,0,wrong_4_315.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.473,0.001,0.000,0.000,0.008,0.004,0.000,0.491,6,6,0.050
question_4,100,0,wrong_4_192.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda ref_x : ref_x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.003,0.000,0.000,0.008,0.423,0.000,0.908,6,6,1.000
question_4,100,0,wrong_4_179.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ] [ 1 ]
        for item in a :
            if ( item [ 1 ] > largest ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ] [ 1 ]
        for item in a :
            if ( item [ 1 ] > largest ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.463,1.919,0.000,0.000,0.099,10.872,0.000,13.499,6,6,0.224
question_4,100,0,wrong_4_355.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    print ( newlst )


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > maximum ) :
                maximum = i [ 1 ]
        newlst . append ( i )
        lst . remove ( i )
    print ( newlst )


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_417.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst
",N/A,0.482,1.674,0.000,0.000,0.095,15.407,0.000,17.803,6,6,0.286
question_4,100,0,wrong_4_053.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += current
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < current [ 1 ] ) :
                current = element
        newlst += current
        lst . remove ( current )
    return newlst


","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst


",{'sort_age': 'correct_4_113.py'},{'sort_age': ''},"def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        current = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > current [ 1 ] ) :
                current = element
        newlst += ( current , )
        lst . remove ( current )
    return newlst
",N/A,0.464,1.554,0.000,0.000,0.096,10.745,0.000,12.985,6,6,0.047
question_4,100,0,wrong_4_218.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst
",N/A,0.461,0.031,0.000,0.000,0.052,1.046,0.000,1.658,6,6,0.258
question_4,100,0,wrong_4_299.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.468,0.000,0.000,0.000,0.008,0.048,0.000,0.541,6,6,0.312
question_4,100,0,wrong_4_276.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_143.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.463,1.567,0.000,0.000,0.097,15.348,0.000,17.613,6,6,0.234
question_4,100,0,wrong_4_062.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            final . append ( old )
            lst . remove ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            final . append ( old )
            lst . remove ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final


",{'sort_age': 'correct_4_126.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final
",N/A,0.465,1.423,0.000,0.000,0.069,0.014,0.000,2.132,6,6,0.091
question_4,100,0,wrong_4_296.py,success_w_mut,0,0,"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    for item in lst :
        if ( min ( ages ) == item [ 1 ] ) :
            output . append ( item )
            ages . remove ( age )
    return output


","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        pass
        for item in lst :
            pass
            if ( min ( ages ) == item [ 1 ] ) :
                age = max ( ages )
            output . append ( item )
            ages . remove ( age )
        pass
    return output
","def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    while ages :
        age = max ( ages )
        for item in lst :
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
    return output


",{'sort_age': 'correct_4_363.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ages = [ ]
    output = [ ]
    for item in lst :
        ages . append ( item [ 1 ] )
    pass
    while ages :
        age = max ( ages )
        for item in lst :
            pass
            if ( age == item [ 1 ] ) :
                output . append ( item )
                ages . remove ( age )
        pass
    return output
",N/A,7.517,2.709,0.000,0.001,0.130,26.899,0.000,37.412,6,6,0.283
question_4,100,0,wrong_4_346.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            tup = ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        pass
        for i in new :
            tup += tuple ( i )
            current = i [ 1 ]
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
            tup = ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        index = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                index += 1
        ref_new . insert ( index , ref_x )
    return ref_new
",N/A,6.552,2.982,0.000,0.001,0.065,0.246,0.000,9.966,6,6,0.814
question_4,100,0,wrong_4_353.py,success_w_mut,0,0,"def sort_age ( lst ) :
    A = map ( ( lambda x : x [ 1 ] ) , lst )
    a = [ ]
    counter = 0
    while ( counter < len ( lst ) ) :
        for i in A :
            if ( i > a [ 0 ] ) :
                a = i . extend ( a )
            elif ( i < a [ ( - 1 ) ] ) :
                a = a . extend ( i )
        counter += 1
    b = [ ]
    for i in a :
        for y in lst :
            if ( y [ 1 ] == i ) :
                b . append ( y )
    return b


","def sort_age ( lst ) :
    A = map ( ( lambda x : x [ 1 ] ) , lst )
    a = [ ]
    counter = 0
    while ( counter < len ( lst ) ) :
        pass
        for i in A :
            pass
            if ( i > a [ 0 ] ) :
                a = i . extend ( a )
                if False :
                    a = a . extend ( i )
                pass
            else :
                b = [ ]
            pass
        pass
        for y in lst :
            pass
            if ( y [ 1 ] == i ) :
                b . append ( y )
            pass
        pass
    return b
","

def sort_age(lst):
    newlst = []
    while lst:
        oldest = lst[0][1]
        for person in lst:
            if (person[1] > oldest):
                if False:
                    pass
                oldest = person[1]
            else:
                pass
        for person in lst:
            if (person[1] == oldest):
                newlst.append(person)
                lst.remove(person)
    return newlst
",{'sort_age': 'correct_4_069.py'},"{'sort_age': 'B1.g,B2.l'}","def sort_age ( a ) :
    A = [ ]
    while a :
        ref_oldest = a [ 0 ] [ 1 ]
        for ref_person in a :
            pass
            if ( ref_person [ 1 ] > ref_oldest ) :
                if False :
                    pass
                ref_oldest = ref_person [ 1 ]
            else :
                pass
            pass
        pass
        for ref_person in a :
            pass
            if ( ref_person [ 1 ] == ref_oldest ) :
                A . append ( ref_person )
                a . remove ( ref_person )
            pass
        pass
    return A
",N/A,13.007,4.079,0.000,0.002,0.104,11.075,0.000,28.889,6,6,0.867
question_4,100,0,wrong_4_235.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.471,0.000,0.000,0.000,0.008,0.051,0.000,0.535,0,6,N/A
question_4,100,0,wrong_4_012.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    old_lst = lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst


","def sort_age ( lst ) :
    old_lst = lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for i in a :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_145.py'},{'sort_age': ''},"def sort_age ( lst ) :
    old_lst = lst
    new_lst = [ ]
    while old_lst :
        largest = old_lst [ 0 ]
        for i in old_lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        old_lst . remove ( largest )
        new_lst . append ( largest )
    return new_lst
",N/A,0.466,1.541,0.000,0.000,0.154,0.180,0.000,2.456,6,6,0.171
question_4,100,0,wrong_4_036.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ j ] )
    return lst


","def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ j ] )
    return lst


","def sort_age ( lst ) :
    'selection sort: O(n^2) time'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst


",{'sort_age': 'correct_4_068.py'},{'sort_age': ''},"def sort_age ( lst ) :
    'selection sort'
    l = len ( lst )
    for i in range ( l ) :
        largest = lst [ i ]
        for j in range ( ( i + 1 ) , l ) :
            if ( lst [ j ] [ 1 ] > largest [ 1 ] ) :
                largest = lst [ j ]
                ( lst [ i ] , lst [ j ] ) = ( lst [ j ] , lst [ i ] )
    return lst
",N/A,0.467,0.257,0.000,0.000,0.112,0.748,0.000,2.192,6,6,0.014
question_4,100,0,wrong_4_058.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.001,0.000,0.000,0.009,0.008,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_150.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( [ lst [ i ] ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            lst . pop ( [ lst [ i ] ] )
        else :
            i += 1
    return lst


","def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst


",{'sort_age': 'correct_4_209.py'},{'sort_age': ''},"def sort_age ( lst ) :
    i = 0
    while ( ( i + 1 ) < len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            lst . extend ( [ lst [ i ] ] )
            del lst [ i ]
            i = 0
        else :
            i += 1
    return lst
",N/A,0.490,0.031,0.000,0.000,0.026,31.612,0.000,32.463,6,6,0.148
question_4,100,0,wrong_4_027.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 1 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 1 ]
        for element in lst :
            if ( element > biggest ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.463,1.206,0.000,0.000,0.089,5.708,0.000,7.569,6,6,0.184
question_4,100,0,wrong_4_177.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.470,0.001,0.000,0.000,0.008,0.004,0.000,0.488,6,6,0.050
question_4,100,0,wrong_4_088.py,fail_other,1,0,"def sort_age ( lst ) :
    holder = [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    ( males , females ) = ( [ ] , [ ] )
    for i in lst :
        if ( i [ 0 ] == 'M' ) :
            males = ( males + [ lst [ 0 ] ] )
        elif ( i [ 0 ] == 'F' ) :
            females = ( females + [ lst [ 0 ] ] )
        lst = lst [ 1 : ]
    return merge ( merge_sort ( males ) , merge_sort ( females ) )


",{'sort_age': 'correct_4_034.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ( ref_males , ref_females ) = ( [ ] , [ ] )
    for ref_i in lst :
        if ( ref_i [ 0 ] == 'M' ) :
            ref_males = ( ref_males + [ lst [ 0 ] ] )
        elif ( ref_i [ 0 ] == 'F' ) :
            ref_females = ( ref_females + [ lst [ 0 ] ] )
        lst = lst [ 1 : ]
    return merge ( merge_sort ( ref_males ) , merge_sort ( ref_females ) )
",N/A,0.468,0.028,0.000,0.000,0.578,0.548,0.000,1.629,0,6,N/A
question_4,100,0,wrong_4_300.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.001,0.000,0.000,0.008,0.157,0.000,0.638,6,6,0.375
question_4,100,0,wrong_4_266.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for x in lst :
            if ( x [ 1 ] < smallest ) :
                smallest = x
        lst . remove ( smallest )
        sort . append ( smallest )
        return lst


","def sort_age ( lst ) :
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for x in lst :
            if ( x [ 1 ] < smallest ) :
                smallest = x
        lst . remove ( smallest )
        sort . append ( smallest )
        return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for x in lst :
            if ( x [ 1 ] > smallest [ 1 ] ) :
                smallest = x
        lst . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.470,1.629,0.000,0.000,0.057,5.807,0.000,8.083,6,6,0.341
question_4,100,0,wrong_4_201.py,fail_other,0,0,"def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in lst :
        if ( i [ 1 ] > agelist [ 0 ] [ 1 ] ) :
            agelist . insert ( 0 , i )
        elif ( i [ 1 ] < agelist [ ( len ( agelist ) - 1 ) ] [ 1 ] ) :
            agelist . insert ( len ( agelist ) , i )
        else :
            for x in range ( 0 , len ( agelist ) ) :
                if ( agelist [ x ] [ 1 ] < i [ 1 ] < agelist [ ( x + 1 ) ] [ 1 ] ) :
                    agelist . insert ( ( x + 1 ) , i )
    return agelist


","def sort_age ( lst ) :
    agelist = [ lst [ 0 ] ]
    for i in lst :
        pass
    agelist . insert ( len ( agelist ) , i )
    for i in range ( len ( a ) ) :
        pass
        for x in range ( 0 , len ( agelist ) ) :
            pass
            if ( agelist [ x ] [ 1 ] < i [ 1 ] < agelist [ ( x + 1 ) ] [ 1 ] ) :
                pass
            pass
        pass
    return agelist
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    lst = lst . copy ( )
    lst . clear ( )
    for i in lst :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( lst [ i ] not in lst ) ) :
                lst . append ( lst [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.262,0.114,0.000,0.001,0.076,0.325,0.000,6.791,1,6,N/A
question_4,100,0,wrong_4_158.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.477,0.001,0.000,0.000,0.008,0.085,0.000,0.576,0,6,N/A
question_4,100,0,wrong_4_095.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.464,0.003,0.000,0.000,0.008,0.117,0.000,0.596,0,6,N/A
question_4,100,0,wrong_4_252.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) + 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    list1 = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in range ( 1 , ( len ( lst ) + 1 ) ) :
            if ( lst [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ i ] [ 1 ]
        lst . remove ( biggest )
        list1 . append ( biggest )
    return list1


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( list1 ) :
    ref_new_lst = [ ]
    while list1 :
        biggest = list1 [ 0 ]
        for i in range ( len ( list1 ) ) :
            if ( list1 [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = list1 [ i ]
        list1 . remove ( biggest )
        ref_new_lst . append ( biggest )
    return ref_new_lst
",N/A,0.461,1.812,0.000,0.000,0.061,22.858,0.000,25.490,6,6,0.279
question_4,100,0,wrong_4_119.py,success_w_mut,0,0,"def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    for x in lst [ 1 : ] :
        if ( x [ 1 ] > first ) :
            result = ( ( first , ) + ( x [ 1 ] , ) )
        else :
            result = ( ( x [ 1 ] , ) + ( first , ) )
    pass


","def sort_age ( lst ) :
    first = lst [ 0 ] [ 1 ]
    result = [ ]
    while lst :
        pass
        for x in lst [ 1 : ] :
            pass
            if ( x [ 1 ] > first ) :
                result = ( ( first , ) + ( x [ 1 ] , ) )
            result = ( ( x [ 1 ] , ) + ( first , ) )
        pass
    pass
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst [ 1 : ] :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_056.py'},{'sort_age': ''},"def sort_age ( lst ) :
    first = [ ]
    while lst :
        ref_oldest = lst [ 0 ]
        for ref_i in lst [ 1 : ] :
            pass
            if ( ref_i [ 1 ] > ref_oldest [ 1 ] ) :
                ref_oldest = ref_i
        lst . remove ( ref_oldest )
        first . append ( ref_oldest )
    return first
",N/A,6.648,3.616,0.000,0.001,5.100,0.446,0.000,16.002,6,6,0.906
question_4,100,0,wrong_4_268.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.511,0.001,0.000,0.000,0.008,0.008,0.000,0.532,6,6,0.050
question_4,100,0,wrong_4_075.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.468,0.001,0.000,0.000,0.008,0.004,0.000,0.486,6,6,0.050
question_4,100,0,wrong_4_196.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        new . append ( largest )
    return new


",{'sort_age': 'correct_4_214.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        new . append ( largest )
    return new
",N/A,0.462,1.608,0.000,0.000,0.094,15.341,0.000,17.644,6,6,0.234
question_4,100,0,wrong_4_219.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst


","def sort_age ( lst ) :
    output = [ ]
    for i in range ( len ( lst ) ) :
        largest = max ( lst , key = ( lambda p : p [ 1 ] ) )
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_001.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        max_num = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( max_num )
        new_lst . append ( max_num )
    return new_lst
",N/A,0.467,0.024,0.000,0.000,0.051,1.023,0.000,1.572,6,6,0.258
question_4,100,0,wrong_4_144.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.472,N/A,N/A,N/A
question_4,100,0,wrong_4_102.py,fail_other,1,0,"def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i > largest ) :
            largest = i
            sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    largest = lst [ 0 ] [ 1 ]
    sort1 = [ ]
    for i in lst :
        if ( i > largest ) :
            largest = i
            sort1 . append ( i )
    return sort1


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    sort1 = [ ]
    for i in range ( len ( lst ) ) :
        if True :
            largest = lst [ i ] [ 1 ]
            ref_b = func ( sort1 , largest )
            sort1 . insert ( ref_b , lst [ i ] )
    return list ( reversed ( sort1 ) )
",N/A,0.743,0.068,0.000,0.000,0.017,0.760,0.000,1.594,1,6,N/A
question_4,100,0,wrong_4_343.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.000,0.000,0.000,0.008,0.047,0.000,0.524,6,6,0.167
question_4,100,0,wrong_4_236.py,fail_exception,1,1,"def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        return ( [ largest_age ( lst ) ] + [ sort_age ( lst [ 1 : ] ) ] )
    pass


","def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        return ( [ largest_age ( lst ) ] + [ sort_age ( lst [ 1 : ] ) ] )
    pass


","def sort_age ( lst ) :
    def age ( i ) :
        return i [ 1 ]
    def position ( seq , ele ) :
        n = len ( seq )
        for i in range ( n ) :
            if ( seq [ i ] == ele ) :
                return i
    def largest_age ( seq ) :
        largest = age ( seq [ 0 ] )
        largest_pos = 0
        for i in seq :
            if ( age ( i ) > largest ) :
                largest = age ( i )
                largest_pos = position ( seq , i )
        return seq [ largest_pos ]
    n = len ( lst )
    final = [ ]
    if ( n == 0 ) :
        return [ ]
    elif ( n == 1 ) :
        return lst
    else :
        final = [ largest_age ( lst ) ]
        lst . remove ( largest_age ( lst ) )
        final = ( final + sort_age ( lst ) )
        return final


",{'sort_age': 'correct_4_296.py'},{'sort_age': ''},N/A,N/A,0.465,0.072,0.000,0.000,0.374,0.000,0.000,0.920,N/A,N/A,N/A
question_4,100,0,wrong_4_289.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        new_list = new_list . append ( i )
        lst . remove ( i )
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        new_list = new_list . append ( i )
        lst . remove ( i )
    return new_list


","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_356.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                ref_count = i
        new_list = ( new_list + [ ref_count ] )
        lst . remove ( ref_count )
        largest = 0
    return new_list
",N/A,0.463,1.292,0.000,0.000,0.125,5.671,0.000,7.692,6,6,0.286
question_4,100,0,wrong_4_033.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    return sort


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    sort . reverse ( )
    return sort


",{'sort_age': 'correct_4_013.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse
    sort . reverse ( )
    return sort
",N/A,0.469,0.588,0.000,0.000,0.162,0.351,0.000,1.731,6,6,0.080
question_4,100,0,wrong_4_030.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst1 . pop ( ) )
            else :
                result . append ( lst2 . pop ( ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


","def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result


",{'sort_age': 'correct_4_055.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( len ( lst ) == 0 ) :
        return [ ]
    elif ( len ( lst ) == 1 ) :
        return lst
    else :
        mid = ( len ( lst ) // 2 )
        lst1 = sort_age ( lst [ : mid ] )
        lst2 = sort_age ( lst [ mid : ] )
        result = [ ]
        while ( lst1 and lst2 ) :
            if ( lst1 [ 0 ] [ 1 ] < lst2 [ 0 ] [ 1 ] ) :
                result . append ( lst2 . pop ( 0 ) )
            else :
                result . append ( lst1 . pop ( 0 ) )
        result . extend ( lst1 )
        result . extend ( lst2 )
        return result
",N/A,0.468,0.092,0.000,0.000,0.132,3.693,0.000,5.784,6,6,0.041
question_4,100,0,wrong_4_294.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
        lst . remove ( i )
        sort . append ( i )
    return sort


","def sort_age ( lst ) :
    final = [ ]
    temp = 0
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                temp = i
        lst . remove ( temp )
        final . append ( temp )
    return final


",{'sort_age': 'correct_4_169.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] >= biggest ) :
                biggest = i [ 1 ]
                ref_temp = i
        lst . remove ( ref_temp )
        sort . append ( ref_temp )
    return sort
",N/A,0.466,1.681,0.000,0.000,0.156,10.626,0.000,13.095,6,6,0.106
question_4,100,0,wrong_4_115.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( lst == ( ) ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    if ( lst == ( ) ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out


",{'sort_age': 'correct_4_149.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    out = [ lst [ 0 ] ]
    for ele in lst [ 1 : ] :
        for indx in range ( len ( out ) ) :
            if ( out [ indx ] [ 1 ] < ele [ 1 ] ) :
                out . insert ( indx , ele )
                break
            elif ( indx == ( len ( out ) - 1 ) ) :
                out . append ( ele )
    return out
",N/A,0.465,0.047,0.000,0.000,0.052,0.083,0.000,1.138,6,6,0.014
question_4,100,0,wrong_4_163.py,success_w_mut,0,0,"def sort_age ( lst ) :
    lst = ( )
    for i in lst :
        if ( lst [ i ] [ 1 ] < lst [ 0 ] [ 1 ] ) :
            lst += lst [ 0 ]
        else :
            lst += lst [ i ]
    return lst


","def sort_age ( lst ) :
    lst = ( )
    for i in lst :
        pass
        for test in range ( len ( lst ) ) :
            lst += lst [ 0 ]
            if ( lst [ test ] [ 1 ] < lst [ item ] [ 1 ] ) :
                ( lst [ test ] , lst [ item ] ) = ( lst [ item ] , lst [ test ] )
            lst += lst [ i ]
        pass
    return lst
","def sort_age ( lst ) :
    for item in range ( len ( lst ) ) :
        for test in range ( len ( lst ) ) :
            if ( lst [ test ] [ 1 ] < lst [ item ] [ 1 ] ) :
                ( lst [ test ] , lst [ item ] ) = ( lst [ item ] , lst [ test ] )
    return lst


",{'sort_age': 'correct_4_195.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_item in range ( len ( lst ) ) :
        pass
        for test in range ( len ( lst ) ) :
            if ( lst [ test ] [ 1 ] < lst [ ref_item ] [ 1 ] ) :
                ( lst [ test ] , lst [ ref_item ] ) = ( lst [ ref_item ] , lst [ test ] )
        pass
    return lst
",N/A,6.612,2.763,0.000,0.001,0.032,0.014,0.000,9.678,6,6,0.628
question_4,100,0,wrong_4_141.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


","def sort_age ( lst ) :
    sort_list = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort_list . append ( biggest )
    return sort_list


",{'sort_age': 'correct_4_193.py'},{'sort_age': ''},"def sort_age ( sort_list ) :
    ref_sort_list = [ ]
    while sort_list :
        biggest = sort_list [ 0 ]
        for element in sort_list :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort_list . remove ( biggest )
        ref_sort_list . append ( biggest )
    return ref_sort_list
",N/A,0.771,1.000,0.000,0.000,0.058,22.830,0.000,24.787,6,6,0.205
question_4,100,0,wrong_4_162.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.466,0.001,0.000,0.000,0.008,0.008,0.000,0.488,6,6,0.050
question_4,100,0,wrong_4_055.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )


","def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )
    return result


",{'sort_age': 'correct_4_123.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while lst :
        oldest = lst [ 0 ]
        for people in lst :
            if ( people [ 1 ] > oldest [ 1 ] ) :
                oldest = people
        lst . remove ( oldest )
        result += ( oldest , )
    return result
",N/A,0.467,1.379,0.000,0.000,0.095,0.014,0.000,2.081,6,6,0.048
question_4,100,0,wrong_4_223.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        for i in lst :
            if ( i == max ( lst ) ) :
                a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        for i in lst :
            if ( i == max ( lst ) ) :
                a . append ( i )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        ref_biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= ref_biggest [ 1 ] ) :
                ref_biggest = i
        lst . remove ( ref_biggest )
        a . append ( ref_biggest )
    return a
",N/A,0.464,1.728,0.000,0.000,5.111,0.230,0.000,7.610,6,6,1.038
question_4,100,0,wrong_4_136.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    smallest = a [ 0 ] [ 1 ]
    while a :
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    smallest = a [ 0 ] [ 1 ]
    while a :
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ] [ 1 ]
        b = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element [ 1 ]
                b = element
        a . remove ( b )
        sort . append ( b )
    return sort


",{'sort_age': 'correct_4_190.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        smallest = a [ 0 ] [ 1 ]
        ref_b = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest ) :
                smallest = element [ 1 ]
                ref_b = element
        a . remove ( ref_b )
        sort . append ( ref_b )
    return sort
",N/A,0.464,1.635,0.000,0.000,0.153,10.772,0.000,13.196,6,6,0.391
question_4,100,0,wrong_4_001.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( result + [ lst [ index ] ] )
        lst . pop [ index ]
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( result + [ lst [ index ] ] )
        lst . pop [ index ]
    return result


","def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( [ lst [ index ] ] + result )
        lst . pop ( index )
    return result


",{'sort_age': 'correct_4_015.py'},{'sort_age': ''},"def sort_age ( lst ) :
    result = [ ]
    while ( lst != [ ] ) :
        lowest = lst [ 0 ] [ 1 ]
        index = 0
        for i in range ( 1 , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lowest ) :
                index = i
                lowest = lst [ i ] [ 1 ]
        result = ( [ lst [ index ] ] + result )
        lst . pop ( index )
    return result
",N/A,0.462,1.790,0.000,0.000,0.101,10.517,0.000,13.381,6,6,0.082
question_4,100,0,wrong_4_310.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( len ( ( lst - 1 ) ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] < lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.463,0.002,0.000,0.000,0.025,0.204,0.000,0.702,6,6,0.409
question_4,100,0,wrong_4_344.py,success_w_mut,0,0,"def sort_age ( lst ) :
    current = 0
    tup = ( )
    for i in lst :
        if ( i [ 1 ] > current ) :
            tup += tuple ( i )
            current = i [ 1 ]
        else :
            ( tuple ( i ) + tup )
    return tup


","def sort_age ( lst ) :
    current = 0
    tup = ( )
    while lst :
        new_list = [ ]
        largest = 0
        for i in lst :
            pass
            if ( i [ 1 ] > current ) :
                tup += tuple ( i )
                current = i [ 1 ]
            ( tuple ( i ) + tup )
        pass
    return tup
","def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                count = i
        new_list = ( new_list + [ count ] )
        lst . remove ( count )
        largest = 0
    return new_list


",{'sort_age': 'correct_4_355.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_list = [ ]
    largest = 0
    while lst :
        for i in lst :
            pass
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
                ref_count = i
        new_list = ( new_list + [ ref_count ] )
        lst . remove ( ref_count )
        largest = 0
    return new_list
",N/A,6.548,2.914,0.000,0.001,5.160,0.847,0.000,15.620,6,6,0.857
question_4,100,0,wrong_4_040.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    return sort_lst . reverse ( )


","def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    return sort_lst . reverse ( )


","def sort_age ( lst ) :
    s = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        s . append ( smallest )
    s . reverse ( )
    return s


",{'sort_age': 'correct_4_316.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort_lst = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort_lst . append ( smallest )
    sort_lst . reverse ( )
    return sort_lst
",N/A,0.768,1.560,0.000,0.000,0.098,0.066,0.000,2.628,6,6,0.065
question_4,100,0,wrong_4_352.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


","def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


","def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst


",{'sort_age': 'correct_4_409.py'},{'sort_age': ''},"def sort_age ( lst ) :
    while True :
        changed = False
        for i in range ( ( len ( lst ) - 1 ) ) :
            if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
                ( lst [ i ] , lst [ ( i + 1 ) ] ) = ( lst [ ( i + 1 ) ] , lst [ i ] )
                changed = True
        if ( not changed ) :
            break
    return lst
",N/A,0.461,0.024,0.000,0.000,0.052,0.020,0.000,1.390,6,6,0.014
question_4,100,0,wrong_4_153.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.467,0.000,0.000,0.000,0.008,0.050,0.000,0.531,0,6,N/A
question_4,100,0,wrong_4_151.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] < small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new . reverse


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new


",{'sort_age': 'correct_4_213.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        small = lst [ 0 ] [ 1 ]
        name = lst [ 0 ] [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > small ) :
                small = ele [ 1 ]
                name = ele [ 0 ]
        new . append ( ( name , small ) )
        lst . remove ( ( name , small ) )
    return new
",N/A,0.464,1.283,0.000,0.000,0.176,0.333,0.000,2.646,6,6,0.030
question_4,100,0,wrong_4_021.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < larget [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < larget [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


","def sort_age ( lst ) :
    product = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        product . append ( largest )
    return product


",{'sort_age': 'correct_4_019.py'},{'sort_age': ''},"def sort_age ( product ) :
    ref_product = [ ]
    while product :
        largest = product [ 0 ]
        for i in product :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        product . remove ( largest )
        ref_product . append ( largest )
    return ref_product
",N/A,0.477,1.353,0.000,0.000,0.057,22.841,0.000,24.854,6,6,0.227
question_4,100,0,wrong_4_049.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.465,0.000,0.000,0.000,0.008,0.048,0.000,0.526,0,6,N/A
question_4,100,0,wrong_4_097.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.459,0.001,0.000,0.000,0.008,0.008,0.000,0.480,6,6,0.050
question_4,100,0,wrong_4_188.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.000,0.000,0.000,0.008,0.047,0.000,0.522,6,6,0.167
question_4,100,0,wrong_4_096.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.461,0.000,0.000,0.000,0.008,0.121,0.000,0.595,6,6,0.111
question_4,100,0,wrong_4_182.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.001,0.000,0.000,0.008,0.084,0.000,0.575,6,6,0.136
question_4,100,0,wrong_4_316.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
    lst . remove ( largest )
    lst1 . append ( largest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i > largest ) :
                largest = i
    lst . remove ( largest )
    lst1 . append ( largest )
    return lst1


","def sort_age ( lst ) :
    lst1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        lst1 . append ( largest )
    return lst1


",{'sort_age': 'correct_4_370.py'},{'sort_age': ''},"def sort_age ( lst1 ) :
    ref_lst1 = [ ]
    while lst1 :
        largest = lst1 [ 0 ]
        for i in lst1 :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst1 . remove ( largest )
        ref_lst1 . append ( largest )
    return ref_lst1
",N/A,0.461,1.442,0.000,0.000,5.106,0.515,0.000,7.623,6,6,0.421
question_4,100,0,wrong_4_208.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.463,N/A,N/A,N/A
question_4,100,0,wrong_4_231.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i >= biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i >= biggest ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a


",{'sort_age': 'correct_4_289.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] >= biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        a . append ( biggest )
    return a
",N/A,0.460,1.259,0.000,0.000,0.106,0.143,0.000,2.074,6,6,0.158
question_4,100,0,wrong_4_020.py,success_w_mut,0,0,"def sort_age ( lst ) :
    new_lst = [ ]
    new_lst . append ( lst [ 0 ] )
    for i in lst [ 1 : ] :
        for j in range ( len ( new_lst ) ) :
            if ( ( i [ 1 ] > new_lst [ j ] [ 1 ] ) and ( j == 0 ) ) :
                new_lst . insert ( 0 , i )
            elif ( i [ 1 ] < new_lst [ j ] [ ( - 1 ) ] ) :
                new_lst . insert ( ( - 1 ) , i )
            elif ( i [ 1 ] > new_lst [ j ] [ 1 ] ) :
                new_lst . insert ( j , i )
    return new_lst


","def sort_age ( lst ) :
    new_lst = [ ]
    new_lst . append ( lst [ 0 ] )
    for i in lst [ 1 : ] :
        pass
        for j in range ( len ( new_lst ) ) :
            pass
            if ( ( i [ 1 ] > new_lst [ j ] [ 1 ] ) and ( j == 0 ) ) :
                new_lst . insert ( 0 , i )
                if True :
                    temp = lst [ j ]
                    lst [ j ] = lst [ ( j + 1 ) ]
                    lst [ ( j + 1 ) ] = temp
                new_lst . insert ( ( - 1 ) , i )
            elif ( i [ 1 ] > new_lst [ j ] [ 1 ] ) :
                new_lst . insert ( j , i )
            pass
        pass
    return new_lst
","

def sort_age(lst):
    l = len(lst)
    for i in range(0, l):
        for j in range(0, ((l - i) - 1)):
            if (lst[j][1] > lst[(j + 1)][1]):
                if True:
                    temp = lst[j]
                    lst[j] = lst[(j + 1)]
                    lst[(j + 1)] = temp
            elif False:
                pass
    return lst[::(- 1)]
",{'sort_age': 'correct_4_396.py'},"{'sort_age': 'B2.j,B1.f'}","def sort_age ( lst ) :
    new_lst = len ( lst )
    for i in range ( 0 , new_lst ) :
        pass
        for j in range ( 0 , ( ( new_lst - i ) - 1 ) ) :
            pass
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                if True :
                    temp = lst [ j ]
                    lst [ j ] = lst [ ( j + 1 ) ]
                    lst [ ( j + 1 ) ] = temp
            elif False :
                pass
            pass
        pass
    return lst [ : : ( - 1 ) ]
",N/A,10.130,0.705,0.000,0.002,0.147,0.528,0.000,13.019,6,6,0.940
question_4,100,0,wrong_4_180.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
        print ( a )
        print ( sort )


","def sort_age ( lst ) :
    a = lst
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in a :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        a . remove ( largest )
        sort . append ( largest )
    return sort


",{'sort_age': 'correct_4_084.py'},{'sort_age': ''},"def sort_age ( a ) :
    lst = a
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for item in lst :
            if ( item [ 1 ] > largest [ 1 ] ) :
                largest = item
        lst . remove ( largest )
        sort . append ( largest )
    return sort
",N/A,0.776,2.003,0.000,0.000,0.169,19.475,0.000,22.581,6,6,0.264
question_4,100,0,wrong_4_116.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.467,0.001,0.000,0.000,0.008,0.008,0.000,0.489,6,6,0.050
question_4,100,0,wrong_4_146.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    sorted = [ ]
    while lst :
        for elem in lst :
            if ( elem [ 1 ] < youngest ) :
                youngest = elem [ 1 ]
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    sorted = [ ]
    while lst :
        for elem in lst :
            if ( elem [ 1 ] < youngest ) :
                youngest = elem [ 1 ]
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > biggest [ 1 ] ) :
                biggest = elem
        lst . remove ( biggest )
        sorted . append ( biggest )
    return sorted


",{'sort_age': 'correct_4_212.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        ref_biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > ref_biggest [ 1 ] ) :
                ref_biggest = elem
        lst . remove ( ref_biggest )
        sorted . append ( ref_biggest )
    return sorted
",N/A,0.485,1.794,0.000,0.000,0.064,5.852,0.000,8.328,6,6,0.532
question_4,100,0,wrong_4_006.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                person = oldest
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_010.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for person in lst :
            if ( person [ 1 ] >= oldest [ 1 ] ) :
                oldest = person
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort
",N/A,0.467,1.098,0.000,0.000,0.109,0.152,0.000,1.952,6,6,0.045
question_4,100,0,wrong_4_105.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ] [ 1 ]
        for i in lst :
            if ( i [ 1 ] > largest ) :
                largest = i [ 1 ]
        lst . remove ( i )
        sort1 . append ( i )
    return sort1


","def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort1 . append ( largest )
    return sort1


",{'sort_age': 'correct_4_153.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort1 = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        sort1 . append ( largest )
    return sort1
",N/A,0.463,1.532,0.000,0.000,0.095,15.358,0.000,17.588,6,6,0.234
question_4,100,0,wrong_4_279.py,fail_other,1,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] > lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        if ( lst [ ( i + 1 ) ] [ 1 ] > lst [ i ] [ 1 ] ) :
            x = lst [ i ]
            lst [ i ] = lst [ ( i + 1 ) ]
            lst [ ( i + 1 ) ] = x
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            i = lst [ ref_i ] [ 1 ]
            x = func ( ref_newlist , i )
            ref_newlist . insert ( x , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.768,0.104,0.000,0.000,0.021,1.986,0.000,2.887,1,6,N/A
question_4,100,0,wrong_4_324.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.557,0.041,0.000,0.000,0.043,0.254,0.000,1.485,6,6,0.824
question_4,100,0,wrong_4_042.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.462,0.000,0.000,0.000,0.008,0.052,0.000,0.526,6,6,0.167
question_4,100,0,wrong_4_229.py,fail_other,1,0,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( [ item ] + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.610,0.082,0.000,0.000,0.019,1.853,0.000,2.572,1,6,N/A
question_4,100,0,wrong_4_132.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.463,0.001,0.000,0.000,0.008,0.004,0.000,0.482,6,6,0.050
question_4,100,0,wrong_4_063.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            lst . remove ( old )
            final . append ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
            lst . remove ( old )
            final . append ( old )
    return final


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final


",{'sort_age': 'correct_4_126.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        old = lst [ 0 ]
        for i in lst :
            if ( old [ 1 ] < i [ 1 ] ) :
                old = i
        lst . remove ( old )
        final . append ( old )
    return final
",N/A,0.467,0.947,0.000,0.000,0.069,0.014,0.000,1.659,6,6,0.045
question_4,100,0,wrong_4_193.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.465,0.001,0.000,0.000,0.009,0.008,0.000,0.487,6,6,0.048
question_4,100,0,wrong_4_259.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.468,0.001,0.000,0.000,0.008,0.008,0.000,0.489,6,6,0.050
question_4,100,0,wrong_4_171.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    lst . sort ( ( lambda x : x [ 1 ] ) )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.000,0.000,0.000,0.008,0.124,0.000,0.613,6,6,0.176
question_4,100,0,wrong_4_280.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.004,0.000,0.483,6,6,0.050
question_4,100,0,wrong_4_157.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new


",{'sort_age': 'correct_4_215.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new
",N/A,0.465,1.377,0.000,0.000,0.094,10.623,0.000,12.687,6,6,0.068
question_4,100,0,wrong_4_107.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
                smallest_tuple = k
        lst . remove ( k )
        sort . append ( k )


","def sort_age ( lst ) :
    smallest = lst [ 0 ] [ 1 ]
    sort = [ ]
    while lst :
        for k in lst :
            if ( k [ 1 ] < smallest ) :
                smallest = k [ 1 ]
                smallest_tuple = k
        lst . remove ( k )
        sort . append ( k )


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        element = lst [ 0 ]
        for ele in lst :
            if ( ele [ 1 ] > biggest ) :
                biggest = ele [ 1 ]
                element = ele
        lst . remove ( element )
        sort . append ( element )
    return sort


",{'sort_age': 'correct_4_038.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        ref_biggest = lst [ 0 ] [ 1 ]
        ref_element = lst [ 0 ]
        for ref_ele in lst :
            if ( ref_ele [ 1 ] > ref_biggest ) :
                ref_biggest = ref_ele [ 1 ]
                ref_element = ref_ele
        lst . remove ( ref_element )
        sort . append ( ref_element )
    return sort
",N/A,0.466,2.236,0.000,0.000,0.146,6.663,0.000,9.702,6,6,0.521
question_4,100,0,wrong_4_295.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            count = 0
            if ( lst [ i ] [ 1 ] >= biggest ) :
                biggest = lst [ i ] [ 1 ]
            else :
                i += 1
                count += 1
        lst . remove ( lst [ ( i - count ) ] )
        sort . append ( lst [ ( i - count ) ] )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            count = 0
            if ( lst [ i ] [ 1 ] >= biggest ) :
                biggest = lst [ i ] [ 1 ]
            else :
                i += 1
                count += 1
        lst . remove ( lst [ ( i - count ) ] )
        sort . append ( lst [ ( i - count ) ] )
    return sort


","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_137.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_slist = [ ]
    while sort :
        biggest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > biggest [ 1 ] ) :
                biggest = sort [ i ]
            else :
                continue
        ref_slist . append ( biggest )
        sort . remove ( biggest )
    return ref_slist
",N/A,0.492,0.156,0.000,0.000,0.107,9.517,0.000,10.681,6,6,0.550
question_4,100,0,wrong_4_233.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for element in lst :
            if ( element [ 1 ] < smallest ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for element in lst :
            if ( element [ 1 ] < smallest ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return lst


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.487,1.355,0.000,0.000,0.064,5.805,0.000,7.835,6,6,0.182
question_4,100,0,wrong_4_199.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.620,0.082,0.000,0.000,0.018,0.269,0.000,0.997,1,6,N/A
question_4,100,0,wrong_4_207.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.000,0.461,N/A,N/A,N/A
question_4,100,0,wrong_4_173.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ] [ 1 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < smallest ) :
                smallest = lst [ i ] [ 1 ]
        a . remove ( smallest )
        sort . append ( smallest )
        sort . reverse ( smallest )
        return sort


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_new_lst = [ ]
    while sort :
        smallest = sort [ 0 ]
        for i in range ( len ( sort ) ) :
            if ( sort [ i ] [ 1 ] > smallest [ 1 ] ) :
                smallest = sort [ i ]
        sort . remove ( smallest )
        ref_new_lst . append ( smallest )
    return ref_new_lst
",N/A,0.460,2.514,0.000,0.000,0.064,15.779,0.000,19.108,6,6,0.419
question_4,100,0,wrong_4_228.py,fail_other,1,0,"def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( item + lst )
    return lst


","def sort_age ( lst ) :
    youngest = lst [ 0 ] [ 1 ]
    for item in lst :
        if ( item [ 1 ] < youngest ) :
            youngest = item [ 1 ]
            lst . remove ( item )
            lst = ( item + lst )
    return lst


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        if True:
            age = lst[i][1]
            b = func(newlist, age)
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    ref_newlist = [ ]
    for ref_i in range ( len ( lst ) ) :
        if True :
            ref_age = lst [ ref_i ] [ 1 ]
            ref_b = func ( ref_newlist , ref_age )
            ref_newlist . insert ( ref_b , lst [ ref_i ] )
    return list ( reversed ( ref_newlist ) )
",N/A,0.618,0.080,0.000,0.000,0.018,1.791,0.000,2.514,1,6,N/A
question_4,100,0,wrong_4_211.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = test ( max )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = test ( max )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.306,0.050,0.000,0.001,0.066,17.493,0.000,27.204,6,6,0.847
question_4,100,0,wrong_4_051.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
        print ( final )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
        print ( final )


","def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
    return final


",{'sort_age': 'correct_4_106.py'},{'sort_age': ''},"def sort_age ( lst ) :
    final = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        final . append ( biggest )
    return final
",N/A,0.774,1.583,0.000,0.000,0.101,5.641,0.000,8.232,6,6,0.109
question_4,100,0,wrong_4_331.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                ( biggesr - i )
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for k in lst :
            if ( k [ 1 ] > biggest [ 1 ] ) :
                biggest = k
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_114.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > biggest [ 1 ] ) :
                biggest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.465,1.562,0.000,0.000,0.063,0.131,0.000,2.358,6,6,0.087
question_4,100,0,wrong_4_334.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( 1 , len ( lst ) ) :
        while ( lst [ i ] [ 1 ] < lst [ ( i - 1 ) ] [ 1 ] ) :
            lst . pop ( i )
            lst . insert ( ( i - 1 ) , lst [ i ] )
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( 1 , len ( lst ) ) :
        pass
        if False :
            lst . pop ( i )
            lst . insert ( ( i - 1 ) , lst [ i ] )
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.673,0.038,0.000,0.001,0.030,0.063,0.000,5.070,6,6,0.868
question_4,100,0,wrong_4_198.py,fail_other,1,0,"def sort_age ( lst ) :
    new_lst = [ ( ) ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","def sort_age ( lst ) :
    new_lst = [ ( ) ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < lst [ ( i + 1 ) ] [ 1 ] ) :
            new_lst . append ( lst [ i ] )
    lst . reverse ( )
    return lst
    pass


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        b = func(newlist, age)
        if True:
            newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.f'},"def sort_age ( lst ) :
    new_lst = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        ref_b = func ( new_lst , ref_age )
        if True :
            new_lst . insert ( ref_b , lst [ i ] )
    return list ( reversed ( new_lst ) )
",N/A,0.721,0.087,0.000,0.000,0.018,0.416,0.000,1.250,1,6,N/A
question_4,100,0,wrong_4_135.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    return sort_age ( lst )


","def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return new
    new = [ ]
    small = lst [ 0 ] [ 1 ]
    for i in range ( 1 , len ( lst ) ) :
        if ( lst [ i ] [ 1 ] < small ) :
            small = lst [ i ] [ 1 ]
    new . append ( small )
    lst . remove ( small )
    return sort_age ( lst )


","

def sort_age(lst):
    if ((len(lst) == 1) or (len(lst) == 0)):
        return lst
    temp = lst[0][1]
    count = 0
    for i in range(len(lst)):
        if (lst[i][1] > temp):
            temp = lst[i][1]
            count = i
    result = [lst[count]]
    pop = lst.pop(count)
    return (result + sort_age(lst))
    pass
",{'sort_age': 'correct_4_390.py'},{'sort_age': 'A1.a'},"def sort_age ( lst ) :
    if ( lst == [ ] ) :
        return lst
    ref_temp = lst [ 0 ] [ 1 ]
    small = 0
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 1 ] > ref_temp ) :
            ref_temp = lst [ i ] [ 1 ]
            small = i
    ref_result = [ lst [ small ] ]
    ref_pop = lst . pop ( small )
    return ( ref_result + sort_age ( lst ) )
    pass
",N/A,0.566,0.024,0.000,0.000,0.066,0.809,0.000,1.758,6,6,0.431
question_4,100,0,wrong_4_082.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.467,0.000,0.000,0.000,0.008,0.048,0.000,0.528,0,6,N/A
question_4,100,0,wrong_4_326.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            return newnew
        return newnew


","def sort_age ( lst ) :
    newnew = [ lst [ 0 ] ]
    for i in lst :
        for j in range ( len ( newnew ) ) :
            if ( i [ 1 ] > newnew [ j ] [ 1 ] ) :
                newnew . insert ( j , i )
            elif ( i [ 1 ] < newnew [ j ] [ 1 ] ) :
                newnew . insert ( ( j + 1 ) , i )
            return newnew
        return newnew


","

def sort_age(lst):
    for i in range(0, (len(lst) - 1)):
        for j in range((i + 1), len(lst)):
            if (lst[i][1] < lst[j][1]):
                tmp = lst[i]
                lst[i] = lst[j]
                lst[j] = tmp
            elif False:
                pass
    return lst
",{'sort_age': 'reference.py'},{'sort_age': 'B2.j'},"def sort_age ( lst ) :
    for i in range ( 0 , ( len ( lst ) - 1 ) ) :
        for j in range ( ( i + 1 ) , len ( lst ) ) :
            if ( lst [ i ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ref_tmp = lst [ i ]
                lst [ i ] = lst [ j ]
                lst [ j ] = ref_tmp
            elif False :
                pass
    return lst
",N/A,0.559,0.041,0.000,0.000,0.044,0.246,0.000,1.476,6,6,0.809
question_4,100,0,wrong_4_156.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < curr [ 1 ] ) :
                curr = i
        lst . remove ( i )
        new . append ( i )
    return new


","def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new


",{'sort_age': 'correct_4_215.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new = [ ]
    while lst :
        curr = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > curr [ 1 ] ) :
                curr = i
        lst . remove ( curr )
        new . append ( curr )
    return new
",N/A,0.462,1.399,0.000,0.000,0.094,10.620,0.000,12.583,6,6,0.068
question_4,100,0,wrong_4_013.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.466,0.000,0.000,0.000,0.008,0.049,0.000,0.529,0,6,N/A
question_4,100,0,wrong_4_213.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.465,0.001,0.000,0.000,0.008,0.008,0.000,0.487,6,6,0.050
question_4,100,0,wrong_4_191.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
    for element in lst :
        if ( element [ 1 ] > biggest [ 1 ] ) :
            biggest = element
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                sort = [ ]
            biggest = element
        pass
    lst . remove ( biggest )
    sort . append ( biggest )
    return sort
","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_318.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        biggest = sort [ 0 ]
        for element in sort :
            pass
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        sort . remove ( biggest )
        ref_sort . append ( biggest )
    return ref_sort
",N/A,7.086,0.689,0.000,0.001,5.106,0.551,0.000,13.443,6,6,0.250
question_4,100,0,wrong_4_209.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
            lst . remove ( smallest )
            sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in a :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
            lst . remove ( smallest )
            sort . append ( smallest )
    pass


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        smallest = sort [ 0 ]
        for element in sort :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        sort . remove ( smallest )
        ref_sort . append ( smallest )
    return ref_sort
",N/A,0.774,1.285,0.000,0.000,0.055,0.208,0.000,2.456,6,6,0.279
question_4,100,0,wrong_4_336.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( len ( lst ) == 1 ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


","def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass


",{'sort_age': 'correct_4_390.py'},{'sort_age': ''},"def sort_age ( lst ) :
    if ( ( len ( lst ) == 1 ) or ( len ( lst ) == 0 ) ) :
        return lst
    else :
        temp = lst [ 0 ] [ 1 ]
        count = 0
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > temp ) :
                temp = lst [ i ] [ 1 ]
                count = i
        result = [ lst [ count ] ]
        pop = lst . pop ( count )
        return ( result + sort_age ( lst ) )
    pass
",N/A,0.463,0.056,0.000,0.000,0.103,0.076,0.000,1.305,6,6,0.105
question_4,100,0,wrong_4_025.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element > biggest ) :
                smallest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


",{'sort_age': 'correct_4_131.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        biggest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > biggest [ 1 ] ) :
                biggest = element
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort
",N/A,0.462,1.257,0.000,0.000,0.121,0.290,0.000,2.232,6,6,0.184
question_4,100,0,wrong_4_305.py,fail_other,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.462,0.001,0.000,0.000,0.008,0.139,0.000,0.614,0,6,N/A
question_4,100,0,wrong_4_298.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    pass


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    pass


","def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    return a
    pass


",{'sort_age': 'correct_4_359.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        a . append ( oldest )
    return a
    pass
",N/A,0.463,1.220,0.000,0.000,0.096,0.015,0.000,1.921,6,6,0.047
question_4,100,0,wrong_4_317.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    print ( a )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    print ( sort )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    print ( a )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element < smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    print ( sort )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


","def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    sort = [ ]
    while a :
        largest = a [ 0 ]
        for element in a :
            if ( element > largest ) :
                largest = element
        a . remove ( largest )
        sort . append ( largest )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2


",{'sort_age': 'correct_4_217.py'},{'sort_age': ''},"def sort_age ( lst ) :
    a = [ ]
    for i in lst :
        a . append ( i [ 1 ] )
    sort = [ ]
    while a :
        smallest = a [ 0 ]
        for element in a :
            if ( element > smallest ) :
                smallest = element
        a . remove ( smallest )
        sort . append ( smallest )
    lst2 = [ ]
    counter = 0
    for i in sort :
        for j in lst :
            if ( j [ 1 ] == i ) :
                lst2 . append ( j )
                counter += 1
    return lst2
",N/A,0.469,0.073,0.000,0.000,0.760,0.371,0.000,2.203,6,6,0.101
question_4,100,0,wrong_4_018.py,success_w_mut,0,0,"def sort_age ( lst ) :
    sample = lst [ 0 ]
    newlst = [ ]
    for i in lst :
        if ( i [ 1 ] > sample [ 1 ] ) :
            newlst = ( [ i ] + newlst )
        else :
            newlst += [ i ]
    return newlst


","def sort_age ( lst ) :
    sample = lst [ 0 ]
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            pass
            if ( i [ 1 ] > sample [ 1 ] ) :
                newlst = ( [ i ] + newlst )
            newlst += [ i ]
        pass
    return newlst
","def sort_age ( lst ) :
    newlst = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        newlst . append ( maximum )
        lst . remove ( maximum )
    return newlst


",{'sort_age': 'correct_4_266.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sample = [ ]
    while lst :
        maximum = lst [ 0 ]
        for i in lst :
            pass
            if ( i [ 1 ] > maximum [ 1 ] ) :
                maximum = i
        sample . append ( maximum )
        lst . remove ( maximum )
    return sample
",N/A,6.620,2.602,0.000,0.001,5.107,0.545,0.000,14.996,6,6,0.780
question_4,100,0,wrong_4_090.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( [ holder ] + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.709,0.053,0.000,0.000,0.051,0.051,0.000,1.021,6,6,0.160
question_4,100,0,wrong_4_281.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] ) = ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] ) = ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.464,0.026,0.000,0.000,0.027,0.200,0.000,1.545,6,6,0.386
question_4,100,0,wrong_4_350.py,fail_other,1,0,"def sort_age ( lst ) :
    result = [ ]
    for i in lst :
        result += [ i [ : : ( - 1 ) ] ]
    result . sort ( )
    result . reverse ( )
    ans = [ ]
    for i in result :
        ans += [ i [ : : ( - 1 ) ] ]
    return ans


","def sort_age ( lst ) :
    result = [ ]
    for i in lst :
        result += [ i [ : : ( - 1 ) ] ]
    result . sort ( )
    result . reverse ( )
    ans = [ ]
    for i in result :
        ans += [ i [ : : ( - 1 ) ] ]
    return ans


","

def sort_age(lst):
    output = []
    for i in range(len(lst))[:int((len(range(len(lst))) / 2))]:
        largest = max(lst, key=(lambda p: p[1]))
        lst.remove(largest)
        output.append(largest)
    for i in range(len(lst))[int((len(range(len(lst))) / 2)):]:
        largest = max(lst, key=(lambda p: p[1]))
        lst.remove(largest)
        output.append(largest)
    return output
",{'sort_age': 'correct_4_001.py'},{'sort_age': 'E1.z'},"def sort_age ( lst ) :
    ref_output = [ ]
    for i in range ( len ( lst ) ) [ : int ( ( len ( range ( len ( lst ) ) ) / 2 ) ) ] :
        ref_largest = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( ref_largest )
        ref_output . append ( ref_largest )
    for i in range ( len ( lst ) ) [ int ( ( len ( range ( len ( lst ) ) ) / 2 ) ) : ] :
        ref_largest = max ( lst , key = ( lambda ref_p : ref_p [ 1 ] ) )
        lst . remove ( ref_largest )
        ref_output . append ( ref_largest )
    return ref_output
",N/A,0.583,0.022,0.000,0.000,0.048,0.338,0.000,0.999,2,6,N/A
question_4,100,0,wrong_4_234.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
            lst . remove ( oldest )
            sorted . append ( oldest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
            lst . remove ( oldest )
            sorted . append ( oldest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted . append ( oldest )
    return sorted


",{'sort_age': 'correct_4_261.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        oldest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > oldest [ 1 ] ) :
                oldest = element
        lst . remove ( oldest )
        sorted . append ( oldest )
    return sorted
",N/A,0.463,1.304,0.000,0.000,0.070,0.014,0.000,1.987,6,6,0.045
question_4,100,0,wrong_4_067.py,fail_other,1,0,"def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return lst . sort ( key = ( lambda x : x [ 1 ] ) )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]
",N/A,0.489,0.000,0.000,0.000,0.008,0.048,0.000,0.550,0,6,N/A
question_4,100,0,wrong_4_313.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.460,0.004,0.000,0.000,0.009,0.008,0.000,0.507,6,6,0.040
question_4,100,0,wrong_4_301.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) )
    lst . reverse ( )
    print ( lst )


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( )
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
    pass
",N/A,0.462,0.001,0.000,0.000,0.008,0.154,0.000,0.650,6,6,0.542
question_4,100,0,wrong_4_089.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    return ( holder + sort_age ( lst [ 1 : ] ) )


","def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )


",{'sort_age': 'correct_4_053.py'},{'sort_age': ''},"def sort_age ( lst ) :
    holder = [ ]
    if ( lst == [ ] ) :
        return [ ]
    for x in lst :
        if ( holder == [ ] ) :
            holder = x
        elif ( x [ 1 ] > holder [ 1 ] ) :
            holder = x
    lst . remove ( holder )
    return ( [ holder ] + sort_age ( lst ) )
",N/A,0.467,0.054,0.000,0.000,0.051,0.050,0.000,0.776,6,6,0.184
question_4,100,0,wrong_4_047.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] < smallest [ 1 ] ) :
                smallest = i
        lst . remove ( i )
        output . append ( i )
    return output


","def sort_age ( lst ) :
    output = [ ]
    while lst :
        largest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > largest [ 1 ] ) :
                largest = i
        lst . remove ( largest )
        output . append ( largest )
    return output


",{'sort_age': 'correct_4_097.py'},{'sort_age': ''},"def sort_age ( lst ) :
    output = [ ]
    while lst :
        smallest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > smallest [ 1 ] ) :
                smallest = i
        lst . remove ( smallest )
        output . append ( smallest )
    return output
",N/A,0.461,1.600,0.000,0.000,0.096,10.630,0.000,12.915,6,6,0.068
question_4,100,0,wrong_4_260.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] < smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort


",{'sort_age': 'correct_4_005.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        sort . append ( smallest )
    return sort
",N/A,0.465,0.834,0.000,0.000,0.097,0.147,0.000,1.670,6,6,0.023
question_4,100,0,wrong_4_282.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ( len ( lst ) - 1 ) - i ) ) :
            if ( lst [ j ] [ 1 ] > lst [ ( j + 1 ) ] [ 1 ] ) :
                ( lst [ j ] [ 1 ] , lst [ ( j + 1 ) ] [ 1 ] ) = ( lst [ ( j + 1 ) ] [ 1 ] , lst [ j ] [ 1 ] )
            else :
                continue
    return lst
    pass


","def sort_age ( lst ) :
    for k in range ( ( len ( lst ) - 1 ) ) :
        for i in range ( ( k + 1 ) , len ( lst ) ) :
            if ( lst [ k ] [ 1 ] < lst [ i ] [ 1 ] ) :
                ( lst [ k ] , lst [ i ] ) = ( lst [ i ] , lst [ k ] )
            else :
                continue
    return lst


",{'sort_age': 'correct_4_262.py'},{'sort_age': ''},"def sort_age ( lst ) :
    for ref_k in range ( ( len ( lst ) - 1 ) ) :
        for j in range ( ( ref_k + 1 ) , len ( lst ) ) :
            if ( lst [ ref_k ] [ 1 ] < lst [ j ] [ 1 ] ) :
                ( lst [ ref_k ] , lst [ j ] ) = ( lst [ j ] , lst [ ref_k ] )
            else :
                continue
    return lst
    pass
",N/A,0.469,0.026,0.000,0.000,0.028,0.192,0.000,1.545,6,6,0.386
question_4,100,0,wrong_4_065.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = a [ 0 ]
        for element in a :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


","def sort_age ( lst ) :
    rslt = [ ]
    while lst :
        smallest = lst [ 0 ]
        for element in lst :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        lst . remove ( smallest )
        rslt . append ( smallest )
    return rslt


",{'sort_age': 'correct_4_024.py'},{'sort_age': ''},"def sort_age ( rslt ) :
    ref_rslt = [ ]
    while rslt :
        smallest = rslt [ 0 ]
        for element in rslt :
            if ( element [ 1 ] > smallest [ 1 ] ) :
                smallest = element
        rslt . remove ( smallest )
        ref_rslt . append ( smallest )
    return ref_rslt
",N/A,0.490,1.009,0.000,0.000,0.055,26.936,0.000,28.618,6,6,0.182
question_4,100,0,wrong_4_038.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.464,0.001,0.000,0.000,0.008,0.008,0.000,0.486,6,6,0.050
question_4,100,0,wrong_4_069.py,fail_other,1,0,"def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","def sort_age ( lst ) :
    store = [ ]
    oldest = lst [ 0 ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > oldest [ 1 ] ) :
            oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


","

def sort_age(lst):
    newlist = []
    for i in range(len(lst)):
        age = lst[i][1]
        if False:
            pass
        b = func(newlist, age)
        newlist.insert(b, lst[i])
    return list(reversed(newlist))
",{'sort_age': 'correct_4_386.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    store = [ ]
    for i in range ( len ( lst ) ) :
        ref_age = lst [ i ] [ 1 ]
        if False :
            pass
        ref_b = func ( store , ref_age )
        store . insert ( ref_b , lst [ i ] )
    return list ( reversed ( store ) )
",N/A,0.743,0.084,0.000,0.000,0.020,0.454,0.000,1.306,1,6,N/A
question_4,100,0,wrong_4_127.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( biggest )
        sort . append ( biggest )
    return sort


","def sort_age ( lst ) :
    sort = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in lst :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        lst . remove ( oldest )
        sort . append ( oldest )
    return sort


",{'sort_age': 'correct_4_342.py'},{'sort_age': ''},"def sort_age ( sort ) :
    ref_sort = [ ]
    while sort :
        oldest = sort [ 0 ]
        for i in sort :
            if ( i [ 1 ] > oldest [ 1 ] ) :
                oldest = i
        sort . remove ( oldest )
        ref_sort . append ( oldest )
    return ref_sort
",N/A,0.463,1.095,0.000,0.000,0.064,5.711,0.000,7.460,6,6,0.227
question_4,100,0,wrong_4_092.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    answer = [ ]
    for i in range ( 0 , len ( lst ) , ( - 1 ) ) :
        biggest = lst [ i ]
        for a in range ( i ) :
            if ( lst [ a ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ a ]
        answer += biggest
    return answer


","def sort_age ( lst ) :
    answer = [ ]
    for i in range ( 0 , len ( lst ) , ( - 1 ) ) :
        biggest = lst [ i ]
        for a in range ( i ) :
            if ( lst [ a ] [ 1 ] > biggest [ 1 ] ) :
                biggest = lst [ a ]
        answer += biggest
    return answer


","def sort_age ( lst ) :
    new = [ ]
    for x in lst :
        index = 0
        for i in new :
            if ( x [ 1 ] < i [ 1 ] ) :
                index += 1
        new . insert ( index , x )
    return new


",{'sort_age': 'correct_4_407.py'},{'sort_age': ''},"def sort_age ( lst ) :
    ref_new = [ ]
    for ref_x in lst :
        biggest = 0
        for i in ref_new :
            if ( ref_x [ 1 ] < i [ 1 ] ) :
                biggest += 1
        ref_new . insert ( biggest , ref_x )
    return ref_new
",N/A,0.468,0.638,0.000,0.000,0.062,0.684,0.000,2.010,6,6,0.655
question_4,100,0,wrong_4_043.py,fail_other,0,0,"def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        if ( i [ 1 ] > result [ 0 ] [ 1 ] ) :
            result . insert ( 0 , i )
        elif ( i [ 1 ] < result [ ( - 1 ) ] [ 1 ] ) :
            result . append ( i )
        else :
            for j in range ( ( len ( result ) - 1 ) ) :
                if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                    result . insert ( j , i )
    return result


","def sort_age ( lst ) :
    result = [ lst [ 0 ] ]
    for i in lst [ 1 : ] :
        pass
    result . append ( i )
    for i in range ( len ( a ) ) :
        pass
        for j in range ( ( len ( result ) - 1 ) ) :
            pass
            if ( ( i [ 1 ] < result [ j ] [ 1 ] ) and ( i [ 1 ] > result [ ( j + 1 ) ] [ 1 ] ) ) :
                pass
            pass
        pass
    return result
","

def sort_age(lst):
    a = []
    b = lst.copy()
    lst.clear()
    for i in b:
        a += [i[1]]
    for i in range(len(a)):
        for i in range(len(a)):
            if ((a[i] == min(a)) and (b[i] not in lst)):
                lst.append(b[i])
                a[i] = (max(a) + 1)
    lst.reverse()
    return lst
",{'sort_age': 'correct_4_369.py'},{'sort_age': 'A2.c'},"def sort_age ( lst ) :
    ref_a = [ ]
    lst = lst . copy ( )
    lst . clear ( )
    for i in lst :
        ref_a += [ i [ 1 ] ]
    for i in range ( len ( ref_a ) ) :
        pass
        for i in range ( len ( ref_a ) ) :
            pass
            if ( ( ref_a [ i ] == min ( ref_a ) ) and ( lst [ i ] not in lst ) ) :
                lst . append ( lst [ i ] )
                ref_a [ i ] = ( max ( ref_a ) + 1 )
            pass
        pass
    lst . reverse ( )
    return lst
",N/A,6.290,0.114,0.000,0.002,0.074,0.332,0.000,6.824,1,6,N/A
question_4,100,0,wrong_4_212.py,success_w_mut,0,0,"def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        for counter in range ( n ) :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
        n = len ( lst )
    return result


","def sort_age ( lst ) :
    n = len ( lst )
    result = [ ]
    while ( n != 0 ) :
        test = [ ]
        if True :
            test . append ( lst [ counter ] [ 1 ] )
        first = max ( test )
        for counter in range ( n ) :
            pass
            if ( lst [ counter ] [ 1 ] == first ) :
                result . append ( lst . pop ( counter ) )
            pass
        n = len ( lst )
    return result
","

def sort_age(lst):
    new_lst = []
    while lst:
        if True:
            pass
        largest = lst[0]
        for element in lst:
            if (largest[1] < element[1]):
                largest = element
        lst.remove(largest)
        new_lst.append(largest)
    return new_lst
",{'sort_age': 'correct_4_229.py'},{'sort_age': 'B1.h'},"def sort_age ( result ) :
    ref_new_lst = [ ]
    while result :
        if True :
            pass
        ref_largest = result [ 0 ]
        for ref_element in result :
            pass
            if ( ref_largest [ 1 ] < ref_element [ 1 ] ) :
                ref_largest = ref_element
            pass
        result . remove ( ref_largest )
        ref_new_lst . append ( ref_largest )
    return ref_new_lst
",N/A,9.329,0.032,0.000,0.001,0.066,17.486,0.000,26.927,6,6,0.847
question_4,100,0,wrong_4_189.py,success_wo_mut,1,0,"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst


","def sort_age ( lst ) :
    return quicksort ( lst , ( lambda x : x [ 1 ] ) ) [ : : ( - 1 ) ]


",{'sort_age': 'correct_4_012.py'},{'sort_age': ''},"def sort_age ( lst ) :
    lst . sort ( key = ( lambda x : x [ 1 ] ) , reverse = True )
    return lst
",N/A,0.475,0.000,0.000,0.000,0.008,0.008,0.000,0.497,6,6,0.050
question_4,100,0,wrong_4_220.py,success_w_mut,0,0,"def sort_age ( lst ) :
    male = [ ]
    female = [ ]
    for i in range ( len ( lst ) ) :
        if ( lst [ i ] [ 0 ] == 'M' ) :
            male . append ( lst [ i ] )
        else :
            female . append ( lst [ i ] )
    male . sort ( )
    female . sort ( )
    combine = ( male [ : : ( - 1 ) ] + female [ : : ( - 1 ) ] )
    return combine


","def sort_age ( lst ) :
    male = [ ]
    female = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ i ] [ 0 ] == 'M' ) :
                male . append ( lst [ i ] )
            else :
                pass
            female . append ( lst [ i ] )
        pass
    male . sort ( )
    female . sort ( )
    combine = ( male [ : : ( - 1 ) ] + female [ : : ( - 1 ) ] )
    return combine
","def sort_age ( lst ) :
    slist = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        slist . append ( elder )
        lst . remove ( elder )
    return slist


",{'sort_age': 'correct_4_413.py'},{'sort_age': ''},"def sort_age ( lst ) :
    male = [ ]
    female = [ ]
    while lst :
        elder = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            pass
            if ( lst [ i ] [ 1 ] > elder [ 1 ] ) :
                elder = lst [ i ]
            else :
                continue
        female . append ( elder )
        lst . remove ( elder )
    return female
",N/A,6.628,4.268,0.000,0.002,5.121,1.675,0.000,18.010,6,6,0.657
question_4,100,0,wrong_4_081.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    print ( new_lst )


","def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] > oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst


",{'sort_age': 'correct_4_118.py'},{'sort_age': ''},"def sort_age ( lst ) :
    new_lst = [ ]
    while lst :
        oldest = lst [ 0 ]
        for i in range ( len ( lst ) ) :
            if ( lst [ i ] [ 1 ] >= oldest [ 1 ] ) :
                oldest = lst [ i ]
        lst . remove ( oldest )
        new_lst . append ( oldest )
    return new_lst
",N/A,0.776,1.141,0.000,0.000,0.103,0.074,0.000,2.349,6,6,0.054
question_4,100,0,wrong_4_100.py,success_w_mut,0,0,"def sort_age ( lst ) :
    for i in range ( ( len ( lst ) - 1 ) ) :
        while ( lst [ i ] [ 1 ] > lst [ ( i + 1 ) ] [ 1 ] ) :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
    return lst . reverse ( )


","def sort_age ( lst ) :
    pass
    for i in range ( ( len ( lst ) - 1 ) ) :
        pass
        if False :
            temp = lst [ i ]
            del lst [ i ]
            lst += [ temp ]
        pass
    return lst . reverse ( )
","

def sort_age(lst):
    for (i, e) in enumerate(lst):
        mx = max(range(i, len(lst)), key=(lambda x: lst[x][1]))
        if False:
            pass
        (lst[i], lst[mx]) = (lst[mx], e)
    return lst
",{'sort_age': 'correct_4_245.py'},{'sort_age': 'B1.g'},"def sort_age ( lst ) :
    pass
    for ( i , ref_e ) in enumerate ( lst ) :
        ref_mx = max ( range ( i , len ( lst ) ) , key = ( lambda ref_x : lst [ ref_x ] [ 1 ] ) )
        if False :
            pass
        ( lst [ i ] , lst [ ref_mx ] ) = ( lst [ ref_mx ] , ref_e )
    return lst
",N/A,4.636,0.036,0.000,0.001,0.031,0.065,0.000,5.041,6,6,0.800
question_4,100,0,wrong_4_147.py,success_wo_mut,1,1,"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] < youngest [ 1 ] ) :
                youngest = elem
        print ( youngest )
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] < youngest [ 1 ] ) :
                youngest = elem
        print ( youngest )
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted


","def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        biggest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > biggest [ 1 ] ) :
                biggest = elem
        lst . remove ( biggest )
        sorted . append ( biggest )
    return sorted


",{'sort_age': 'correct_4_212.py'},{'sort_age': ''},"def sort_age ( lst ) :
    sorted = [ ]
    while lst :
        youngest = lst [ 0 ]
        for elem in lst :
            if ( elem [ 1 ] > youngest [ 1 ] ) :
                youngest = elem
        lst . remove ( youngest )
        sorted . append ( youngest )
    return sorted
",N/A,0.773,1.667,0.000,0.000,0.101,0.208,0.000,2.885,6,6,0.104
